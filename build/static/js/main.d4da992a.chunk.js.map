{"version":3,"sources":["assets/jss/material-dashboard-react.js","assets/jss/material-dashboard-react/components/buttonStyle.js","components/CustomButtons/Button.js","assets/jss/material-dashboard-react/dropdownStyle.js","assets/jss/material-dashboard-react/components/headerLinksStyle.js","components/Navbars/AdminNavbarLinks.js","assets/jss/material-dashboard-react/components/customInputStyle.js","components/CustomInput/CustomInput.js","assets/jss/material-dashboard-react/components/rtlHeaderLinksStyle.js","components/Navbars/RTLNavbarLinks.js","components/Grid/GridItem.js","components/Grid/GridContainer.js","assets/jss/material-dashboard-react/components/cardStyle.js","components/Card/Card.js","assets/jss/material-dashboard-react/components/cardHeaderStyle.js","components/Card/CardHeader.js","assets/jss/material-dashboard-react/components/cardIconStyle.js","components/Card/CardIcon.js","assets/jss/material-dashboard-react/components/cardFooterStyle.js","components/Card/CardFooter.js","assets/jss/material-dashboard-react/views/dashboardStyle.js","views/Dashboard/Dashboard.js","Domain.js","assets/jss/material-dashboard-react/components/tableStyle.js","components/Loader/Loader.js","components/Table/Table.js","assets/jss/material-dashboard-react/components/cardBodyStyle.js","components/Card/CardBody.js","assets/jss/material-dashboard-react/components/snackbarContentStyle.js","components/Snackbar/Snackbar.js","assets/jss/material-dashboard-react/components/typographyStyle.js","components/Typography/Danger.js","assets/jss/material-dashboard-react/components/customFileInputStyle.js","components/CustomFileInput/CustomFileInput.js","assets/jss/material-dashboard-react/components/paginationStyle.js","components/Pagination/Pagination.js","views/Slideshow/Slideshow.js","views/Events/Events.js","views/Gallery/Gallery.js","views/Courses/Courses.js","views/Testimonials/Testimonials.js","components/SingleSelect.js","views/Students/Students.js","views/Publications/Publications.js","views/Subjects/Subjects.js","views/Semester/Semester.js","views/InternalMarks/InternalMarks.js","views/InternalsNotification/InternalsNotification.js","views/Placements/Placements.js","views/Enquiry/Enquiry.js","views/Departments/Departments.js","views/Admin/Admin.js","assets/jss/material-dashboard-react/components/navPillsStyle.js","components/NavPills/NavPills.js","assets/jss/material-dashboard-react/components/accordionStyle.js","components/Accordion/Accordion.js","views/Admission/Admission.js","components/EmptyTable.js","views/Clubs/Clubs.js","views/Facilities/Facilities.js","views/Management/Management.js","views/Sfatts/Staffs.js","components/Typography/Success.js","views/SendSMS/SendSMS.js","routes.js","assets/jss/material-dashboard-react/components/headerStyle.js","components/Navbars/Navbar.js","hooks/useRouteName.js","assets/jss/material-dashboard-react/components/footerStyle.js","components/Footer/Footer.js","assets/jss/material-dashboard-react/components/sidebarStyle.js","components/Sidebar/Sidebar.js","assets/jss/material-dashboard-react/layouts/adminStyle.js","layouts/Admin.js","assets/img/favicon.png","layouts/LoginPage/LoginPage.js","StaffRoutes.js","layouts/StaffsLayout.js","HodRoutes.js","layouts/HodLayout.js","assets/jss/material-dashboard-react/components/cardAvatarStyle.js","components/Card/CardAvatar.js","assets/img/placeholder.jpg","views/UserProfile/UserProfile.js","App.js","index.js"],"names":["hexToRgb","input","replace","test","length","Error","first","second","last","toUpperCase","parseInt","drawerWidth","transition","container","paddingRight","paddingLeft","marginRight","marginLeft","defaultFont","fontFamily","fontWeight","lineHeight","primaryColor","warningColor","dangerColor","successColor","infoColor","roseColor","grayColor","blackColor","whiteColor","boxShadow","primaryBoxShadow","infoBoxShadow","successBoxShadow","warningBoxShadow","dangerBoxShadow","roseBoxShadow","warningCardHeader","background","successCardHeader","dangerCardHeader","infoCardHeader","primaryCardHeader","roseCardHeader","defaultBoxShadow","margin","paddingTop","borderTop","height","border","borderRadius","padding","title","color","textDecoration","marginTop","marginBottom","minHeight","buttonStyle","button","minWidth","backgroundColor","position","fontSize","textTransform","letterSpacing","willChange","textAlign","whiteSpace","verticalAlign","touchAction","cursor","display","top","width","transform","left","white","rose","primary","info","success","warning","danger","simple","transparent","disabled","opacity","pointerEvents","lg","sm","round","block","link","justIcon","useStyles","makeStyles","styles","RegularButton","props","classes","children","size","className","muiClasses","rest","btnClasses","classNames","Button","dropdownStyle","theme","buttonLink","breakpoints","down","links","zIndex","linkText","popperClose","popperResponsive","float","WebkitBoxShadow","popperNav","dropdown","listStyle","WebkitBackgroundClip","backgroundClip","dropdownItem","WebkitTransition","MozTransition","OTransition","MsTransition","clear","headerLinksStyle","search","paddingBottom","justifyContent","searchButton","searchIcon","notifications","up","right","manager","searchWrapper","AdminNavbarLinks","setLoggedin","console","log","React","useState","openNotification","setOpenNotification","openProfile","setOpenProfile","handleCloseNotification","handleCloseProfile","handleLogout","to","item","window","innerWidth","icons","Hidden","mdUp","implementation","onClick","event","contains","target","currentTarget","Popper","open","Boolean","anchorEl","disablePortal","TransitionProps","placement","Grow","id","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","role","MenuItem","Divider","light","customInputStyle","underline","borderColor","borderWidth","underlineError","underlineSuccess","labelRoot","labelRootError","labelRootSuccess","feedback","formControl","labelRTL","CustomInput","formControlProps","labelText","labelProps","inputProps","error","rtlActive","value","onChange","type","labelClasses","underlineClasses","undefined","newInputProps","maxLength","minLength","step","FormControl","InputLabel","htmlFor","Input","root","RTLNavbarLinks","setOpen","handleToggle","handleClose","placeholder","grid","GridItem","Grid","GridContainer","cardStyle","card","flexDirection","wordWrap","cardPlain","cardProfile","cardChart","Card","plain","profile","chart","cardClasses","cardHeaderStyle","cardHeader","borderBottom","overflow","cardHeaderPlain","cardHeaderStats","cardHeaderIcon","CardHeader","stats","icon","cardHeaderClasses","cardIconStyle","cardIcon","CardIcon","cardIconClasses","cardFooterStyle","cardFooter","alignItems","cardFooterProfile","cardFooterPlain","cardFooterStats","cardFooterChart","CardFooter","cardFooterClasses","dashboardStyle","successText","upArrowCardCategory","cardCategory","cardCategoryWhite","cardTitle","cardTitleWhite","Dashboard","xs","md","Icon","Domain","tableStyle","warningTableHeader","primaryTableHeader","dangerTableHeader","successTableHeader","infoTableHeader","roseTableHeader","grayTableHeader","table","maxWidth","borderSpacing","borderCollapse","tableHeadCell","tableCell","tableCellImage","tableResponsive","spacing","overflowX","tableHeadRow","outline","tableBodyRow","useStylesFacebook","bottom","palette","grey","animationDuration","circle","strokeLinecap","FacebookCircularProgress","CircularProgress","variant","thickness","disableShrink","flexGrow","Loader","CustomTable","tableHead","tableData","tableHeaderColor","setEdit","setDelete","loading","justify","Table","TableHead","TableRow","map","prop","key","TableCell","TableBody","src","Image","alt","Object","values","Id","defaultProps","cardBodyStyle","cardBody","flex","WebkitBoxFlex","cardBodyPlain","cardBodyProfile","CardBody","cardBodyClasses","snackbarContentStyle","flexWrap","top20","top40","message","close","iconButton","infoIcon","successIcon","warningIcon","dangerIcon","primaryIcon","roseIcon","iconMessage","actionRTL","Snackbar","place","action","messageClasses","IconButton","closeNotification","anchorOrigin","vertical","indexOf","horizontal","ContentProps","typographyStyle","defaultFontStyle","defaultHeaderMargins","quote","borderLeft","quoteText","fontStyle","quoteAuthor","mutedText","primaryText","infoText","warningText","dangerText","Danger","customFileInputStyle","inputFile","inputFileWrapper","CustomFileInput","buttonStart","buttonEnd","fileNames","setFileNames","hiddenFile","createRef","endButton","startButton","multiple","saved","buttonProps","text","ref","e","files","i","name","setFiles","current","click","endAdornment","startAdornment","paginationStyle","pagination","paginationItem","paginationLink","marginleft","boxSizing","Pagination","pages","paginationClasses","HandlePrev","pageIndex","setPageIndex","HandleNext","active","Courses","setSaved","deleted","setDeleted","edit","deletee","events","setEvents","validated","setValidated","uploaded","setUploaded","setLoading","deleting","setDeleting","empty","setEmpty","saving","setSaving","Coursedata","d","CourseCode","CourseDuration","CourseName","Description","Eligibility","Semesters","Syllabus","Status","data","setData","passData","PageIndex","PageSize","passDelete","DeletedBy","passEdit","HandleData","newData","setPagination","useEffect","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","Data","Success","setTimeout","AddAlert","spinner","fullWidth","multiline","rows","filebutton","form_data","FormData","append","axios","post","res","Name","Date","HandleSave","catch","err","textCenter","justifyContentCenter","SingleSelect","Options","setValue","noOptionMessage","selected","setSelected","noOptionsMessage","isSearchable","options","Label","label","Students","addStudent","setAddstudent","validateFilter","setValidateFilter","setCourses","CourseList","Year","CourseId","filterData","setFilterData","CourseValues","setCourseValues","Studentdata","FullName","RegistrationNo","ClassNo","AdmissionNo","Mobile","Email","Course","Gender","DOB","Password","GuardianName","GuardianMobile","GuardianRelation","passData1","AddStudent","HandleClear","HandleFilterData","Subjects","semesters","setSemesters","SemesterValues","setSemesterValues","SemesterList","SemesterNo","Subjectdata","SemesterId","SubjectName","SubjectCode","passCourseId","Semester","Semesterdata","SemesterDuration","InternalMarks","StudentId","Note","StudentName","MarkList","Files","InternalsNotification","InternalNotedata","navPillsStyle","flexContainer","displayNone","fixed","horizontalDisplay","pills","pillsWithIcons","tabIcon","horizontalPills","contentWrapper","alignCenter","tabLabelContainer","NavPills","setActive","tabs","direction","flexContainerClasses","tabButtons","Tabs","indicator","centered","pillsClasses","Tab","tabButton","tabContent","axis","index","onChangeIndex","tabsGrid","contentGrid","accordionStyle","expansionPanel","expansionPanelExpanded","expansionPanelSummary","borderTopLeftRadius","borderTopRightRadius","primaryExpansionPanelSummary","secondaryExpansionPanelSummary","warningExpansionPanelSummary","dangerExpansionPanelSummary","successExpansionPanelSummary","infoExpansionPanelSummary","roseExpansionPanelSummary","expansionPanelSummaryExpaned","primaryExpansionPanelSummaryExpaned","secondaryExpansionPanelSummaryExpaned","warningExpansionPanelSummaryExpaned","dangerExpansionPanelSummaryExpaned","successExpansionPanelSummaryExpaned","infoExpansionPanelSummaryExpaned","roseExpansionPanelSummaryExpaned","expansionPanelSummaryContent","expansionPanelSummaryExpandIcon","expansionPanelSummaryExpandIconExpanded","expansionPanelDetails","Accordion","single","collapses","activeColor","ExpansionPanel","expanded","panel","newArray","splice","ExpansionPanelSummary","expandIcon","content","ExpansionPanelDetails","EmptyTable","cardCategoryGrey","dashboardRoutes","path","component","DashboardPage","layout","edit1","setEdit1","edit2","setEdit2","requested","setRequested","waitingList","setWaitingList","admitted","setAdmitted","empty1","setEmpty1","empty2","setEmpty2","viewData","Setview","setStep","stepChangeData","setStepChangeData","stepChangeData1","setStepChangeData1","stepChangeData2","setStepChangeData2","HandleView","ReqData","FirstName","FathersName","FatherMobile","District","HouseName","WaitData","AdmData","Step","passData2","passData3","passEdit1","passEdit2","mainPrice","StudentMobile","pullRight","LastStatus","StatusList","ClearAllIcon","Departdata","DepartmentName","HeadName","LockIcon","setViewData","Admindata","PeopleIcon","scrollTo","document","scrollTop","departments","setDepartments","departmentValues","setDepartmentValues","usertype","setUsertype","departmentList","DepartmentId","Qualifications","AreaOfInterest","Achievements","AddressType","Country","State","City","Street","PostOffice","PostalCode","UserType","ViewCarouselIcon","Sildedata","Quote","ButtonLink","ButtonText","DateRangeIcon","Eventslist","Venue","CommentIcon","Saving","Testdata","Message","PhotoLibraryIcon","Gallerydata","FileCopyIcon","ListIcon","MenuBookIcon","SupervisedUserCircleIcon","MailIcon","sizeOfArray","setSizeOfArray","messageData","setMessageData","HandleFilter","HandleMessageData","CalendarViewDayIcon","Clubsdata","Link","StaffId","BusinessIcon","errors","setError","Facilitiesdata","BusinessCenterIcon","Managedata","Post","LibraryBooksIcon","Publicdata","PublishedBy","PublishedDate","Notifications","VerticalSplitIcon","AssignmentIcon","Placementdata","Company","EmailIcon","viewEnquiry","setViewEnquiry","Enquirydata","headerStyle","appBar","appResponsive","Header","routeName","routes","forEach","route","location","href","rtlName","useRouteName","appBarClasses","AppBar","Toolbar","smDown","handleDrawerToggle","footerStyle","footer","a","list","inlineBlock","Footer","getYear","sidebarStyle","drawerPaper","visibility","overflowY","drawerPaperRTL","logo","logoLink","logoLinkRTL","logoImage","maxHeight","img","backgroundSize","backgroundPosition","itemLink","itemIcon","itemIconRTL","itemText","itemTextRTL","whiteFont","purple","blue","green","orange","red","sidebarWrapper","overflowScrolling","activePro","Sidebar","useLocation","activeRoute","pathname","image","logoText","userdetails","listItemClasses","whiteFontClasses","aboutProps","activeClassName","ListItem","ListItemText","disableTypography","brand","Drawer","anchor","paper","onClose","ModalProps","keepMounted","backgroundImage","ps","appStyle","wrapper","mainPanel","switchRoutes","from","Admin","mobileOpen","setMobileOpen","resizeFunction","navigator","platform","PerfectScrollbar","suppressScrollX","suppressScrollY","addEventListener","destroy","removeEventListener","cardCategoryRed","LoginPage","setNotification","setUserType","setUserdetails","Username","invalid","setInvalid","Usertype","StaffsLayout","HodLayout","cardAvatarStyle","cardAvatar","cardAvatarProfile","cardAvatarPlain","CardAvatar","cardAvatarClasses","UserProfile","locations","preventDefault","avatar","description","App","loggedIn","notify","bc","setBC","userType","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d4da992a.chunk.js","sourcesContent":["/*!\n\n =========================================================\n * Material Dashboard React - v1.10.0 based on Material Dashboard - v1.2.0\n =========================================================\n\n * Product Page: http://www.creative-tim.com/product/material-dashboard-react\n * Copyright 2021 Creative Tim (http://www.creative-tim.com)\n * Licensed under MIT (https://github.com/creativetimofficial/material-dashboard-react/blob/master/LICENSE.md)\n\n =========================================================\n\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n */\n\n// ##############################\n// // // Function that converts from hex color to rgb color\n// // // Example: input = #9c27b0 => output = 156, 39, 176\n// // // Example: input = 9c27b0 => output = 156, 39, 176\n// // // Example: input = #999 => output = 153, 153, 153\n// // // Example: input = 999 => output = 153, 153, 153\n// #############################\nconst hexToRgb = (input) => {\n  input = input + \"\";\n  input = input.replace(\"#\", \"\");\n  let hexRegex = /[0-9A-Fa-f]/g;\n  if (!hexRegex.test(input) || (input.length !== 3 && input.length !== 6)) {\n    throw new Error(\"input is not a valid hex color.\");\n  }\n  if (input.length === 3) {\n    let first = input[0];\n    let second = input[1];\n    let last = input[2];\n    input = first + first + second + second + last + last;\n  }\n  input = input.toUpperCase();\n  let first = input[0] + input[1];\n  let second = input[2] + input[3];\n  let last = input[4] + input[5];\n  return (\n    parseInt(first, 16) +\n    \", \" +\n    parseInt(second, 16) +\n    \", \" +\n    parseInt(last, 16)\n  );\n};\n\n// ##############################\n// // // Variables - Styles that are used on more than one component\n// #############################\n\nconst drawerWidth = 260;\n\nconst transition = {\n  transition: \"all 0.33s cubic-bezier(0.685, 0.0473, 0.346, 1)\",\n};\nconst description = {\n  color: grayColor,\n};\nconst container = {\n  paddingRight: \"15px\",\n  paddingLeft: \"15px\",\n  marginRight: \"auto\",\n  marginLeft: \"auto\",\n};\n\nconst defaultFont = {\n  fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n  fontWeight: \"300\",\n  lineHeight: \"1.5em\",\n};\n\nconst primaryColor = [\"#9c27b0\", \"#ab47bc\", \"#8e24aa\", \"#af2cc5\"];\nconst warningColor = [\"#ff9800\", \"#ffa726\", \"#fb8c00\", \"#ffa21a\"];\nconst dangerColor = [\"#f44336\", \"#ef5350\", \"#e53935\", \"#f55a4e\"];\nconst successColor = [\"#4caf50\", \"#66bb6a\", \"#43a047\", \"#5cb860\"];\nconst infoColor = [\"#00acc1\", \"#26c6da\", \"#00acc1\", \"#00d3ee\"];\nconst roseColor = [\"#e91e63\", \"#ec407a\", \"#d81b60\", \"#eb3573\"];\nconst grayColor = [\n  \"#999\",\n  \"#777\",\n  \"#3C4858\",\n  \"#AAAAAA\",\n  \"#D2D2D2\",\n  \"#DDD\",\n  \"#b4b4b4\",\n  \"#555555\",\n  \"#333\",\n  \"#a9afbb\",\n  \"#eee\",\n  \"#e7e7e7\",\n];\nconst blackColor = \"#000\";\nconst whiteColor = \"#FFF\";\n\nconst boxShadow = {\n  boxShadow:\n    \"0 10px 30px -12px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.42), 0 4px 25px 0px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.12), 0 8px 10px -5px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.2)\",\n};\n\nconst primaryBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0 rgba(\" +\n    hexToRgb(blackColor) +\n    \",.14), 0 7px 10px -5px rgba(\" +\n    hexToRgb(primaryColor[0]) +\n    \",.4)\",\n};\nconst infoBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0 rgba(\" +\n    hexToRgb(blackColor) +\n    \",.14), 0 7px 10px -5px rgba(\" +\n    hexToRgb(infoColor[0]) +\n    \",.4)\",\n};\nconst successBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0 rgba(\" +\n    hexToRgb(blackColor) +\n    \",.14), 0 7px 10px -5px rgba(\" +\n    hexToRgb(successColor[0]) +\n    \",.4)\",\n};\nconst warningBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0 rgba(\" +\n    hexToRgb(blackColor) +\n    \",.14), 0 7px 10px -5px rgba(\" +\n    hexToRgb(warningColor[0]) +\n    \",.4)\",\n};\nconst dangerBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0 rgba(\" +\n    hexToRgb(blackColor) +\n    \",.14), 0 7px 10px -5px rgba(\" +\n    hexToRgb(dangerColor[0]) +\n    \",.4)\",\n};\nconst roseBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0 rgba(\" +\n    hexToRgb(blackColor) +\n    \",.14), 0 7px 10px -5px rgba(\" +\n    hexToRgb(roseColor[0]) +\n    \",.4)\",\n};\n\nconst warningCardHeader = {\n  background:\n    \"linear-gradient(60deg, \" + warningColor[1] + \", \" + warningColor[2] + \")\",\n  ...warningBoxShadow,\n};\nconst successCardHeader = {\n  background:\n    \"linear-gradient(60deg, \" + successColor[1] + \", \" + successColor[2] + \")\",\n  ...successBoxShadow,\n};\nconst dangerCardHeader = {\n  background:\n    \"linear-gradient(60deg, \" + dangerColor[1] + \", \" + dangerColor[2] + \")\",\n  ...dangerBoxShadow,\n};\nconst infoCardHeader = {\n  background:\n    \"linear-gradient(60deg, \" + infoColor[1] + \", \" + infoColor[2] + \")\",\n  ...infoBoxShadow,\n};\nconst primaryCardHeader = {\n  background:\n    \"linear-gradient(60deg, \" + primaryColor[1] + \", \" + primaryColor[2] + \")\",\n  ...primaryBoxShadow,\n};\nconst roseCardHeader = {\n  background:\n    \"linear-gradient(60deg, \" + roseColor[1] + \", \" + roseColor[2] + \")\",\n  ...roseBoxShadow,\n};\n\nconst cardActions = {\n  margin: \"0 20px 10px\",\n  paddingTop: \"10px\",\n  borderTop: \"1px solid \" + grayColor[10],\n  height: \"auto\",\n  ...defaultFont,\n};\n\nconst cardHeader = {\n  margin: \"-20px 15px 0\",\n  borderRadius: \"3px\",\n  padding: \"15px\",\n};\n\nconst card = {\n  display: \"inline-block\",\n  position: \"relative\",\n  width: \"100%\",\n  margin: \"25px 0\",\n  boxShadow: \"0 1px 4px 0 rgba(\" + hexToRgb(blackColor) + \", 0.14)\",\n  borderRadius: \"3px\",\n  color: \"rgba(\" + hexToRgb(blackColor) + \", 0.87)\",\n  background: whiteColor,\n};\n\nconst defaultBoxShadow = {\n  border: \"0\",\n  borderRadius: \"3px\",\n  boxShadow:\n    \"0 10px 20px -12px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.42), 0 3px 20px 0px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.12), 0 8px 10px -5px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.2)\",\n  padding: \"10px 0\",\n  transition: \"all 150ms ease 0s\",\n};\n\nconst title = {\n  color: grayColor[2],\n  textDecoration: \"none\",\n  fontWeight: \"300\",\n  marginTop: \"30px\",\n  marginBottom: \"25px\",\n  minHeight: \"32px\",\n  fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n  \"& small\": {\n    color: grayColor[1],\n    fontWeight: \"400\",\n    lineHeight: \"1\",\n  },\n};\n\nconst cardTitle = {\n  ...title,\n  marginTop: \"0\",\n  marginBottom: \"3px\",\n  minHeight: \"auto\",\n  \"& a\": {\n    ...title,\n    marginTop: \".625rem\",\n    marginBottom: \"0.75rem\",\n    minHeight: \"auto\",\n  },\n};\n\nconst cardSubtitle = {\n  marginTop: \"-.375rem\",\n};\n\nconst cardLink = {\n  \"& + $cardLink\": {\n    marginLeft: \"1.25rem\",\n  },\n};\n\nexport {\n  hexToRgb,\n  //variables\n  drawerWidth,\n  transition,\n  container,\n  boxShadow,\n  card,\n  defaultFont,\n  primaryColor,\n  warningColor,\n  dangerColor,\n  successColor,\n  infoColor,\n  roseColor,\n  grayColor,\n  blackColor,\n  whiteColor,\n  primaryBoxShadow,\n  infoBoxShadow,\n  successBoxShadow,\n  warningBoxShadow,\n  dangerBoxShadow,\n  roseBoxShadow,\n  warningCardHeader,\n  successCardHeader,\n  dangerCardHeader,\n  infoCardHeader,\n  primaryCardHeader,\n  roseCardHeader,\n  cardActions,\n  cardHeader,\n  defaultBoxShadow,\n  title,\n  cardTitle,\n  cardSubtitle,\n  cardLink,\n  description,\n};\n","import {\n  grayColor,\n  primaryColor,\n  infoColor,\n  successColor,\n  warningColor,\n  dangerColor,\n  roseColor,\n  whiteColor,\n  blackColor,\n  hexToRgb,\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst buttonStyle = {\n  button: {\n    minHeight: \"auto\",\n    minWidth: \"auto\",\n    backgroundColor: grayColor[0],\n    color: whiteColor,\n    boxShadow:\n      \"0 2px 2px 0 rgba(\" +\n      hexToRgb(grayColor[0]) +\n      \", 0.14), 0 3px 1px -2px rgba(\" +\n      hexToRgb(grayColor[0]) +\n      \", 0.2), 0 1px 5px 0 rgba(\" +\n      hexToRgb(grayColor[0]) +\n      \", 0.12)\",\n    border: \"none\",\n    borderRadius: \"3px\",\n    position: \"relative\",\n    padding: \"12px 30px\",\n    margin: \".3125rem 1px\",\n    fontSize: \"12px\",\n    fontWeight: \"400\",\n    textTransform: \"uppercase\",\n    letterSpacing: \"0\",\n    willChange: \"box-shadow, transform\",\n    transition:\n      \"box-shadow 0.2s cubic-bezier(0.4, 0, 1, 1), background-color 0.2s cubic-bezier(0.4, 0, 0.2, 1)\",\n    lineHeight: \"1.42857143\",\n    textAlign: \"center\",\n    whiteSpace: \"nowrap\",\n    verticalAlign: \"middle\",\n    touchAction: \"manipulation\",\n    cursor: \"pointer\",\n    \"&:hover,&:focus\": {\n      color: whiteColor,\n      backgroundColor: grayColor[0],\n      boxShadow:\n        \"0 14px 26px -12px rgba(\" +\n        hexToRgb(grayColor[0]) +\n        \", 0.42), 0 4px 23px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.12), 0 8px 10px -5px rgba(\" +\n        hexToRgb(grayColor[0]) +\n        \", 0.2)\",\n    },\n    \"& .fab,& .fas,& .far,& .fal, &.material-icons\": {\n      position: \"relative\",\n      display: \"inline-block\",\n      top: \"0\",\n      marginTop: \"-1em\",\n      marginBottom: \"-1em\",\n      fontSize: \"1.1rem\",\n      marginRight: \"4px\",\n      verticalAlign: \"middle\",\n    },\n    \"& svg\": {\n      position: \"relative\",\n      display: \"inline-block\",\n      top: \"0\",\n      width: \"18px\",\n      height: \"18px\",\n      marginRight: \"4px\",\n      verticalAlign: \"middle\",\n    },\n    \"&$justIcon\": {\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\n        marginTop: \"0px\",\n        position: \"absolute\",\n        width: \"100%\",\n        transform: \"none\",\n        left: \"0px\",\n        top: \"0px\",\n        height: \"100%\",\n        lineHeight: \"41px\",\n        fontSize: \"20px\",\n      },\n    },\n  },\n  white: {\n    \"&,&:focus,&:hover\": {\n      backgroundColor: whiteColor,\n      color: grayColor[0],\n    },\n  },\n  rose: {\n    backgroundColor: roseColor[0],\n    boxShadow:\n      \"0 2px 2px 0 rgba(\" +\n      hexToRgb(roseColor[0]) +\n      \", 0.14), 0 3px 1px -2px rgba(\" +\n      hexToRgb(roseColor[0]) +\n      \", 0.2), 0 1px 5px 0 rgba(\" +\n      hexToRgb(roseColor[0]) +\n      \", 0.12)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: roseColor[0],\n      boxShadow:\n        \"0 14px 26px -12px rgba(\" +\n        hexToRgb(roseColor[0]) +\n        \", 0.42), 0 4px 23px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.12), 0 8px 10px -5px rgba(\" +\n        hexToRgb(roseColor[0]) +\n        \", 0.2)\",\n    },\n  },\n  primary: {\n    backgroundColor: primaryColor[0],\n    boxShadow:\n      \"0 2px 2px 0 rgba(\" +\n      hexToRgb(primaryColor[0]) +\n      \", 0.14), 0 3px 1px -2px rgba(\" +\n      hexToRgb(primaryColor[0]) +\n      \", 0.2), 0 1px 5px 0 rgba(\" +\n      hexToRgb(primaryColor[0]) +\n      \", 0.12)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: primaryColor[0],\n      boxShadow:\n        \"0 14px 26px -12px rgba(\" +\n        hexToRgb(primaryColor[0]) +\n        \", 0.42), 0 4px 23px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.12), 0 8px 10px -5px rgba(\" +\n        hexToRgb(primaryColor[0]) +\n        \", 0.2)\",\n    },\n  },\n  info: {\n    backgroundColor: infoColor[0],\n    boxShadow:\n      \"0 2px 2px 0 rgba(\" +\n      hexToRgb(infoColor[0]) +\n      \", 0.14), 0 3px 1px -2px rgba(\" +\n      hexToRgb(infoColor[0]) +\n      \", 0.2), 0 1px 5px 0 rgba(\" +\n      hexToRgb(infoColor[0]) +\n      \", 0.12)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: infoColor[0],\n      boxShadow:\n        \"0 14px 26px -12px rgba(\" +\n        hexToRgb(infoColor[0]) +\n        \", 0.42), 0 4px 23px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.12), 0 8px 10px -5px rgba(\" +\n        hexToRgb(infoColor[0]) +\n        \", 0.2)\",\n    },\n  },\n  success: {\n    backgroundColor: successColor[0],\n    boxShadow:\n      \"0 2px 2px 0 rgba(\" +\n      hexToRgb(successColor[0]) +\n      \", 0.14), 0 3px 1px -2px rgba(\" +\n      hexToRgb(successColor[0]) +\n      \", 0.2), 0 1px 5px 0 rgba(\" +\n      hexToRgb(successColor[0]) +\n      \", 0.12)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: successColor[0],\n      boxShadow:\n        \"0 14px 26px -12px rgba(\" +\n        hexToRgb(successColor[0]) +\n        \", 0.42), 0 4px 23px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.12), 0 8px 10px -5px rgba(\" +\n        hexToRgb(successColor[0]) +\n        \", 0.2)\",\n    },\n  },\n  warning: {\n    backgroundColor: warningColor[0],\n    boxShadow:\n      \"0 2px 2px 0 rgba(\" +\n      hexToRgb(warningColor[0]) +\n      \", 0.14), 0 3px 1px -2px rgba(\" +\n      hexToRgb(warningColor[0]) +\n      \", 0.2), 0 1px 5px 0 rgba(\" +\n      hexToRgb(warningColor[0]) +\n      \", 0.12)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: warningColor[0],\n      boxShadow:\n        \"0 14px 26px -12px rgba(\" +\n        hexToRgb(warningColor[0]) +\n        \", 0.42), 0 4px 23px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.12), 0 8px 10px -5px rgba(\" +\n        hexToRgb(warningColor[0]) +\n        \", 0.2)\",\n    },\n  },\n  danger: {\n    backgroundColor: dangerColor[0],\n    boxShadow:\n      \"0 2px 2px 0 rgba(\" +\n      hexToRgb(dangerColor[0]) +\n      \", 0.14), 0 3px 1px -2px rgba(\" +\n      hexToRgb(dangerColor[0]) +\n      \", 0.2), 0 1px 5px 0 rgba(\" +\n      hexToRgb(dangerColor[0]) +\n      \", 0.12)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: dangerColor[0],\n      boxShadow:\n        \"0 14px 26px -12px rgba(\" +\n        hexToRgb(dangerColor[0]) +\n        \", 0.42), 0 4px 23px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.12), 0 8px 10px -5px rgba(\" +\n        hexToRgb(dangerColor[0]) +\n        \", 0.2)\",\n    },\n  },\n  simple: {\n    \"&,&:focus,&:hover\": {\n      color: whiteColor,\n      background: \"transparent\",\n      boxShadow: \"none\",\n    },\n    \"&$rose\": {\n      \"&,&:focus,&:hover,&:visited\": {\n        color: roseColor[0],\n      },\n    },\n    \"&$primary\": {\n      \"&,&:focus,&:hover,&:visited\": {\n        color: primaryColor[0],\n      },\n    },\n    \"&$info\": {\n      \"&,&:focus,&:hover,&:visited\": {\n        color: infoColor[0],\n      },\n    },\n    \"&$success\": {\n      \"&,&:focus,&:hover,&:visited\": {\n        color: successColor[0],\n      },\n    },\n    \"&$warning\": {\n      \"&,&:focus,&:hover,&:visited\": {\n        color: warningColor[0],\n      },\n    },\n    \"&$danger\": {\n      \"&,&:focus,&:hover,&:visited\": {\n        color: dangerColor[0],\n      },\n    },\n  },\n  transparent: {\n    \"&,&:focus,&:hover\": {\n      color: \"inherit\",\n      background: \"transparent\",\n      boxShadow: \"none\",\n    },\n  },\n  disabled: {\n    opacity: \"0.65\",\n    pointerEvents: \"none\",\n  },\n  lg: {\n    padding: \"1.125rem 2.25rem\",\n    fontSize: \"0.875rem\",\n    lineHeight: \"1.333333\",\n    borderRadius: \"0.2rem\",\n  },\n  sm: {\n    padding: \"0.40625rem 1.25rem\",\n    fontSize: \"0.6875rem\",\n    lineHeight: \"1.5\",\n    borderRadius: \"0.2rem\",\n  },\n  round: {\n    borderRadius: \"30px\",\n  },\n  block: {\n    width: \"100% !important\",\n  },\n  link: {\n    \"&,&:hover,&:focus\": {\n      backgroundColor: \"transparent\",\n      color: grayColor[0],\n      boxShadow: \"none\",\n    },\n  },\n  justIcon: {\n    paddingLeft: \"12px\",\n    paddingRight: \"12px\",\n    fontSize: \"20px\",\n    height: \"41px\",\n    minWidth: \"41px\",\n    width: \"41px\",\n    \"& .fab,& .fas,& .far,& .fal,& svg,& .material-icons\": {\n      marginRight: \"0px\",\n    },\n    \"&$lg\": {\n      height: \"57px\",\n      minWidth: \"57px\",\n      width: \"57px\",\n      lineHeight: \"56px\",\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\n        fontSize: \"32px\",\n        lineHeight: \"56px\",\n      },\n      \"& svg\": {\n        width: \"32px\",\n        height: \"32px\",\n      },\n    },\n    \"&$sm\": {\n      height: \"30px\",\n      minWidth: \"30px\",\n      width: \"30px\",\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\n        fontSize: \"17px\",\n        lineHeight: \"29px\",\n      },\n      \"& svg\": {\n        width: \"17px\",\n        height: \"17px\",\n      },\n    },\n  },\n};\n\nexport default buttonStyle;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n\n// material-ui components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\nimport styles from \"assets/jss/material-dashboard-react/components/buttonStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function RegularButton(props) {\n  const classes = useStyles();\n  const {\n    color,\n    round,\n    children,\n    disabled,\n    simple,\n    size,\n    block,\n    link,\n    justIcon,\n    className,\n    muiClasses,\n    ...rest\n  } = props;\n  const btnClasses = classNames({\n    [classes.button]: true,\n    [classes[size]]: size,\n    [classes[color]]: color,\n    [classes.round]: round,\n    [classes.disabled]: disabled,\n    [classes.simple]: simple,\n    [classes.block]: block,\n    [classes.link]: link,\n    [classes.justIcon]: justIcon,\n    [className]: className,\n  });\n  return (\n    <Button {...rest} classes={muiClasses} className={btnClasses}>\n      {children}\n    </Button>\n  );\n}\n\nRegularButton.propTypes = {\n  color: PropTypes.oneOf([\n    \"primary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"danger\",\n    \"rose\",\n    \"white\",\n    \"transparent\",\n  ]),\n  size: PropTypes.oneOf([\"sm\", \"lg\"]),\n  simple: PropTypes.bool,\n  round: PropTypes.bool,\n  disabled: PropTypes.bool,\n  block: PropTypes.bool,\n  link: PropTypes.bool,\n  justIcon: PropTypes.bool,\n  className: PropTypes.string,\n  // use this to pass the classes props from Material-UI\n  muiClasses: PropTypes.object,\n  children: PropTypes.node,\n};\n","import {\n  primaryColor,\n  whiteColor,\n  primaryBoxShadow,\n  defaultFont,\n  blackColor,\n  grayColor,\n  hexToRgb,\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst dropdownStyle = (theme) => ({\n  buttonLink: {\n    [theme.breakpoints.down(\"md\")]: {\n      display: \"flex\",\n      marginLeft: \"30px\",\n      width: \"auto\",\n    },\n  },\n  links: {\n    width: \"20px\",\n    height: \"20px\",\n    zIndex: \"4\",\n    [theme.breakpoints.down(\"md\")]: {\n      display: \"block\",\n      width: \"30px\",\n      height: \"30px\",\n      color: grayColor[9],\n      marginRight: \"15px\",\n    },\n  },\n  linkText: {\n    zIndex: \"4\",\n    ...defaultFont,\n    fontSize: \"14px\",\n  },\n  popperClose: {\n    pointerEvents: \"none\",\n  },\n  popperResponsive: {\n    [theme.breakpoints.down(\"md\")]: {\n      zIndex: \"1640\",\n      position: \"static\",\n      float: \"none\",\n      width: \"auto\",\n      marginTop: \"0\",\n      backgroundColor: \"transparent\",\n      border: \"0\",\n      WebkitBoxShadow: \"none\",\n      boxShadow: \"none\",\n      color: \"black\",\n    },\n  },\n  popperNav: {\n    [theme.breakpoints.down(\"sm\")]: {\n      position: \"static !important\",\n      left: \"unset !important\",\n      top: \"unset !important\",\n      transform: \"none !important\",\n      willChange: \"unset !important\",\n      \"& > div\": {\n        boxShadow: \"none !important\",\n        marginLeft: \"0rem\",\n        marginRight: \"0rem\",\n        transition: \"none !important\",\n        marginTop: \"0px !important\",\n        marginBottom: \"0px !important\",\n        padding: \"0px !important\",\n        backgroundColor: \"transparent !important\",\n        \"& ul li\": {\n          color: whiteColor + \" !important\",\n          margin: \"10px 15px 0!important\",\n          padding: \"10px 15px !important\",\n          \"&:hover\": {\n            backgroundColor: \"hsla(0,0%,78%,.2)\",\n            boxShadow: \"none\",\n          },\n        },\n      },\n    },\n  },\n  dropdown: {\n    borderRadius: \"3px\",\n    border: \"0\",\n    boxShadow: \"0 2px 5px 0 rgba(\" + hexToRgb(blackColor) + \", 0.26)\",\n    top: \"100%\",\n    zIndex: \"1000\",\n    minWidth: \"160px\",\n    padding: \"5px 0\",\n    margin: \"2px 0 0\",\n    fontSize: \"14px\",\n    textAlign: \"left\",\n    listStyle: \"none\",\n    backgroundColor: whiteColor,\n    WebkitBackgroundClip: \"padding-box\",\n    backgroundClip: \"padding-box\",\n  },\n  dropdownItem: {\n    ...defaultFont,\n    fontSize: \"13px\",\n    padding: \"10px 20px\",\n    margin: \"0 5px\",\n    borderRadius: \"2px\",\n    WebkitTransition: \"all 150ms linear\",\n    MozTransition: \"all 150ms linear\",\n    OTransition: \"all 150ms linear\",\n    MsTransition: \"all 150ms linear\",\n    transition: \"all 150ms linear\",\n    display: \"block\",\n    clear: \"both\",\n    fontWeight: \"400\",\n    lineHeight: \"1.42857143\",\n    color: grayColor[8],\n    whiteSpace: \"nowrap\",\n    height: \"unset\",\n    minHeight: \"unset\",\n    \"&:hover\": {\n      backgroundColor: primaryColor[0],\n      color: whiteColor,\n      ...primaryBoxShadow,\n    },\n  },\n});\n\nexport default dropdownStyle;\n","import {\n  defaultFont,\n  dangerColor,\n  whiteColor,\n} from \"assets/jss/material-dashboard-react.js\";\n\nimport dropdownStyle from \"assets/jss/material-dashboard-react/dropdownStyle.js\";\n\nconst headerLinksStyle = (theme) => ({\n  ...dropdownStyle(theme),\n  search: {\n    \"& > div\": {\n      marginTop: \"0\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: \"10px 15px !important\",\n      float: \"none !important\",\n      paddingTop: \"1px\",\n      paddingBottom: \"1px\",\n      padding: \"0!important\",\n      width: \"60%\",\n      marginTop: \"40px\",\n      \"& input\": {\n        color: whiteColor,\n      },\n    },\n  },\n  linkText: {\n    zIndex: \"4\",\n    ...defaultFont,\n    fontSize: \"14px\",\n    margin: \"0px\",\n  },\n  buttonLink: {\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"flex\",\n      margin: \"10px 15px 0\",\n      width: \"-webkit-fill-available\",\n      \"& svg\": {\n        width: \"24px\",\n        height: \"30px\",\n        marginRight: \"15px\",\n        marginLeft: \"-15px\",\n      },\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\n        fontSize: \"24px\",\n        lineHeight: \"30px\",\n        width: \"24px\",\n        height: \"30px\",\n        marginRight: \"15px\",\n        marginLeft: \"-15px\",\n      },\n      \"& > span\": {\n        justifyContent: \"flex-start\",\n        width: \"100%\",\n      },\n    },\n  },\n  searchButton: {\n    [theme.breakpoints.down(\"sm\")]: {\n      top: \"-50px !important\",\n      marginRight: \"22px\",\n      float: \"right\",\n    },\n  },\n  margin: {\n    zIndex: \"4\",\n    margin: \"0\",\n  },\n  searchIcon: {\n    width: \"17px\",\n    zIndex: \"4\",\n  },\n  notifications: {\n    zIndex: \"4\",\n    [theme.breakpoints.up(\"md\")]: {\n      position: \"absolute\",\n      top: \"2px\",\n      border: \"1px solid \" + whiteColor,\n      right: \"4px\",\n      fontSize: \"9px\",\n      background: dangerColor[0],\n      color: whiteColor,\n      minWidth: \"16px\",\n      height: \"16px\",\n      borderRadius: \"10px\",\n      textAlign: \"center\",\n      lineHeight: \"16px\",\n      verticalAlign: \"middle\",\n      display: \"block\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      ...defaultFont,\n      fontSize: \"14px\",\n      marginRight: \"8px\",\n    },\n  },\n  manager: {\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n    },\n    display: \"inline-block\",\n  },\n  searchWrapper: {\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"-webkit-fill-available\",\n      margin: \"10px 15px 0\",\n    },\n    display: \"inline-block\",\n  },\n});\n\nexport default headerLinksStyle;\n","import React from \"react\";\nimport classNames from \"classnames\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Poppers from \"@material-ui/core/Popper\";\nimport Divider from \"@material-ui/core/Divider\";\n// @material-ui/icons\nimport Person from \"@material-ui/icons/Person\";\nimport Notifications from \"@material-ui/icons/Notifications\";\nimport Dashboard from \"@material-ui/icons/Dashboard\";\n// core components\nimport Button from \"components/CustomButtons/Button.js\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"assets/jss/material-dashboard-react/components/headerLinksStyle.js\";\nimport { NavLink } from \"react-router-dom\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function AdminNavbarLinks({ setLoggedin }) {\n  console.log(\"setLoggedIn,navlinks\", setLoggedin);\n  const classes = useStyles();\n  const [openNotification, setOpenNotification] = React.useState(null);\n  const [openProfile, setOpenProfile] = React.useState(null);\n  const handleClickNotification = (event) => {\n    if (openNotification && openNotification.contains(event.target)) {\n      setOpenNotification(null);\n    } else {\n      setOpenNotification(event.currentTarget);\n    }\n  };\n  const handleCloseNotification = () => {\n    setOpenNotification(null);\n  };\n  const handleClickProfile = (event) => {\n    if (openProfile && openProfile.contains(event.target)) {\n      setOpenProfile(null);\n    } else {\n      setOpenProfile(event.currentTarget);\n    }\n  };\n  const handleCloseProfile = () => {\n    setOpenProfile(null);\n  };\n  const handleLogout = () => {\n    setLoggedin(false);\n    setOpenProfile(null);\n  };\n  return (\n    <div>\n      <NavLink to=\"/admin\" className={classes.item}>\n        <Button\n          color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\n          justIcon={window.innerWidth > 959}\n          simple={!(window.innerWidth > 959)}\n          aria-label=\"Dashboard\"\n          className={classes.buttonLink}\n        >\n          <Dashboard className={classes.icons} />\n          <Hidden mdUp implementation=\"css\">\n            <p className={classes.linkText}>Dashboard</p>\n          </Hidden>\n        </Button>\n      </NavLink>\n      <div className={classes.manager}>\n        <Button\n          color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\n          justIcon={window.innerWidth > 959}\n          simple={!(window.innerWidth > 959)}\n          aria-owns={openNotification ? \"notification-menu-list-grow\" : null}\n          aria-haspopup=\"true\"\n          onClick={handleClickNotification}\n          className={classes.buttonLink}\n        >\n          <Notifications className={classes.icons} />\n          <span className={classes.notifications}>1</span>\n          <Hidden mdUp implementation=\"css\">\n            <p onClick={handleCloseNotification} className={classes.linkText}>\n              Notification\n            </p>\n          </Hidden>\n        </Button>\n        <Poppers\n          open={Boolean(openNotification)}\n          anchorEl={openNotification}\n          transition\n          disablePortal\n          className={\n            classNames({ [classes.popperClose]: !openNotification }) +\n            \" \" +\n            classes.popperNav\n          }\n        >\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              id=\"notification-menu-list-grow\"\n              style={{\n                transformOrigin:\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\",\n              }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleCloseNotification}>\n                  <MenuList role=\"menu\">\n                    <MenuItem\n                      onClick={handleCloseNotification}\n                      className={classes.dropdownItem}\n                    >\n                      No notifications yet!\n                    </MenuItem>\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Poppers>\n      </div>\n      <div className={classes.manager}>\n        <Button\n          color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\n          justIcon={window.innerWidth > 959}\n          simple={!(window.innerWidth > 959)}\n          aria-owns={openProfile ? \"profile-menu-list-grow\" : null}\n          aria-haspopup=\"true\"\n          onClick={handleClickProfile}\n          className={classes.buttonLink}\n        >\n          <Person className={classes.icons} />\n          <Hidden mdUp implementation=\"css\">\n            <p className={classes.linkText}>Profile</p>\n          </Hidden>\n        </Button>\n        <Poppers\n          open={Boolean(openProfile)}\n          anchorEl={openProfile}\n          transition\n          disablePortal\n          className={\n            classNames({ [classes.popperClose]: !openProfile }) +\n            \" \" +\n            classes.popperNav\n          }\n        >\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              id=\"profile-menu-list-grow\"\n              style={{\n                transformOrigin:\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\",\n              }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleCloseProfile}>\n                  <MenuList role=\"menu\">\n                    {/* <MenuItem onClick={handleCloseProfile}>\n                      {\" \"}\n                      <NavLink to=\"/user\">Profile</NavLink>\n                    </MenuItem> */}\n                    <Divider light />\n                    <MenuItem onClick={handleLogout}>Logout</MenuItem>\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Poppers>\n      </div>\n    </div>\n  );\n}\n\nAdminNavbarLinks.propTypes = {\n  setLoggedin: PropTypes.any,\n};\n","import {\n  primaryColor,\n  dangerColor,\n  successColor,\n  grayColor,\n  defaultFont,\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst customInputStyle = {\n  disabled: {\n    \"&:before\": {\n      backgroundColor: \"transparent !important\",\n    },\n  },\n  underline: {\n    \"&:hover:not($disabled):before,&:before\": {\n      borderColor: grayColor[4] + \" !important\",\n      borderWidth: \"1px !important\",\n    },\n    \"&:after\": {\n      borderColor: primaryColor[0],\n    },\n  },\n  underlineError: {\n    \"&:after\": {\n      borderColor: dangerColor[0],\n    },\n  },\n  underlineSuccess: {\n    \"&:after\": {\n      borderColor: successColor[0],\n    },\n  },\n  labelRoot: {\n    ...defaultFont,\n    color: grayColor[3] + \" !important\",\n    fontWeight: \"400\",\n    fontSize: \"14px\",\n    lineHeight: \"1.42857\",\n    letterSpacing: \"unset\",\n  },\n  labelRootError: {\n    color: dangerColor[0],\n  },\n  labelRootSuccess: {\n    color: successColor[0],\n  },\n  feedback: {\n    position: \"absolute\",\n    top: \"18px\",\n    right: \"0\",\n    zIndex: \"2\",\n    display: \"block\",\n    width: \"24px\",\n    height: \"24px\",\n    textAlign: \"center\",\n    pointerEvents: \"none\",\n  },\n  marginTop: {\n    marginTop: \"16px\",\n  },\n  formControl: {\n    paddingBottom: \"10px\",\n    margin: \"27px 0 0 0\",\n    position: \"relative\",\n    verticalAlign: \"unset\",\n  },\n  labelRTL: {\n    right: 0,\n    transition: \"all 200ms cubic-bezier(0.0, 0, 0.2, 1) 0ms\",\n    \"&.MuiInputLabel-shrink\": {\n      transform: \"translate(0, 1.5px)\",\n    },\n  },\n};\n\nexport default customInputStyle;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\n// @material-ui/icons\nimport Clear from \"@material-ui/icons/Clear\";\nimport Check from \"@material-ui/icons/Check\";\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/customInputStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CustomInput(props) {\n  const classes = useStyles();\n  const {\n    formControlProps,\n    labelText,\n    id,\n    labelProps,\n    inputProps,\n    error,\n    success,\n    rtlActive,\n    value,\n    onChange,\n    disabled,\n    type,\n  } = props;\n\n  const labelClasses = classNames({\n    [\" \" + classes.labelRootError]: error,\n    [\" \" + classes.labelRootSuccess]: success && !error,\n    [\" \" + classes.labelRTL]: rtlActive,\n  });\n  const underlineClasses = classNames({\n    [classes.underlineError]: error,\n    [classes.underlineSuccess]: success && !error,\n    [classes.underline]: true,\n  });\n  const marginTop = classNames({\n    [classes.marginTop]: labelText === undefined,\n  });\n  let newInputProps = {\n    maxLength:\n      inputProps && inputProps.maxLength ? inputProps.maxLength : undefined,\n    minLength:\n      inputProps && inputProps.minLength ? inputProps.minLength : undefined,\n    step: inputProps && inputProps.step ? inputProps.step : undefined,\n  };\n  return (\n    <FormControl\n      {...formControlProps}\n      className={formControlProps.className + \" \" + classes.formControl}\n    >\n      {labelText !== undefined ? (\n        <InputLabel\n          className={classes.labelRoot + labelClasses}\n          htmlFor={id}\n          {...labelProps}\n        >\n          {labelText}\n        </InputLabel>\n      ) : null}\n      <Input\n        type={type}\n        disabled={disabled}\n        onChange={onChange}\n        value={value}\n        classes={{\n          root: marginTop,\n          disabled: classes.disabled,\n          underline: underlineClasses,\n        }}\n        id={id}\n        {...inputProps}\n        inputProps={newInputProps}\n      />\n      {error ? (\n        <Clear className={classes.feedback + \" \" + classes.labelRootError} />\n      ) : success ? (\n        <Check className={classes.feedback + \" \" + classes.labelRootSuccess} />\n      ) : null}\n    </FormControl>\n  );\n}\n\nCustomInput.propTypes = {\n  labelText: PropTypes.node,\n  labelProps: PropTypes.object,\n  id: PropTypes.string,\n  inputProps: PropTypes.object,\n  formControlProps: PropTypes.object,\n  error: PropTypes.bool,\n  success: PropTypes.bool,\n  rtlActive: PropTypes.bool,\n  value: PropTypes.string,\n  onChange: PropTypes.any,\n  disabled: PropTypes.any,\n  type: PropTypes.any,\n};\n","import {\n  defaultFont,\n  dangerColor,\n  whiteColor,\n} from \"assets/jss/material-dashboard-react.js\";\n\nimport dropdownStyle from \"assets/jss/material-dashboard-react/dropdownStyle.js\";\n\nconst headerLinksStyle = (theme) => ({\n  ...dropdownStyle(theme),\n  search: {\n    \"& > div\": {\n      marginTop: \"0\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: \"10px 15px !important\",\n      float: \"none !important\",\n      paddingTop: \"1px\",\n      paddingBottom: \"1px\",\n      padding: \"0!important\",\n      width: \"60%\",\n      marginTop: \"40px\",\n      \"& input\": {\n        color: whiteColor,\n      },\n    },\n  },\n  linkText: {\n    zIndex: \"4\",\n    ...defaultFont,\n    fontSize: \"14px\",\n    margin: \"0px\",\n  },\n  buttonLink: {\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"flex\",\n      margin: \"10px 15px 0\",\n      width: \"-webkit-fill-available\",\n      \"& svg\": {\n        width: \"24px\",\n        height: \"30px\",\n        marginRight: \"15px\",\n        marginLeft: \"-15px\",\n      },\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\n        fontSize: \"24px\",\n        lineHeight: \"30px\",\n        width: \"24px\",\n        height: \"30px\",\n        marginRight: \"15px\",\n        marginLeft: \"-15px\",\n      },\n      \"& > span\": {\n        justifyContent: \"flex-start\",\n        width: \"100%\",\n      },\n    },\n  },\n  searchButton: {\n    [theme.breakpoints.down(\"sm\")]: {\n      top: \"-50px !important\",\n      marginRight: \"22px\",\n      float: \"right\",\n    },\n  },\n  margin: {\n    zIndex: \"4\",\n    margin: \"0\",\n  },\n  searchIcon: {\n    width: \"17px\",\n    zIndex: \"4\",\n  },\n  notifications: {\n    zIndex: \"4\",\n    [theme.breakpoints.up(\"md\")]: {\n      position: \"absolute\",\n      top: \"2px\",\n      border: \"1px solid \" + whiteColor,\n      right: \"4px\",\n      fontSize: \"9px\",\n      background: dangerColor[0],\n      color: whiteColor,\n      minWidth: \"16px\",\n      height: \"16px\",\n      borderRadius: \"10px\",\n      textAlign: \"center\",\n      lineHeight: \"16px\",\n      verticalAlign: \"middle\",\n      display: \"block\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      ...defaultFont,\n      fontSize: \"14px\",\n      marginRight: \"8px\",\n    },\n  },\n  manager: {\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n    },\n    display: \"inline-block\",\n  },\n  searchWrapper: {\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"-webkit-fill-available\",\n      margin: \"10px 15px 0\",\n    },\n    display: \"inline-block\",\n  },\n});\n\nexport default headerLinksStyle;\n","import React from \"react\";\nimport classNames from \"classnames\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Poppers from \"@material-ui/core/Popper\";\n// @material-ui/icons\nimport Person from \"@material-ui/icons/Person\";\nimport Notifications from \"@material-ui/icons/Notifications\";\nimport Dashboard from \"@material-ui/icons/Dashboard\";\nimport Search from \"@material-ui/icons/Search\";\n// core components\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\n\nimport styles from \"assets/jss/material-dashboard-react/components/rtlHeaderLinksStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function RTLNavbarLinks() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(null);\n  const handleToggle = (event) => {\n    if (open && open.contains(event.target)) {\n      setOpen(null);\n    } else {\n      setOpen(event.currentTarget);\n    }\n  };\n\n  const handleClose = () => {\n    setOpen(null);\n  };\n\n  return (\n    <div>\n      <div className={classes.searchWrapper}>\n        <CustomInput\n          formControlProps={{\n            className: classes.margin + \" \" + classes.search,\n          }}\n          inputProps={{\n            placeholder: \"جستجو...\",\n            inputProps: {\n              \"aria-label\": \"Search\",\n            },\n          }}\n        />\n        <Button color=\"white\" aria-label=\"edit\" justIcon round>\n          <Search />\n        </Button>\n      </div>\n      <Button\n        color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\n        justIcon={window.innerWidth > 959}\n        simple={!(window.innerWidth > 959)}\n        aria-label=\"Dashboard\"\n        className={classes.buttonLink}\n      >\n        <Dashboard className={classes.icons} />\n        <Hidden mdUp implementation=\"css\">\n          <p className={classes.linkText}>آمارها</p>\n        </Hidden>\n      </Button>\n      <div className={classes.manager}>\n        <Button\n          color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\n          justIcon={window.innerWidth > 959}\n          simple={!(window.innerWidth > 959)}\n          aria-owns={open ? \"menu-list-grow\" : null}\n          aria-haspopup=\"true\"\n          onClick={handleToggle}\n          className={classes.buttonLink}\n        >\n          <Notifications className={classes.icons} />\n          <span className={classes.notifications}>۵</span>\n          <Hidden mdUp implementation=\"css\">\n            <p onClick={handleToggle} className={classes.linkText}>\n              اعلان‌ها\n            </p>\n          </Hidden>\n        </Button>\n        <Poppers\n          open={Boolean(open)}\n          anchorEl={open}\n          transition\n          disablePortal\n          className={\n            classNames({ [classes.popperClose]: !open }) +\n            \" \" +\n            classes.popperNav\n          }\n        >\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              id=\"menu-list-grow\"\n              style={{\n                transformOrigin:\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\",\n              }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleClose}>\n                  <MenuList role=\"menu\">\n                    <MenuItem\n                      onClick={handleClose}\n                      className={classes.dropdownItem}\n                    >\n                      محمدرضا به ایمیل شما پاسخ داد\n                    </MenuItem>\n                    <MenuItem\n                      onClick={handleClose}\n                      className={classes.dropdownItem}\n                    >\n                      شما ۵ وظیفه جدید دارید\n                    </MenuItem>\n                    <MenuItem\n                      onClick={handleClose}\n                      className={classes.dropdownItem}\n                    >\n                      از حالا شما با علیرضا دوست هستید\n                    </MenuItem>\n                    <MenuItem\n                      onClick={handleClose}\n                      className={classes.dropdownItem}\n                    >\n                      اعلان دیگر\n                    </MenuItem>\n                    <MenuItem\n                      onClick={handleClose}\n                      className={classes.dropdownItem}\n                    >\n                      اعلان دیگر\n                    </MenuItem>\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Poppers>\n      </div>\n      <Button\n        color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\n        justIcon={window.innerWidth > 959}\n        simple={!(window.innerWidth > 959)}\n        aria-label=\"Person\"\n        className={classes.buttonLink}\n      >\n        <Person className={classes.icons} />\n        <Hidden mdUp implementation=\"css\">\n          <p className={classes.linkText}>حساب کاربری</p>\n        </Hidden>\n      </Button>\n    </div>\n  );\n}\n","import React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst styles = {\n  grid: {\n    padding: \"0 15px !important\",\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function GridItem(props) {\n  const classes = useStyles();\n  const { children, ...rest } = props;\n  return (\n    <Grid item {...rest} className={classes.grid}>\n      {children}\n    </Grid>\n  );\n}\n\nGridItem.propTypes = {\n  children: PropTypes.node,\n};\n","import React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst styles = {\n  grid: {\n    margin: \"0 0px !important\",\n    width: \"unset\",\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function GridContainer(props) {\n  const classes = useStyles();\n  const { children, ...rest } = props;\n  return (\n    <Grid container {...rest} className={classes.grid}>\n      {children}\n    </Grid>\n  );\n}\n\nGridContainer.propTypes = {\n  children: PropTypes.node,\n};\n","import {\n  blackColor,\n  whiteColor,\n  hexToRgb,\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst cardStyle = {\n  card: {\n    border: \"0\",\n    marginBottom: \"30px\",\n    marginTop: \"30px\",\n    borderRadius: \"6px\",\n    color: \"rgba(\" + hexToRgb(blackColor) + \", 0.87)\",\n    background: whiteColor,\n    width: \"100%\",\n    boxShadow: \"0 1px 4px 0 rgba(\" + hexToRgb(blackColor) + \", 0.14)\",\n    position: \"relative\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    minWidth: \"0\",\n    wordWrap: \"break-word\",\n    fontSize: \".875rem\",\n  },\n  cardPlain: {\n    background: \"transparent\",\n    boxShadow: \"none\",\n  },\n  cardProfile: {\n    marginTop: \"30px\",\n    textAlign: \"center\",\n  },\n  cardChart: {\n    \"& p\": {\n      marginTop: \"0px\",\n      paddingTop: \"0px\",\n    },\n  },\n};\n\nexport default cardStyle;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// @material-ui/icons\n\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/cardStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Card(props) {\n  const classes = useStyles();\n  const { className, children, plain, profile, chart, ...rest } = props;\n  const cardClasses = classNames({\n    [classes.card]: true,\n    [classes.cardPlain]: plain,\n    [classes.cardProfile]: profile,\n    [classes.cardChart]: chart,\n    [className]: className !== undefined,\n  });\n  return (\n    <div className={cardClasses} {...rest}>\n      {children}\n    </div>\n  );\n}\n\nCard.propTypes = {\n  className: PropTypes.string,\n  plain: PropTypes.bool,\n  profile: PropTypes.bool,\n  chart: PropTypes.bool,\n  children: PropTypes.node,\n};\n","import {\n  warningCardHeader,\n  successCardHeader,\n  dangerCardHeader,\n  infoCardHeader,\n  primaryCardHeader,\n  roseCardHeader,\n  whiteColor,\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst cardHeaderStyle = {\n  cardHeader: {\n    padding: \"0.75rem 1.25rem\",\n    marginBottom: \"0\",\n    borderBottom: \"none\",\n    background: \"transparent\",\n    zIndex: \"3 !important\",\n    \"&$cardHeaderPlain,&$cardHeaderIcon,&$cardHeaderStats,&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\n      margin: \"0 15px\",\n      padding: \"0\",\n      position: \"relative\",\n      color: whiteColor,\n    },\n    \"&:first-child\": {\n      borderRadius: \"calc(.25rem - 1px) calc(.25rem - 1px) 0 0\",\n    },\n    \"&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\n      \"&:not($cardHeaderIcon)\": {\n        borderRadius: \"3px\",\n        marginTop: \"-20px\",\n        padding: \"15px\",\n      },\n    },\n    \"&$cardHeaderStats svg\": {\n      fontSize: \"36px\",\n      lineHeight: \"56px\",\n      textAlign: \"center\",\n      width: \"36px\",\n      height: \"36px\",\n      margin: \"10px 10px 4px\",\n    },\n    \"&$cardHeaderStats i,&$cardHeaderStats .material-icons\": {\n      fontSize: \"36px\",\n      lineHeight: \"56px\",\n      width: \"56px\",\n      height: \"56px\",\n      textAlign: \"center\",\n      overflow: \"unset\",\n      marginBottom: \"1px\",\n    },\n    \"&$cardHeaderStats$cardHeaderIcon\": {\n      textAlign: \"right\",\n    },\n  },\n  cardHeaderPlain: {\n    marginLeft: \"0px !important\",\n    marginRight: \"0px !important\",\n  },\n  cardHeaderStats: {\n    \"& $cardHeaderIcon\": {\n      textAlign: \"right\",\n    },\n    \"& h1,& h2,& h3,& h4,& h5,& h6\": {\n      margin: \"0 !important\",\n    },\n  },\n  cardHeaderIcon: {\n    \"&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\n      background: \"transparent\",\n      boxShadow: \"none\",\n    },\n    \"& i,& .material-icons\": {\n      width: \"33px\",\n      height: \"33px\",\n      textAlign: \"center\",\n      lineHeight: \"33px\",\n    },\n    \"& svg\": {\n      width: \"24px\",\n      height: \"24px\",\n      textAlign: \"center\",\n      lineHeight: \"33px\",\n      margin: \"5px 4px 0px\",\n    },\n  },\n  warningCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...warningCardHeader,\n    },\n  },\n  successCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...successCardHeader,\n    },\n  },\n  dangerCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...dangerCardHeader,\n    },\n  },\n  infoCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...infoCardHeader,\n    },\n  },\n  primaryCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...primaryCardHeader,\n    },\n  },\n  roseCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...roseCardHeader,\n    },\n  },\n};\n\nexport default cardHeaderStyle;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// @material-ui/icons\n\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/cardHeaderStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CardHeader(props) {\n  const classes = useStyles();\n  const { className, children, color, plain, stats, icon, ...rest } = props;\n  const cardHeaderClasses = classNames({\n    [classes.cardHeader]: true,\n    [classes[color + \"CardHeader\"]]: color,\n    [classes.cardHeaderPlain]: plain,\n    [classes.cardHeaderStats]: stats,\n    [classes.cardHeaderIcon]: icon,\n    [className]: className !== undefined,\n  });\n  return (\n    <div className={cardHeaderClasses} {...rest}>\n      {children}\n    </div>\n  );\n}\n\nCardHeader.propTypes = {\n  className: PropTypes.string,\n  color: PropTypes.oneOf([\n    \"warning\",\n    \"success\",\n    \"danger\",\n    \"info\",\n    \"primary\",\n    \"rose\",\n  ]),\n  plain: PropTypes.bool,\n  stats: PropTypes.bool,\n  icon: PropTypes.bool,\n  children: PropTypes.node,\n};\n","import {\n  warningCardHeader,\n  successCardHeader,\n  dangerCardHeader,\n  infoCardHeader,\n  primaryCardHeader,\n  roseCardHeader,\n  grayColor,\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst cardIconStyle = {\n  cardIcon: {\n    \"&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\n      borderRadius: \"3px\",\n      backgroundColor: grayColor[0],\n      padding: \"15px\",\n      marginTop: \"-20px\",\n      marginRight: \"15px\",\n      float: \"left\",\n    },\n  },\n  warningCardHeader,\n  successCardHeader,\n  dangerCardHeader,\n  infoCardHeader,\n  primaryCardHeader,\n  roseCardHeader,\n};\n\nexport default cardIconStyle;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// @material-ui/icons\n\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/cardIconStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CardIcon(props) {\n  const classes = useStyles();\n  const { className, children, color, ...rest } = props;\n  const cardIconClasses = classNames({\n    [classes.cardIcon]: true,\n    [classes[color + \"CardHeader\"]]: color,\n    [className]: className !== undefined,\n  });\n  return (\n    <div className={cardIconClasses} {...rest}>\n      {children}\n    </div>\n  );\n}\n\nCardIcon.propTypes = {\n  className: PropTypes.string,\n  color: PropTypes.oneOf([\n    \"warning\",\n    \"success\",\n    \"danger\",\n    \"info\",\n    \"primary\",\n    \"rose\",\n  ]),\n  children: PropTypes.node,\n};\n","import { grayColor } from \"assets/jss/material-dashboard-react.js\";\n\nconst cardFooterStyle = {\n  cardFooter: {\n    padding: \"0\",\n    paddingTop: \"10px\",\n    margin: \"0 15px 10px\",\n    borderRadius: \"0\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    display: \"flex\",\n    backgroundColor: \"transparent\",\n    border: \"0\",\n  },\n  cardFooterProfile: {\n    marginTop: \"-15px\",\n  },\n  cardFooterPlain: {\n    paddingLeft: \"5px\",\n    paddingRight: \"5px\",\n    backgroundColor: \"transparent\",\n  },\n  cardFooterStats: {\n    borderTop: \"1px solid \" + grayColor[10],\n    marginTop: \"20px\",\n    \"& svg\": {\n      position: \"relative\",\n      top: \"4px\",\n      marginRight: \"3px\",\n      marginLeft: \"3px\",\n      width: \"16px\",\n      height: \"16px\",\n    },\n    \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\n      fontSize: \"16px\",\n      position: \"relative\",\n      top: \"4px\",\n      marginRight: \"3px\",\n      marginLeft: \"3px\",\n    },\n  },\n  cardFooterChart: {\n    borderTop: \"1px solid \" + grayColor[10],\n  },\n};\n\nexport default cardFooterStyle;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// @material-ui/icons\n\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/cardFooterStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CardFooter(props) {\n  const classes = useStyles();\n  const { className, children, plain, profile, stats, chart, ...rest } = props;\n  const cardFooterClasses = classNames({\n    [classes.cardFooter]: true,\n    [classes.cardFooterPlain]: plain,\n    [classes.cardFooterProfile]: profile,\n    [classes.cardFooterStats]: stats,\n    [classes.cardFooterChart]: chart,\n    [className]: className !== undefined,\n  });\n  return (\n    <div className={cardFooterClasses} {...rest}>\n      {children}\n    </div>\n  );\n}\n\nCardFooter.propTypes = {\n  className: PropTypes.string,\n  plain: PropTypes.bool,\n  profile: PropTypes.bool,\n  stats: PropTypes.bool,\n  chart: PropTypes.bool,\n  children: PropTypes.node,\n};\n","import {\n  successColor,\n  whiteColor,\n  grayColor,\n  hexToRgb,\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst dashboardStyle = {\n  successText: {\n    color: successColor[0],\n  },\n  upArrowCardCategory: {\n    width: \"16px\",\n    height: \"16px\",\n  },\n  stats: {\n    color: grayColor[0],\n    display: \"inline-flex\",\n    fontSize: \"12px\",\n    lineHeight: \"22px\",\n    \"& svg\": {\n      top: \"4px\",\n      width: \"16px\",\n      height: \"16px\",\n      position: \"relative\",\n      marginRight: \"3px\",\n      marginLeft: \"3px\",\n    },\n    \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\n      top: \"4px\",\n      fontSize: \"16px\",\n      position: \"relative\",\n      marginRight: \"3px\",\n      marginLeft: \"3px\",\n    },\n  },\n  cardCategory: {\n    color: grayColor[0],\n    margin: \"0\",\n    fontSize: \"14px\",\n    marginTop: \"0\",\n    paddingTop: \"10px\",\n    marginBottom: \"0\",\n  },\n  cardCategoryWhite: {\n    color: \"rgba(\" + hexToRgb(whiteColor) + \",.62)\",\n    margin: \"0\",\n    fontSize: \"14px\",\n    marginTop: \"0\",\n    marginBottom: \"0\",\n  },\n\n  cardTitle: {\n    color: grayColor[2],\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: grayColor[1],\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n  cardTitleWhite: {\n    color: whiteColor,\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: grayColor[1],\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nexport default dashboardStyle;\n","import React from \"react\";\n// react plugin for creating charts\n// import ChartistGraph from \"react-chartist\";\n// @material-ui/core\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Icon from \"@material-ui/core/Icon\";\n// @material-ui/icons\nimport Store from \"@material-ui/icons/Store\";\n// import Warning from \"@material-ui/icons/Warning\";\nimport DateRange from \"@material-ui/icons/DateRange\";\nimport LocalOffer from \"@material-ui/icons/LocalOffer\";\nimport Update from \"@material-ui/icons/Update\";\n// import ArrowUpward from \"@material-ui/icons/ArrowUpward\";\n// import AccessTime from \"@material-ui/icons/AccessTime\";\nimport Accessibility from \"@material-ui/icons/Accessibility\";\n// import BugReport from \"@material-ui/icons/BugReport\";\n// import Code from \"@material-ui/icons/Code\";\n// import Cloud from \"@material-ui/icons/Cloud\";\n// core components\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\n// import Table from \"components/Table/Table.js\";\n// import Tasks from \"components/Tasks/Tasks.js\";\n// import CustomTabs from \"components/CustomTabs/CustomTabs.js\";\n// import Danger from \"components/Typography/Danger.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardIcon from \"components/Card/CardIcon.js\";\n// import CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\n\n// import { bugs, website, server } from \"variables/general.js\";\n\n// import {\n//   dailySalesChart,\n//   emailsSubscriptionChart,\n//   completedTasksChart,\n// } from \"variables/charts.js\";\n\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  return (\n    <div>\n      <GridContainer>\n        <GridItem xs={12} sm={6} md={3}>\n          <Card>\n            <CardHeader color=\"warning\" stats icon>\n              <CardIcon color=\"warning\">\n                <Icon>content_copy</Icon>\n              </CardIcon>\n              <p className={classes.cardCategory}>Admitions Count</p>\n              <h3 className={classes.cardTitle}>0</h3>\n            </CardHeader>\n            <CardFooter stats>\n              <div className={classes.stats}>\n                <DateRange />\n                Last 24 Hours\n              </div>\n            </CardFooter>\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={6} md={3}>\n          <Card>\n            <CardHeader color=\"success\" stats icon>\n              <CardIcon color=\"success\">\n                <Store />\n              </CardIcon>\n              <p className={classes.cardCategory}>Upcoming Events</p>\n              <h3 className={classes.cardTitle}>0</h3>\n            </CardHeader>\n            <CardFooter stats>\n              <div className={classes.stats}>\n                <DateRange />\n                Last 24 Hours\n              </div>\n            </CardFooter>\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={6} md={3}>\n          <Card>\n            <CardHeader color=\"danger\" stats icon>\n              <CardIcon color=\"danger\">\n                <Icon>info_outline</Icon>\n              </CardIcon>\n              <p className={classes.cardCategory}>Enquiries</p>\n              <h3 className={classes.cardTitle}>0</h3>\n            </CardHeader>\n            <CardFooter stats>\n              <div className={classes.stats}>\n                <LocalOffer />\n                See them in Enquiry Tab\n              </div>\n            </CardFooter>\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={6} md={3}>\n          <Card>\n            <CardHeader color=\"info\" stats icon>\n              <CardIcon color=\"info\">\n                <Accessibility />\n              </CardIcon>\n              <p className={classes.cardCategory}>Total Students</p>\n              <h3 className={classes.cardTitle}>0</h3>\n            </CardHeader>\n            <CardFooter stats>\n              <div className={classes.stats}>\n                <Update />\n                Just Updated\n              </div>\n            </CardFooter>\n          </Card>\n        </GridItem>\n      </GridContainer>\n      {/* \n      <GridContainer>\n        <GridItem xs={12} sm={12} md={4}>\n          <Card chart>\n            <CardHeader color=\"success\">\n              <ChartistGraph\n                className=\"ct-chart\"\n                data={dailySalesChart.data}\n                type=\"Line\"\n                options={dailySalesChart.options}\n                listener={dailySalesChart.animation}\n              />\n            </CardHeader>\n            <CardBody>\n              <h4 className={classes.cardTitle}>Daily Admissions</h4>\n              <p className={classes.cardCategory}>\n                <span className={classes.successText}>\n                  <ArrowUpward className={classes.upArrowCardCategory} /> 55%\n                </span>{\" \"}\n                increase in today Admissions.\n              </p>\n            </CardBody>\n            <CardFooter chart>\n              <div className={classes.stats}>\n                <AccessTime /> updated 4 minutes ago\n              </div>\n            </CardFooter>\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={4}>\n          <Card chart>\n            <CardHeader color=\"warning\">\n              <ChartistGraph\n                className=\"ct-chart\"\n                data={emailsSubscriptionChart.data}\n                type=\"Bar\"\n                options={emailsSubscriptionChart.options}\n                responsiveOptions={emailsSubscriptionChart.responsiveOptions}\n                listener={emailsSubscriptionChart.animation}\n              />\n            </CardHeader>\n            <CardBody>\n              <h4 className={classes.cardTitle}>Email Subscriptions</h4>\n              <p className={classes.cardCategory}>Last Campaign Performance</p>\n            </CardBody>\n            <CardFooter chart>\n              <div className={classes.stats}>\n                <AccessTime /> campaign sent 2 days ago\n              </div>\n            </CardFooter>\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={4}>\n          <Card chart>\n            <CardHeader color=\"danger\">\n              <ChartistGraph\n                className=\"ct-chart\"\n                data={completedTasksChart.data}\n                type=\"Line\"\n                options={completedTasksChart.options}\n                listener={completedTasksChart.animation}\n              />\n            </CardHeader>\n            <CardBody>\n              <h4 className={classes.cardTitle}>Completed Tasks</h4>\n              <p className={classes.cardCategory}>Last Campaign Performance</p>\n            </CardBody>\n            <CardFooter chart>\n              <div className={classes.stats}>\n                <AccessTime /> campaign sent 2 days ago\n              </div>\n            </CardFooter>\n          </Card>\n        </GridItem>\n      </GridContainer>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={6}>\n          <CustomTabs\n            title=\"Tasks:\"\n            headerColor=\"primary\"\n            tabs={[\n              {\n                tabName: \"Bugs\",\n                tabIcon: BugReport,\n                tabContent: (\n                  <Tasks\n                    checkedIndexes={[0, 3]}\n                    tasksIndexes={[0, 1, 2, 3]}\n                    tasks={bugs}\n                  />\n                ),\n              },\n              {\n                tabName: \"Website\",\n                tabIcon: Code,\n                tabContent: (\n                  <Tasks\n                    checkedIndexes={[0]}\n                    tasksIndexes={[0, 1]}\n                    tasks={website}\n                  />\n                ),\n              },\n              {\n                tabName: \"Server\",\n                tabIcon: Cloud,\n                tabContent: (\n                  <Tasks\n                    checkedIndexes={[1]}\n                    tasksIndexes={[0, 1, 2]}\n                    tasks={server}\n                  />\n                ),\n              },\n            ]}\n          />\n        </GridItem>\n        <GridItem xs={12} sm={12} md={6}>\n          <Card>\n            <CardHeader color=\"warning\">\n              <h4 className={classes.cardTitleWhite}>Staffs Stats</h4>\n              <p className={classes.cardCategoryWhite}>\n                New Staffs on 15th September, 2016\n              </p>\n            </CardHeader>\n            <CardBody>\n              <Table\n                tableHeaderColor=\"warning\"\n                tableHead={[\n\"\",\"ID\", \"Name\", \"Salary\", \"Country\"]}\n                tableData={[\n                  [\"1\", \"Dakota Rice\", \"$36,738\", \"Niger\"],\n                  [\"2\", \"Minerva Hooper\", \"$23,789\", \"Curaçao\"],\n                  [\"3\", \"Sage Rodriguez\", \"$56,142\", \"Netherlands\"],\n                  [\"4\", \"Philip Chaney\", \"$38,735\", \"Korea, South\"],\n                ]}\n              />\n            </CardBody>\n          </Card>\n        </GridItem>\n      </GridContainer> */}\n    </div>\n  );\n}\n","const Domain = \"https://www.marygiricollegebackend.xyz\";\nexport { Domain };\n","import {\n  warningColor,\n  primaryColor,\n  dangerColor,\n  successColor,\n  infoColor,\n  roseColor,\n  grayColor,\n  defaultFont,\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst tableStyle = (theme) => ({\n  warningTableHeader: {\n    color: warningColor[0],\n  },\n  primaryTableHeader: {\n    color: primaryColor[0],\n  },\n  dangerTableHeader: {\n    color: dangerColor[0],\n  },\n  successTableHeader: {\n    color: successColor[0],\n  },\n  infoTableHeader: {\n    backgroundColor: grayColor[10],\n    color: infoColor[0],\n  },\n  roseTableHeader: {\n    color: roseColor[0],\n  },\n  grayTableHeader: {\n    color: grayColor[0],\n  },\n  table: {\n    marginBottom: \"0\",\n    width: \"100%\",\n    maxWidth: \"100%\",\n    backgroundColor: \"transparent\",\n    borderSpacing: \"0\",\n    borderCollapse: \"collapse\",\n  },\n  tableHeadCell: {\n    color: \"inherit\",\n    ...defaultFont,\n    \"&, &$tableCell\": {\n      fontSize: \"1em\",\n    },\n  },\n  tableCell: {\n    ...defaultFont,\n    lineHeight: \"1.42857143\",\n    padding: \"12px 8px\",\n    verticalAlign: \"middle\",\n    fontSize: \"0.8125rem\",\n    maxWidth: \"100%\",\n  },\n  tableCellImage: {\n    ...defaultFont,\n    lineHeight: \"1.42857143\",\n    padding: \"12px 8px\",\n    verticalAlign: \"middle\",\n    fontSize: \"0.8125rem\",\n    maxWidth: \"150px\",\n  },\n  tableResponsive: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n    overflowX: \"auto\",\n  },\n  tableHeadRow: {\n    height: \"56px\",\n    color: \"inherit\",\n    display: \"table-row\",\n    outline: \"none\",\n    verticalAlign: \"middle\",\n  },\n  tableBodyRow: {\n    height: \"48px\",\n    color: \"inherit\",\n    display: \"table-row\",\n    outline: \"none\",\n    verticalAlign: \"middle\",\n  },\n});\n\nexport default tableStyle;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\n// Inspired by the former Facebook spinners.\nconst useStylesFacebook = makeStyles((theme) => ({\n  root: {\n    position: \"relative\",\n  },\n  bottom: {\n    color: theme.palette.grey[theme.palette.type === \"light\" ? 200 : 700],\n  },\n  top: {\n    color: \"#18bdd1\",\n    animationDuration: \"750ms\",\n    position: \"absolute\",\n    left: 0,\n  },\n  circle: {\n    strokeLinecap: \"round\",\n  },\n}));\n\nfunction FacebookCircularProgress(props) {\n  const classes = useStylesFacebook();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress\n        variant=\"determinate\"\n        className={classes.bottom}\n        size={40}\n        thickness={4}\n        {...props}\n        value={100}\n      />\n      <CircularProgress\n        variant=\"indeterminate\"\n        disableShrink\n        className={classes.top}\n        classes={{\n          circle: classes.circle,\n        }}\n        size={40}\n        thickness={4}\n        {...props}\n      />\n    </div>\n  );\n}\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n  },\n});\n\nexport default function Loader() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <FacebookCircularProgress />\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport Edit from \"@material-ui/icons/Edit\";\nimport Close from \"@material-ui/icons/Close\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\nimport Loader from \"components/Loader/Loader\";\nimport { Domain } from \"Domain\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CustomTable({\n  tableHead,\n  tableData,\n  tableHeaderColor,\n  setEdit,\n  setDelete,\n  loading,\n}) {\n  const classes = useStyles();\n  return (\n    <div className={classes.tableResponsive}>\n      {loading ? (\n        <GridContainer justify=\"center\">\n          <GridItem xs={12} sm={12} md={1}>\n            <Loader />\n          </GridItem>\n        </GridContainer>\n      ) : (\n        <Table className={classes.table}>\n          {tableHead !== undefined ? (\n            <TableHead className={classes[tableHeaderColor + \"TableHeader\"]}>\n              <TableRow className={classes.tableHeadRow}>\n                {tableHead.map((prop, key) => {\n                  return (\n                    <TableCell\n                      className={\n                        classes.tableCell + \" \" + classes.tableHeadCell\n                      }\n                      key={key}\n                    >\n                      {prop}\n                    </TableCell>\n                  );\n                })}\n              </TableRow>\n            </TableHead>\n          ) : null}\n\n          <TableBody>\n            {tableData.map((prop, key) => {\n              return (\n                <TableRow key={key} className={classes.tableBodyRow}>\n                  <img\n                    className={classes.tableCellImage}\n                    src={Domain + prop.Image}\n                    alt=\"..\"\n                  />\n                  {Object.values(prop).map((props, key) => {\n                    return (\n                      <TableCell className={classes.tableCell} key={key}>\n                        {props}\n                      </TableCell>\n                    );\n                  })}\n                  <Button\n                    onClick={() => setEdit(prop.Id)}\n                    simple\n                    justIcon\n                    size=\"lg\"\n                    color=\"success\"\n                  >\n                    <Edit />\n                  </Button>\n                  <Button\n                    onClick={() => setDelete(prop.Id)}\n                    simple\n                    justIcon\n                    size=\"lg\"\n                    color=\"danger\"\n                  >\n                    <Close />\n                  </Button>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      )}\n    </div>\n  );\n}\n\nCustomTable.defaultProps = {\n  tableHeaderColor: \"gray\",\n};\n\nCustomTable.propTypes = {\n  tableHeaderColor: PropTypes.oneOf([\n    \"warning\",\n    \"primary\",\n    \"danger\",\n    \"success\",\n    \"info\",\n    \"rose\",\n    \"gray\",\n  ]),\n  tableHead: PropTypes.arrayOf(PropTypes.string),\n  tableData: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string)),\n  setEdit: PropTypes.any,\n  setDelete: PropTypes.any,\n  loading: PropTypes.bool,\n};\n","const cardBodyStyle = {\n  cardBody: {\n    padding: \"0.9375rem 20px\",\n    flex: \"1 1 auto\",\n    WebkitBoxFlex: \"1\",\n    position: \"relative\",\n  },\n  cardBodyPlain: {\n    paddingLeft: \"5px\",\n    paddingRight: \"5px\",\n  },\n  cardBodyProfile: {\n    marginTop: \"15px\",\n  },\n};\n\nexport default cardBodyStyle;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// @material-ui/icons\n\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/cardBodyStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CardBody(props) {\n  const classes = useStyles();\n  const { className, children, plain, profile, ...rest } = props;\n  const cardBodyClasses = classNames({\n    [classes.cardBody]: true,\n    [classes.cardBodyPlain]: plain,\n    [classes.cardBodyProfile]: profile,\n    [className]: className !== undefined,\n  });\n  return (\n    <div className={cardBodyClasses} {...rest}>\n      {children}\n    </div>\n  );\n}\n\nCardBody.propTypes = {\n  className: PropTypes.string,\n  plain: PropTypes.bool,\n  profile: PropTypes.bool,\n  children: PropTypes.node,\n};\n","import {\n  defaultFont,\n  primaryBoxShadow,\n  infoBoxShadow,\n  successBoxShadow,\n  warningBoxShadow,\n  dangerBoxShadow,\n  roseBoxShadow,\n  whiteColor,\n  blackColor,\n  grayColor,\n  infoColor,\n  successColor,\n  dangerColor,\n  roseColor,\n  primaryColor,\n  warningColor,\n  hexToRgb,\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst snackbarContentStyle = {\n  root: {\n    ...defaultFont,\n    flexWrap: \"unset\",\n    position: \"relative\",\n    padding: \"20px 15px\",\n    lineHeight: \"20px\",\n    marginBottom: \"20px\",\n    fontSize: \"14px\",\n    backgroundColor: whiteColor,\n    color: grayColor[7],\n    borderRadius: \"3px\",\n    minWidth: \"unset\",\n    maxWidth: \"unset\",\n    boxShadow:\n      \"0 12px 20px -10px rgba(\" +\n      hexToRgb(whiteColor) +\n      \", 0.28), 0 4px 20px 0px rgba(\" +\n      hexToRgb(blackColor) +\n      \", 0.12), 0 7px 8px -5px rgba(\" +\n      hexToRgb(whiteColor) +\n      \", 0.2)\",\n  },\n  top20: {\n    top: \"20px\",\n  },\n  top40: {\n    top: \"40px\",\n  },\n  info: {\n    backgroundColor: infoColor[3],\n    color: whiteColor,\n    ...infoBoxShadow,\n  },\n  success: {\n    backgroundColor: successColor[3],\n    color: whiteColor,\n    ...successBoxShadow,\n  },\n  warning: {\n    backgroundColor: warningColor[3],\n    color: whiteColor,\n    ...warningBoxShadow,\n  },\n  danger: {\n    backgroundColor: dangerColor[3],\n    color: whiteColor,\n    ...dangerBoxShadow,\n  },\n  primary: {\n    backgroundColor: primaryColor[3],\n    color: whiteColor,\n    ...primaryBoxShadow,\n  },\n  rose: {\n    backgroundColor: roseColor[3],\n    color: whiteColor,\n    ...roseBoxShadow,\n  },\n  message: {\n    padding: \"0\",\n    display: \"block\",\n    maxWidth: \"89%\",\n  },\n  close: {\n    width: \"11px\",\n    height: \"11px\",\n  },\n  iconButton: {\n    width: \"24px\",\n    height: \"24px\",\n    padding: \"0px\",\n  },\n  icon: {\n    display: \"block\",\n    left: \"15px\",\n    position: \"absolute\",\n    top: \"50%\",\n    marginTop: \"-15px\",\n    width: \"30px\",\n    height: \"30px\",\n  },\n  infoIcon: {\n    color: infoColor[3],\n  },\n  successIcon: {\n    color: successColor[3],\n  },\n  warningIcon: {\n    color: warningColor[3],\n  },\n  dangerIcon: {\n    color: dangerColor[3],\n  },\n  primaryIcon: {\n    color: primaryColor[3],\n  },\n  roseIcon: {\n    color: roseColor[3],\n  },\n  iconMessage: {\n    paddingLeft: \"50px\",\n    display: \"block\",\n  },\n  actionRTL: {\n    marginLeft: \"-8px\",\n    marginRight: \"auto\",\n  },\n};\n\nexport default snackbarContentStyle;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Snack from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\n// @material-ui/icons\nimport Close from \"@material-ui/icons/Close\";\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/snackbarContentStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Snackbar(props) {\n  const classes = useStyles();\n  const { message, color, close, icon, place, open, rtlActive } = props;\n  var action = [];\n  const messageClasses = classNames({\n    [classes.iconMessage]: icon !== undefined,\n  });\n  if (close !== undefined) {\n    action = [\n      <IconButton\n        className={classes.iconButton}\n        key=\"close\"\n        aria-label=\"Close\"\n        color=\"inherit\"\n        onClick={() => props.closeNotification()}\n      >\n        <Close className={classes.close} />\n      </IconButton>,\n    ];\n  }\n  return (\n    <Snack\n      anchorOrigin={{\n        vertical: place.indexOf(\"t\") === -1 ? \"bottom\" : \"top\",\n        horizontal:\n          place.indexOf(\"l\") !== -1\n            ? \"left\"\n            : place.indexOf(\"c\") !== -1\n            ? \"center\"\n            : \"right\",\n      }}\n      open={open}\n      message={\n        <div>\n          {icon !== undefined ? <props.icon className={classes.icon} /> : null}\n          <span className={messageClasses}>{message}</span>\n        </div>\n      }\n      action={action}\n      ContentProps={{\n        classes: {\n          root: classes.root + \" \" + classes[color],\n          message: classes.message,\n          action: classNames({ [classes.actionRTL]: rtlActive }),\n        },\n      }}\n    />\n  );\n}\n\nSnackbar.propTypes = {\n  message: PropTypes.node.isRequired,\n  color: PropTypes.oneOf([\"info\", \"success\", \"warning\", \"danger\", \"primary\"]),\n  close: PropTypes.bool,\n  icon: PropTypes.object,\n  place: PropTypes.oneOf([\"tl\", \"tr\", \"tc\", \"br\", \"bl\", \"bc\"]),\n  open: PropTypes.bool,\n  rtlActive: PropTypes.bool,\n  closeNotification: PropTypes.func,\n};\n","import {\n  defaultFont,\n  primaryColor,\n  infoColor,\n  successColor,\n  warningColor,\n  dangerColor,\n  grayColor,\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst typographyStyle = {\n  defaultFontStyle: {\n    ...defaultFont,\n    fontSize: \"14px\",\n  },\n  defaultHeaderMargins: {\n    marginTop: \"20px\",\n    marginBottom: \"10px\",\n  },\n  quote: {\n    padding: \"10px 20px\",\n    margin: \"0 0 20px\",\n    fontSize: \"17.5px\",\n    borderLeft: \"5px solid \" + grayColor[10],\n  },\n  quoteText: {\n    margin: \"0 0 10px\",\n    fontStyle: \"italic\",\n  },\n  quoteAuthor: {\n    display: \"block\",\n    fontSize: \"80%\",\n    lineHeight: \"1.42857143\",\n    color: grayColor[1],\n  },\n  mutedText: {\n    color: grayColor[1],\n  },\n  primaryText: {\n    color: primaryColor[0],\n  },\n  infoText: {\n    color: infoColor[0],\n  },\n  successText: {\n    color: successColor[0],\n  },\n  warningText: {\n    color: warningColor[0],\n  },\n  dangerText: {\n    color: dangerColor[0],\n  },\n};\n\nexport default typographyStyle;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/typographyStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Danger(props) {\n  const classes = useStyles();\n  const { children } = props;\n  return (\n    <div className={classes.defaultFontStyle + \" \" + classes.dangerText}>\n      {children}\n    </div>\n  );\n}\n\nDanger.propTypes = {\n  children: PropTypes.node,\n};\n","const customFileInputStyle = {\n  inputFile: {\n    opacity: \"0\",\n    position: \"absolute\",\n    top: \"0\",\n    right: \"0\",\n    bottom: \"0\",\n    left: \"0\",\n    width: \"100%\",\n    height: \"100%\",\n    zIndex: \"-1\",\n  },\n  inputFileWrapper: {\n    \"& button svg\": {\n      color: \"inherit\",\n    },\n  },\n};\n\nexport default customFileInputStyle;\n","import React from \"react\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\n\nimport styles from \"assets/jss/material-dashboard-react/components/customFileInputStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CustomFileInput(props) {\n  const [fileNames, setFileNames] = React.useState(\"\");\n  // eslint-disable-next-line\n  // useEffect(() => {\n  //   console.log(\"file:\" + files);\n  // }, [files]);\n\n  let hiddenFile = React.createRef();\n  const onFocus = (e) => {\n    hiddenFile.current.click(e);\n  };\n  // eslint-disable-next-line\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // files is the file/image uploaded\n    // in this function you can save the image (files) on form submit\n    // you have to call it yourself\n  };\n  const addFile = (e) => {\n    let fileNames = \"\";\n    let files = e.target.files;\n    for (let i = 0; i < e.target.files.length; i++) {\n      fileNames = fileNames + e.target.files[i].name;\n      if (props.multiple && i !== e.target.files.length - 1) {\n        fileNames = fileNames + \", \";\n      }\n    }\n\n    setFileNames(fileNames);\n    if (props.onChange) {\n      props.onChange(files, fileNames);\n    }\n    props.setFiles(files);\n  };\n\n  const {\n    id,\n    endButton,\n    startButton,\n    inputProps,\n    formControlProps,\n    multiple,\n    saved,\n  } = props;\n  const classes = useStyles();\n  if (inputProps && inputProps.type && inputProps.type === \"file\") {\n    inputProps.type = \"text\";\n  }\n  let buttonStart;\n  let buttonEnd;\n  if (saved) {\n    // console.log(\"saved: \", saved, \"filename:\", fileNames);\n  }\n  if (startButton) {\n    buttonStart = (\n      <Button {...startButton.buttonProps}>\n        {startButton.icon !== undefined ? startButton.icon : null}\n        {startButton.text !== undefined ? startButton.text : null}\n      </Button>\n    );\n  }\n  if (endButton) {\n    buttonEnd = (\n      <Button {...endButton.buttonProps}>\n        {endButton.icon !== undefined ? endButton.icon : null}\n        {endButton.text !== undefined ? endButton.text : null}\n      </Button>\n    );\n  }\n  return (\n    <div className={classes.inputFileWrapper}>\n      <input\n        type=\"file\"\n        className={classes.inputFile}\n        multiple={multiple}\n        ref={hiddenFile}\n        onChange={addFile}\n      />\n      <CustomInput\n        id={id}\n        formControlProps={{\n          ...formControlProps,\n        }}\n        inputProps={{\n          ...inputProps,\n          onClick: onFocus,\n          value: fileNames,\n          endAdornment: buttonEnd,\n          startAdornment: buttonStart,\n        }}\n      />\n    </div>\n  );\n}\n\nCustomFileInput.defaultProps = {\n  multiple: false,\n};\n\nCustomFileInput.propTypes = {\n  saved: PropTypes.bool,\n  setFiles: PropTypes.any,\n  id: PropTypes.string,\n  endButton: PropTypes.object,\n  startButton: PropTypes.object,\n  inputProps: PropTypes.object,\n  formControlProps: PropTypes.object,\n  multiple: PropTypes.bool,\n  // it is a function from which you can get the file that was uploaded\n  // more can be read here: https://github.com/creativetimofficial/ct-material-kit-pro-react/issues/64 and here: https://github.com/creativetimofficial/ct-material-kit-pro-react/issues/37\n  onChange: PropTypes.func,\n};\n","import {\n  grayColor,\n  primaryColor,\n  infoColor,\n  successColor,\n  warningColor,\n  whiteColor,\n  dangerColor,\n  hexToRgb,\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst paginationStyle = {\n  pagination: {\n    display: \"flex\",\n    paddingLeft: \"0\",\n    listStyle: \"none\",\n    borderRadius: \"0.25rem\",\n  },\n  paginationItem: {\n    display: \"inline\",\n  },\n  paginationLink: {\n    \":first-of-type\": {\n      marginleft: \"0\",\n    },\n    letterSpacing: \"unset\",\n    border: \"0\",\n    borderRadius: \"30px !important\",\n    transition: \"all .3s\",\n    padding: \"0px 11px\",\n    margin: \"0 3px\",\n    minWidth: \"30px\",\n    height: \"30px\",\n    minHeight: \"auto\",\n    lineHeight: \"30px\",\n    fontWeight: \"400\",\n    fontSize: \"12px\",\n    textTransform: \"uppercase\",\n    background: \"transparent\",\n    position: \"relative\",\n    float: \"left\",\n    textDecoration: \"none\",\n    boxSizing: \"border-box\",\n    \"&,&:hover,&:focus\": {\n      color: grayColor[0],\n    },\n    \"&:hover,&:focus\": {\n      zIndex: \"3\",\n      backgroundColor: grayColor[2],\n      borderColor: grayColor[6],\n    },\n    \"&:hover\": {\n      cursor: \"pointer\",\n    },\n  },\n  primary: {\n    \"&,&:hover,&:focus\": {\n      backgroundColor: primaryColor[0],\n      borderColor: primaryColor[0],\n      color: whiteColor,\n      boxShadow:\n        \"0 4px 5px 0 rgba(\" +\n        hexToRgb(primaryColor[0]) +\n        \", 0.14), 0 1px 10px 0 rgba(\" +\n        hexToRgb(primaryColor[0]) +\n        \", 0.12), 0 2px 4px -1px rgba(\" +\n        hexToRgb(primaryColor[0]) +\n        \", 0.2)\",\n    },\n    \"&:hover,&:focus\": {\n      zIndex: \"2\",\n      cursor: \"default\",\n    },\n  },\n  info: {\n    \"&,&:hover,&:focus\": {\n      backgroundColor: infoColor[0],\n      borderColor: infoColor[0],\n      color: whiteColor,\n      boxShadow:\n        \"0 4px 5px 0 rgba(\" +\n        hexToRgb(infoColor[0]) +\n        \", 0.14), 0 1px 10px 0 rgba(\" +\n        hexToRgb(infoColor[0]) +\n        \", 0.12), 0 2px 4px -1px rgba(\" +\n        hexToRgb(infoColor[0]) +\n        \", 0.2)\",\n    },\n    \"&:hover,&:focus\": {\n      zIndex: \"2\",\n      cursor: \"default\",\n    },\n  },\n  success: {\n    \"&,&:hover,&:focus\": {\n      backgroundColor: successColor[0],\n      borderColor: successColor[0],\n      color: whiteColor,\n      boxShadow:\n        \"0 4px 5px 0 rgba(\" +\n        hexToRgb(successColor[0]) +\n        \", 0.14), 0 1px 10px 0 rgba(\" +\n        hexToRgb(successColor[0]) +\n        \", 0.12), 0 2px 4px -1px rgba(\" +\n        hexToRgb(successColor[0]) +\n        \", 0.2)\",\n    },\n    \"&:hover,&:focus\": {\n      zIndex: \"2\",\n      cursor: \"default\",\n    },\n  },\n  warning: {\n    \"&,&:hover,&:focus\": {\n      backgroundColor: warningColor[0],\n      borderColor: warningColor[0],\n      color: whiteColor,\n      boxShadow:\n        \"0 4px 5px 0 rgba(\" +\n        hexToRgb(warningColor[0]) +\n        \", 0.14), 0 1px 10px 0 rgba(\" +\n        hexToRgb(warningColor[0]) +\n        \", 0.12), 0 2px 4px -1px rgba(\" +\n        hexToRgb(warningColor[0]) +\n        \", 0.2)\",\n    },\n    \"&:hover,&:focus\": {\n      zIndex: \"2\",\n      cursor: \"default\",\n    },\n  },\n  danger: {\n    \"&,&:hover,&:focus\": {\n      backgroundColor: dangerColor[0],\n      borderColor: dangerColor[0],\n      color: whiteColor,\n      boxShadow:\n        \"0 4px 5px 0 rgba(\" +\n        hexToRgb(dangerColor[0]) +\n        \", 0.14), 0 1px 10px 0 rgba(\" +\n        hexToRgb(dangerColor[0]) +\n        \", 0.12), 0 2px 4px -1px rgba(\" +\n        hexToRgb(dangerColor[0]) +\n        \", 0.2)\",\n    },\n    \"&:hover,&:focus\": {\n      zIndex: \"2\",\n      cursor: \"default\",\n    },\n  },\n  disabled: {\n    \"&,&:hover,&:focus\": {\n      color: grayColor[10],\n      cursor: \"not-allowed\",\n      backgroundColor: whiteColor,\n      borderColor: grayColor[6],\n    },\n  },\n};\n\nexport default paginationStyle;\n","import React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\nimport styles from \"assets/jss/material-dashboard-react/components/paginationStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Pagination(props) {\n  const { pages, color, className } = props;\n  const classes = useStyles();\n  const paginationClasses = classNames(classes.pagination, className);\n  function HandlePrev() {\n    if (props.pageIndex !== 0) props.setPageIndex(props.pageIndex - 1);\n  }\n  function HandleNext() {\n    props.setPageIndex(props.pageIndex + 1);\n  }\n  return (\n    <ul className={paginationClasses}>\n      {pages.map((prop, key) => {\n        const paginationLink = classNames({\n          [classes.paginationLink]: true,\n          [classes[color]]: prop.active,\n          [classes.disabled]: prop.disabled,\n        });\n        return (\n          <li className={classes.paginationItem} key={key}>\n            {prop.text === \"Previous\" ? (\n              <Button\n                onClick={HandlePrev}\n                className={paginationLink}\n                disabled={prop.disabled}\n              >\n                {prop.text}\n              </Button>\n            ) : (\n              <>\n                {prop.text === \"Next\" ? (\n                  <Button\n                    onClick={HandleNext}\n                    className={paginationLink}\n                    disabled={prop.disabled}\n                  >\n                    {prop.text}\n                  </Button>\n                ) : (\n                  <Button className={paginationLink} disabled={prop.disabled}>\n                    {props.pageIndex + 1}\n                  </Button>\n                )}\n              </>\n            )}\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nPagination.defaultProps = {\n  color: \"primary\",\n};\n\nPagination.propTypes = {\n  setPageIndex: PropTypes.any,\n  pageIndex: PropTypes.any,\n  pages: PropTypes.arrayOf(\n    PropTypes.shape({\n      active: PropTypes.bool,\n      disabled: PropTypes.bool,\n      text: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n        .isRequired,\n      onClick: PropTypes.func,\n    })\n  ).isRequired,\n  color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\"]),\n  className: PropTypes.string,\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Domain } from \"Domain\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport axios from \"axios\";\nimport Danger from \"components/Typography/Danger\";\nimport LoadingOverlay from \"react-loading-overlay\";\n// import ImageUpload from \"components/CustomUpload/ImageUpload.js\";\n\nimport AttachFile from \"@material-ui/icons/AttachFile\";\nimport CustomFileInput from \"components/CustomFileInput/CustomFileInput.js\";\nimport Pagination from \"components/Pagination/Pagination\";\n// import { data } from \"./data.json\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function Slideshow() {\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [events, setEvents] = React.useState([]);\n  const [files, setFiles] = React.useState(null);\n  const [validated, setValidated] = React.useState(true);\n  const [uploaded, setUploaded] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  const [saving, setSaving] = React.useState(false);\n\n  const Sildedata = events.map((d) => ({\n    Id: d.Id,\n    Name: d.Name,\n    Quote: d.Quote,\n    ButtonLink: d.ButtonLink,\n    ButtonText: d.ButtonText,\n    Image: d.Image,\n  }));\n\n  //Saved Notification trigger\n  const showSavedNotification = () => {\n    if (!saved) {\n      setSaved(true);\n      setTimeout(function () {\n        setSaved(false);\n      }, 3000);\n    }\n  };\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n  //Form Data\n  const [data, setData] = React.useState({\n    Id: 0,\n    Name: \"\",\n    Quote: \"\",\n    Status: \"Created\",\n    Image: \"\",\n    ButtonLink: \"\",\n    ButtonText: \"\",\n  });\n\n  //PassData for getAll API\n  let passData = {\n    PageIndex: 0,\n    PageSize: 10,\n  };\n\n  //PaddData for Delete a Row\n  let passDelete = {\n    Id: deletee,\n    DeletedBy: 2,\n  };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n  //Function to handle Data input\n  function HandleData(e) {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n  function HandleClear() {\n    setData({\n      Id: 0,\n      Name: \"\",\n      Quote: \"\",\n      Status: \"Created\",\n      Image: \"\",\n      ButtonLink: \"\",\n      ButtonText: \"\",\n    });\n  }\n  //Function for Validating fields\n  function ValidateFields() {\n    if (data.Name == \"\") {\n      return false;\n    } else if (data.Quote == \"\") {\n      return false;\n    } else if (data.Image == \"\") {\n      return false;\n    } else if (data.ButtonLink == \"\") {\n      return false;\n    } else if (data.ButtonText == \"\") {\n      return false;\n    } else return true;\n  }\n  //function to upload\n  function UploadImage() {\n    if (files != null) {\n      setValidated(true);\n      setSaving(true);\n      let form_data = new FormData();\n      form_data.append(\"File\", files[0]);\n      let url = Domain + \"/api/Uploads/File/\";\n      axios\n        .post(url, form_data, {\n          headers: {\n            \"content-type\": \"multipart/form-data\",\n          },\n        })\n        .then((res) => {\n          if (res.data.Success) {\n            data.Image = res.data.Data[0];\n            setUploaded(true);\n            HandleSave();\n          } else {\n            setUploaded(false);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setUploaded(false);\n        });\n    } else {\n      setValidated(false);\n    }\n  }\n\n  //Function to save Data\n  function HandleSave() {\n    if (ValidateFields()) {\n      setValidated(true);\n      fetch(Domain + \"/api/Master/CreateCorousal/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setData({\n              Id: 0,\n              Name: \"\",\n              Quote: \"\",\n              Status: \"Created\",\n              Image: \"\",\n              ButtonLink: \"\",\n              ButtonText: \"\",\n            });\n            setEmpty(false);\n            showSavedNotification();\n            setSaving(false);\n          } else {\n            console.log(\"Error in insertion\");\n          }\n        });\n    } else {\n      setValidated(false);\n    }\n    setUploaded(false);\n  }\n\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n    fetch(Domain + \"/api/Master/GetAllCorousal/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length > 2) setPagination(true);\n      });\n  }, [pageIndex]);\n\n  useEffect(() => {\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Master/GetAllCorousal/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n      });\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      setDeleting(true);\n      fetch(Domain + \"/api/Master/DeleteCorousal/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passDelete),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setDelete([]);\n            showDeletedNotification();\n            setDeleting(false);\n          }\n        });\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Master/GetCorousalById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit([]);\n            setData(json.Data);\n            console.log(json.Data);\n          }\n        });\n    }\n  }, [deletee, edit, saved]);\n\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Slideshow Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Slideshow Deleted Successfully\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n      <LoadingOverlay active={saving} spinner text=\"Saving Please Wait..\">\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <Card>\n              <form>\n                <CardHeader color=\"info\">\n                  <h4 className={classes.cardTitleWhite}>Add New Slideshow</h4>\n                  <p className={classes.cardCategoryWhite}>\n                    Enter the slideshow details below and hit Save\n                  </p>\n                </CardHeader>\n\n                <CardBody>\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Name}\n                        labelText=\"Name\"\n                        id=\"Name\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Quote}\n                        labelText=\"Quote\"\n                        id=\"Quote\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                  </GridContainer>\n\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={3}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.ButtonLink}\n                        labelText=\"ButtonLink\"\n                        id=\"ButtonLink\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={3}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.ButtonText}\n                        labelText=\"ButtonText\"\n                        id=\"ButtonText\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={5} md={4}>\n                      {\" \"}\n                      <CustomFileInput\n                        setFiles={setFiles}\n                        saved={uploaded}\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          placeholder: \"Click here to upload an image\",\n                        }}\n                        endButton={{\n                          buttonProps: {\n                            round: true,\n                            color: \"info\",\n                            justIcon: true,\n                            filebutton: true,\n                          },\n                          icon: <AttachFile />,\n                        }}\n                      />\n                      {validated ? (\n                        <></>\n                      ) : (\n                        <Danger>Please enter all the details to save</Danger>\n                      )}\n                    </GridItem>\n                  </GridContainer>\n                </CardBody>\n                <CardFooter>\n                  <Button onClick={HandleClear} color=\"defualt\">\n                    Clear\n                  </Button>\n                  <Button onClick={UploadImage} color=\"info\">\n                    Save\n                  </Button>\n                </CardFooter>\n              </form>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      </LoadingOverlay>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>List Of All Slideshows</h4>\n              <p className={classes.cardCategoryWhite}>\n                All slideshow are listed below, you can delete or edit them.\n              </p>\n            </CardHeader>\n            <CardBody>\n              <LoadingOverlay active={deleting} spinner text=\"Please Wait..\">\n                {empty ? (\n                  <p>empty</p>\n                ) : (\n                  <Table\n                    tableHeaderColor=\"info\"\n                    tableHead={[\n                      \"\",\n                      \"ID\",\n                      \"Name\",\n                      \"Quote\",\n                      // \"Status\",\n                      \"ButtonLink\",\n                      \"ButtonText\",\n                      \"Image\",\n                      // \"Created By\",\n                      // \"Created Date\",\n                      // \"Modified By\",\n                      // \"Modified Date\",\n                      // \"Deteled By\",\n                      // \"Deleted Date\",\n                      \"Actions\",\n                    ]}\n                    tableData={Sildedata}\n                    setEdit={setEdit}\n                    setDelete={setDelete}\n                    loading={loading}\n                  />\n                )}\n              </LoadingOverlay>\n            </CardBody>\n          </Card>\n          {pagination ? (\n            <Pagination\n              setPageIndex={setPageIndex}\n              pageIndex={pageIndex}\n              className={\n                classes.textCenter + \" \" + classes.justifyContentCenter\n              }\n              pages={[\n                { text: \"Previous\" },\n                { active: true, text: \"1\" },\n\n                { text: \"Next\" },\n              ]}\n              color=\"info\"\n            />\n          ) : (\n            <></>\n          )}\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Domain } from \"Domain\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport axios from \"axios\";\nimport Danger from \"components/Typography/Danger\";\nimport LoadingOverlay from \"react-loading-overlay\";\n// import ImageUpload from \"components/CustomUpload/ImageUpload.js\";\n\nimport AttachFile from \"@material-ui/icons/AttachFile\";\nimport CustomFileInput from \"components/CustomFileInput/CustomFileInput.js\";\nimport Pagination from \"components/Pagination/Pagination\";\n\n// import { data } from \"./data.json\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function Events() {\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [events, setEvents] = React.useState([]);\n  const [files, setFiles] = React.useState(null);\n  const [validated, setValidated] = React.useState(true);\n  const [uploaded, setUploaded] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  const [saving, setSaving] = React.useState(false);\n\n  const Eventslist = events.map((d) => ({\n    Id: d.Id,\n    Name: d.Name,\n    Venue: d.Venue,\n    Date: d.Date,\n    Description: d.Description,\n    Image: d.Image,\n  }));\n  console.log(Eventslist);\n  //Saved Notification trigger\n  const showSavedNotification = () => {\n    if (!saved) {\n      setSaved(true);\n      setTimeout(function () {\n        setSaved(false);\n      }, 3000);\n    }\n  };\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n  //Form Data\n  const [data, setData] = React.useState({\n    Id: 0,\n    Name: \"\",\n    Venue: \"\",\n    Date: \"\",\n    Status: \"Created\",\n    Image: \"\",\n    Description: \"\",\n  });\n\n  //PassData for getAll API\n  let passData = {\n    PageIndex: 0,\n    PageSize: 10,\n  };\n\n  //PaddData for Delete a Row\n  let passDelete = {\n    Id: deletee,\n    DeletedBy: 2,\n  };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n  //Function to handle Data input\n  function HandleData(e) {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n  function HandleClear() {\n    setData({\n      Id: 0,\n      Name: \"\",\n      Venue: \"\",\n      Date: \"\",\n      Status: \"Created\",\n      Image: \"\",\n      Description: \"\",\n    });\n  }\n  //Function for Validating fields\n  function ValidateFields() {\n    if (data.Name == \"\") {\n      return false;\n    } else if (data.Venue == \"\") {\n      return false;\n    } else if (data.Date == \"\") {\n      return false;\n    } else if (data.Image == \"\") {\n      return false;\n    } else if (data.Description == \"\") {\n      return false;\n    } else return true;\n  }\n  //function to upload\n  function UploadImage() {\n    if (files != null) {\n      setValidated(true);\n      setSaving(true);\n      let form_data = new FormData();\n      form_data.append(\"File\", files[0]);\n      let url = Domain + \"/api/Uploads/File/\";\n      axios\n        .post(url, form_data, {\n          headers: {\n            \"content-type\": \"multipart/form-data\",\n          },\n        })\n        .then((res) => {\n          if (res.data.Success) {\n            data.Image = res.data.Data[0];\n            setUploaded(true);\n            HandleSave();\n          } else {\n            setUploaded(false);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setUploaded(false);\n        });\n    } else {\n      setValidated(false);\n    }\n  }\n\n  //Function to save Data\n  function HandleSave() {\n    if (ValidateFields()) {\n      setValidated(true);\n      fetch(Domain + \"/api/Admin/CreateEvents/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setData({\n              Id: 0,\n              Name: \"\",\n              Venue: \"\",\n              Date: \"\",\n              Status: \"Created\",\n              Image: \"\",\n              Description: \"\",\n            });\n            setEmpty(false);\n            showSavedNotification();\n            setSaving(false);\n          } else {\n            console.log(\"Error in insertion\");\n          }\n        });\n    } else {\n      setValidated(false);\n    }\n    setUploaded(false);\n  }\n\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n    fetch(Domain + \"/api/Admin/GetAllEvents/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length > 2) setPagination(true);\n      });\n  }, [pageIndex]);\n\n  useEffect(() => {\n    console.log(\"componentDidMount\");\n    console.log(\"Detele\" + deletee + \" edit\" + edit);\n\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Admin/GetAllEvents/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n      });\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      setDeleting(true);\n      fetch(Domain + \"/api/Admin/DeleteEvents/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passDelete),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setDelete([]);\n            showDeletedNotification();\n            setDeleting(false);\n          }\n        });\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Admin/GetEventsById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit([]);\n            setData(json.Data);\n            console.log(json.Data);\n          }\n        });\n    }\n  }, [deletee, edit, saved]);\n\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Event Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Event Deleted Successfully\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n      <LoadingOverlay active={saving} spinner text=\"Saving Please Wait..\">\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <Card>\n              <form>\n                <CardHeader color=\"info\">\n                  <h4 className={classes.cardTitleWhite}>Add New Event</h4>\n                  <p className={classes.cardCategoryWhite}>\n                    Enter the Event details below and hit Save\n                  </p>\n                </CardHeader>\n\n                <CardBody>\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={5}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Name}\n                        labelText=\"Event Name\"\n                        id=\"Name\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={3}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Venue}\n                        labelText=\"Venue\"\n                        id=\"Venue\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={3}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Date}\n                        labelText=\"Date\"\n                        id=\"Date\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                  </GridContainer>\n\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Description}\n                        labelText=\"Enter a description about the event..\"\n                        id=\"Description\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          multiline: true,\n                          rows: 5,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={5} md={5}>\n                      {\" \"}\n                      <CustomFileInput\n                        setFiles={setFiles}\n                        saved={uploaded}\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          placeholder: \"Click here to upload an image\",\n                        }}\n                        endButton={{\n                          buttonProps: {\n                            round: true,\n                            color: \"info\",\n                            justIcon: true,\n                            filebutton: true,\n                          },\n                          icon: <AttachFile />,\n                        }}\n                      />\n                      {validated ? (\n                        <></>\n                      ) : (\n                        <Danger>Please enter all the details to save</Danger>\n                      )}\n                    </GridItem>\n                  </GridContainer>\n                </CardBody>\n                <CardFooter>\n                  <Button onClick={HandleClear} color=\"defualt\">\n                    Clear\n                  </Button>\n                  <Button onClick={UploadImage} color=\"info\">\n                    Save\n                  </Button>\n                </CardFooter>\n              </form>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      </LoadingOverlay>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>List Of All Events</h4>\n              <p className={classes.cardCategoryWhite}>\n                All events are listed below, you can delete or edit them.\n              </p>\n            </CardHeader>\n            <CardBody>\n              <LoadingOverlay active={deleting} spinner text=\"Please Wait..\">\n                {empty ? (\n                  <p>empty</p>\n                ) : (\n                  <Table\n                    tableHeaderColor=\"info\"\n                    tableHead={[\n                      \"\",\n                      \"\",\n                      \"ID\",\n                      \"Name\",\n                      \"Venue\",\n                      \"Date\",\n                      \"Description\",\n                      \"Image Url\",\n                      \"Actions\",\n                    ]}\n                    tableData={Eventslist}\n                    setEdit={setEdit}\n                    setDelete={setDelete}\n                    loading={loading}\n                  />\n                )}\n              </LoadingOverlay>\n            </CardBody>\n          </Card>\n          {pagination ? (\n            <Pagination\n              setPageIndex={setPageIndex}\n              pageIndex={pageIndex}\n              className={\n                classes.textCenter + \" \" + classes.justifyContentCenter\n              }\n              pages={[\n                { text: \"Previous\" },\n                { active: true, text: \"1\" },\n\n                { text: \"Next\" },\n              ]}\n              color=\"info\"\n            />\n          ) : (\n            <></>\n          )}\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Domain } from \"Domain\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport axios from \"axios\";\nimport Danger from \"components/Typography/Danger\";\nimport LoadingOverlay from \"react-loading-overlay\";\n// import ImageUpload from \"components/CustomUpload/ImageUpload.js\";\n\nimport AttachFile from \"@material-ui/icons/AttachFile\";\nimport CustomFileInput from \"components/CustomFileInput/CustomFileInput.js\";\nimport Pagination from \"components/Pagination/Pagination\";\n\n// import { data } from \"./data.json\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function Gallery() {\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [events, setEvents] = React.useState([]);\n  const [files, setFiles] = React.useState(null);\n  const [validated, setValidated] = React.useState(true);\n  const [uploaded, setUploaded] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  const [saving, setSaving] = React.useState(false);\n\n  const Gallerydata = events.map((d) => ({\n    Id: d.Id,\n    Name: d.Name,\n    Image: d.Image,\n  }));\n\n  //Saved Notification trigger\n  const showSavedNotification = () => {\n    if (!saved) {\n      setSaved(true);\n      setTimeout(function () {\n        setSaved(false);\n      }, 3000);\n    }\n  };\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n  //Form Data\n  const [data, setData] = React.useState({\n    Id: 0,\n    Name: \"\",\n    Status: \"Created\",\n    Image: \"\",\n  });\n\n  //PassData for getAll API\n  let passData = {\n    PageIndex: 0,\n    PageSize: 10,\n  };\n\n  //PaddData for Delete a Row\n  let passDelete = {\n    Id: deletee,\n    DeletedBy: 2,\n  };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n  //Function to handle Data input\n  function HandleData(e) {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n  function HandleClear() {\n    setData({\n      Id: 0,\n      Name: \"\",\n      Status: \"Created\",\n      Image: \"\",\n    });\n  }\n  //Function for Validating fields\n  function ValidateFields() {\n    if (data.Name == \"\") {\n      return false;\n    } else if (data.Image == \"\") {\n      return false;\n    } else return true;\n  }\n  //function to upload\n  function UploadImage() {\n    if (files != null) {\n      setValidated(true);\n      setSaving(true);\n      let form_data = new FormData();\n      form_data.append(\"File\", files[0]);\n      let url = Domain + \"/api/Uploads/File/\";\n      axios\n        .post(url, form_data, {\n          headers: {\n            \"content-type\": \"multipart/form-data\",\n          },\n        })\n        .then((res) => {\n          if (res.data.Success) {\n            data.Image = res.data.Data[0];\n            setUploaded(true);\n            HandleSave();\n          } else {\n            setUploaded(false);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setUploaded(false);\n        });\n    } else {\n      setValidated(false);\n    }\n  }\n\n  //Function to save Data\n  function HandleSave() {\n    if (ValidateFields()) {\n      setValidated(true);\n      fetch(Domain + \"/api/Master/CreateGallery/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setData({\n              Id: 0,\n              Name: \"\",\n              Status: \"Created\",\n              Image: \"\",\n            });\n            setEmpty(false);\n            showSavedNotification();\n            setSaving(false);\n          } else {\n            console.log(\"Error in insertion\");\n          }\n        });\n    } else {\n      setValidated(false);\n    }\n    setUploaded(false);\n  }\n\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n    fetch(Domain + \"/api/Master/GetAllGallery/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length > 2) setPagination(true);\n      });\n  }, [pageIndex]);\n\n  useEffect(() => {\n    console.log(\"componentDidMount\");\n    console.log(\"Detele\" + deletee + \" edit\" + edit);\n\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Master/GetAllGallery/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n      });\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      setDeleting(true);\n      fetch(Domain + \"/api/Master/DeleteGallery/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passDelete),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setDelete([]);\n            showDeletedNotification();\n            setDeleting(false);\n          }\n        });\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Master/GetGalleryById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit([]);\n            setData(json.Data);\n            console.log(json.Data);\n          }\n        });\n    }\n  }, [deletee, edit, saved]);\n\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Gallery Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Gallery Deleted Successfully\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n      <LoadingOverlay active={saving} spinner text=\"Saving Please Wait..\">\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <Card>\n              <form>\n                <CardHeader color=\"info\">\n                  <h4 className={classes.cardTitleWhite}>Add New Gallery</h4>\n                  <p className={classes.cardCategoryWhite}>\n                    Enter the Gallery details below and hit Save\n                  </p>\n                </CardHeader>\n\n                <CardBody>\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Name}\n                        labelText=\"Name\"\n                        id=\"Name\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n\n                    <GridItem xs={12} sm={5} md={5}>\n                      {\" \"}\n                      <CustomFileInput\n                        setFiles={setFiles}\n                        saved={uploaded}\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          placeholder: \"Click here to upload an image\",\n                        }}\n                        endButton={{\n                          buttonProps: {\n                            round: true,\n                            color: \"info\",\n                            justIcon: true,\n                            filebutton: true,\n                          },\n                          icon: <AttachFile />,\n                        }}\n                      />\n                      {validated ? (\n                        <></>\n                      ) : (\n                        <Danger>Please enter all the details to save</Danger>\n                      )}\n                    </GridItem>\n                  </GridContainer>\n                </CardBody>\n                <CardFooter>\n                  <Button onClick={HandleClear} color=\"defualt\">\n                    Clear\n                  </Button>\n                  <Button onClick={UploadImage} color=\"info\">\n                    Save\n                  </Button>\n                </CardFooter>\n              </form>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      </LoadingOverlay>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>List Of All Gallery</h4>\n              <p className={classes.cardCategoryWhite}>\n                All Gallery are listed below, you can delete or edit them.\n              </p>\n            </CardHeader>\n            <CardBody>\n              <LoadingOverlay active={deleting} spinner text=\"Please Wait..\">\n                {empty ? (\n                  <p>empty</p>\n                ) : (\n                  <Table\n                    tableHeaderColor=\"info\"\n                    tableHead={[\n                      \"\",\n                      \"ID\",\n                      \"Name\",\n                      // \"Status\",\n                      \"Image\",\n                      // \"Created By\",\n                      // \"Created Date\",\n                      // \"Modified By\",\n                      // \"Modified Date\",\n                      // \"Deteled By\",\n                      // \"Deleted Date\",\n                      \"Actions\",\n                    ]}\n                    tableData={Gallerydata}\n                    setEdit={setEdit}\n                    setDelete={setDelete}\n                    loading={loading}\n                  />\n                )}\n              </LoadingOverlay>\n            </CardBody>\n          </Card>\n          {pagination ? (\n            <Pagination\n              setPageIndex={setPageIndex}\n              pageIndex={pageIndex}\n              className={\n                classes.textCenter + \" \" + classes.justifyContentCenter\n              }\n              pages={[\n                { text: \"Previous\" },\n                { active: true, text: \"1\" },\n\n                { text: \"Next\" },\n              ]}\n              color=\"info\"\n            />\n          ) : (\n            <></>\n          )}\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Domain } from \"Domain\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport axios from \"axios\";\nimport Danger from \"components/Typography/Danger\";\nimport LoadingOverlay from \"react-loading-overlay\";\n// import ImageUpload from \"components/CustomUpload/ImageUpload.js\";\n\nimport AttachFile from \"@material-ui/icons/AttachFile\";\nimport CustomFileInput from \"components/CustomFileInput/CustomFileInput.js\";\nimport Pagination from \"components/Pagination/Pagination\";\n// import { data } from \"./data.json\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function Courses() {\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [events, setEvents] = React.useState([]);\n  const [files, setFiles] = React.useState(null);\n  const [validated, setValidated] = React.useState(true);\n  const [uploaded, setUploaded] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  const [saving, setSaving] = React.useState(false);\n\n  const Coursedata = events.map((d) => ({\n    Id: d.Id,\n    CourseCode: d.CourseCode,\n    CourseDuration: d.CourseDuration,\n    CourseName: d.CourseName,\n    Description: d.Description,\n    Eligibility: d.Eligibility,\n    Image: d.Image,\n    Semesters: d.Semesters,\n    Syllabus: d.Syllabus,\n  }));\n\n  //Saved Notification trigger\n  const showSavedNotification = () => {\n    if (!saved) {\n      setSaved(true);\n      setTimeout(function () {\n        setSaved(false);\n      }, 3000);\n    }\n  };\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n  //Form Data\n  const [data, setData] = React.useState({\n    Id: 0,\n    CourseName: \"\",\n    Description: \"\",\n    CourseDuration: \"\",\n    Image: \"\",\n    Semesters: \"\",\n    Eligibility: \"\",\n    Syllabus: \"\",\n    CourseCode: \"\",\n    Status: \"Created\",\n  });\n\n  //PassData for getAll API\n  let passData = {\n    PageIndex: 0,\n    PageSize: 10,\n  };\n\n  //PaddData for Delete a Row\n  let passDelete = {\n    Id: deletee,\n    DeletedBy: 2,\n  };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n  //Function to handle Data input\n  function HandleData(e) {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n  function HandleClear() {\n    setData({\n      Id: 0,\n      CourseName: \"\",\n      Description: \"\",\n      CourseDuration: \"\",\n      Image: \"\",\n      Semesters: \"\",\n      Eligibility: \"\",\n      Syllabus: \"\",\n      CourseCode: \"\",\n      Status: \"Created\",\n    });\n  }\n  //Function for Validating fields\n  function ValidateFields() {\n    if (data.Name == \"\") {\n      return false;\n    } else if (data.Date == \"\") {\n      return false;\n    } else if (data.Image == \"\") {\n      return false;\n    } else if (data.Description == \"\") {\n      return false;\n    } else return true;\n  }\n  //function to upload\n  function UploadImage() {\n    if (files != null) {\n      setValidated(true);\n      setSaving(true);\n      let form_data = new FormData();\n      form_data.append(\"File\", files[0]);\n      let url = Domain + \"/api/Uploads/File/\";\n      axios\n        .post(url, form_data, {\n          headers: {\n            \"content-type\": \"multipart/form-data\",\n          },\n        })\n        .then((res) => {\n          if (res.data.Success) {\n            data.Image = res.data.Data[0];\n            setUploaded(true);\n            HandleSave();\n          } else {\n            setUploaded(false);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setUploaded(false);\n        });\n    } else {\n      setValidated(false);\n    }\n  }\n\n  //Function to save Data\n  function HandleSave() {\n    if (ValidateFields()) {\n      setValidated(true);\n      fetch(Domain + \"/api/Admin/CreateCourses/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          console.log(json);\n          if (json.Success) {\n            setData({\n              Id: 0,\n              CourseName: \"\",\n              Description: \"\",\n              CourseDuration: \"\",\n              Image: \"\",\n              Semesters: \"\",\n              Eligibility: \"\",\n              Syllabus: \"\",\n              CourseCode: \"\",\n              Status: \"Created\",\n            });\n            setEmpty(false);\n            showSavedNotification();\n            setSaving(false);\n          } else {\n            console.log(\"Error in insertion\");\n          }\n        });\n    } else {\n      setValidated(false);\n    }\n    setUploaded(false);\n  }\n\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n    fetch(Domain + \"/api/Admin/GetAllCourses/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length > 2) setPagination(true);\n      });\n  }, [pageIndex]);\n\n  useEffect(() => {\n    console.log(\"componentDidMount\");\n    console.log(\"Detele\" + deletee + \" edit\" + edit);\n\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Admin/GetAllCourses/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n      });\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      setDeleting(true);\n      fetch(Domain + \"/api/Admin/DeleteCourses/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passDelete),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setDelete([]);\n            showDeletedNotification();\n            setDeleting(false);\n          }\n        });\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Admin/GetCoursesById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit([]);\n            setData(json.Data);\n            console.log(json.Data);\n          }\n        });\n    }\n  }, [deletee, edit, saved]);\n\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Event Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Event Deleted Successfully\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n      <LoadingOverlay active={saving} spinner text=\"Saving Please Wait..\">\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <Card>\n              <form>\n                <CardHeader color=\"info\">\n                  <h4 className={classes.cardTitleWhite}>Add New Course</h4>\n                  <p className={classes.cardCategoryWhite}>\n                    Enter the Courses details below and hit Save\n                  </p>\n                </CardHeader>\n\n                <CardBody>\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={5}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.CourseName}\n                        labelText=\"Course Name\"\n                        id=\"CourseName\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={3}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.CourseDuration}\n                        labelText=\"CourseDuration\"\n                        id=\"CourseDuration\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Semesters}\n                        labelText=\"Semesters\"\n                        id=\"Semesters\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                  </GridContainer>\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={5}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Syllabus}\n                        labelText=\"Syllabus\"\n                        id=\"Syllabus\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={3}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Eligibility}\n                        labelText=\"Eligibility\"\n                        id=\"Eligibility\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={3}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.CourseCode}\n                        labelText=\"Course code\"\n                        id=\"CourseCode\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                  </GridContainer>\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Description}\n                        labelText=\"Enter a description about the Subject..\"\n                        id=\"Description\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          multiline: true,\n                          rows: 5,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={5} md={5}>\n                      {\" \"}\n                      <CustomFileInput\n                        setFiles={setFiles}\n                        saved={uploaded}\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          placeholder: \"Click here to upload an image\",\n                        }}\n                        endButton={{\n                          buttonProps: {\n                            round: true,\n                            color: \"info\",\n                            justIcon: true,\n                            filebutton: true,\n                          },\n                          icon: <AttachFile />,\n                        }}\n                      />\n                      {validated ? (\n                        <></>\n                      ) : (\n                        <Danger>Please enter all the details to save</Danger>\n                      )}\n                    </GridItem>\n                  </GridContainer>\n                </CardBody>\n                <CardFooter>\n                  <Button onClick={HandleClear} color=\"defualt\">\n                    Clear\n                  </Button>\n                  <Button onClick={UploadImage} color=\"info\">\n                    Save\n                  </Button>\n                </CardFooter>\n              </form>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      </LoadingOverlay>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>List Of All Courses</h4>\n              <p className={classes.cardCategoryWhite}>\n                All courses are listed below, you can delete or edit them.\n              </p>\n            </CardHeader>\n            <CardBody>\n              <LoadingOverlay active={deleting} spinner text=\"Please Wait..\">\n                {empty ? (\n                  <p>empty</p>\n                ) : (\n                  <Table\n                    tableHeaderColor=\"info\"\n                    tableHead={[\n                      \"\",\n                      \"ID\",\n                      \"CourseCode\",\n                      \"CourseDuration\",\n                      \"CourseName\",\n                      \"Description\",\n                      \"Eligibility\",\n                      \"Image\",\n                      \"Semesters\",\n                      \"Syllabus\",\n                      // \"Status\",\n                      // \"Created By\",\n                      // \"Created Date\",\n                      // \"Modified By\",\n                      // \"Modified Date\",\n                      // \"Deteled By\",\n                      // \"Deleted Date\",\n                      \"Actions\",\n                    ]}\n                    tableData={Coursedata}\n                    setEdit={setEdit}\n                    setDelete={setDelete}\n                    loading={loading}\n                  />\n                )}\n              </LoadingOverlay>\n            </CardBody>\n          </Card>\n          {pagination ? (\n            <Pagination\n              setPageIndex={setPageIndex}\n              pageIndex={pageIndex}\n              className={\n                classes.textCenter + \" \" + classes.justifyContentCenter\n              }\n              pages={[\n                { text: \"Previous\" },\n                { active: true, text: \"1\" },\n\n                { text: \"Next\" },\n              ]}\n              color=\"info\"\n            />\n          ) : (\n            <></>\n          )}\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Domain } from \"Domain\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport axios from \"axios\";\nimport Danger from \"components/Typography/Danger\";\nimport LoadingOverlay from \"react-loading-overlay\";\n// import ImageUpload from \"components/CustomUpload/ImageUpload.js\";\n\nimport AttachFile from \"@material-ui/icons/AttachFile\";\nimport CustomFileInput from \"components/CustomFileInput/CustomFileInput.js\";\nimport Pagination from \"components/Pagination/Pagination\";\n// import { data } from \"./data.json\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function Events() {\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [events, setEvents] = React.useState([]);\n  const [files, setFiles] = React.useState(null);\n  const [validated, setValidated] = React.useState(true);\n  const [uploaded, setUploaded] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  const [Saving, setSaving] = React.useState(false);\n\n  const Testdata = events.map((d) => ({\n    Id: d.Id,\n    Name: d.Name,\n    Message: d.Message,\n    Date: d.Date,\n    Description: d.Description,\n    Image: d.Image,\n  }));\n\n  //Saved Notification trigger\n  const showSavedNotification = () => {\n    if (!saved) {\n      setSaved(true);\n      setTimeout(function () {\n        setSaved(false);\n      }, 3000);\n    }\n  };\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n  //Form Data\n  const [data, setData] = React.useState({\n    Id: 0,\n    Name: \"\",\n    Message: \"\",\n    Date: \"\",\n    Status: \"Created\",\n    Image: \"\",\n    Description: \"\",\n  });\n\n  //PassData for getAll API\n  let passData = {\n    PageIndex: 0,\n    PageSize: 10,\n  };\n\n  //PaddData for Delete a Row\n  let passDelete = {\n    Id: deletee,\n    DeletedBy: 2,\n  };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n  //Function to handle Data input\n  function HandleData(e) {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n  function HandleClear() {\n    setData({\n      Id: 0,\n      Name: \"\",\n      Message: \"\",\n      Date: \"\",\n      Status: \"Created\",\n      Image: \"\",\n      Description: \"\",\n    });\n  }\n  //Function for Validating fields\n  function ValidateFields() {\n    if (data.Name == \"\") {\n      return false;\n    } else if (data.Date == \"\") {\n      return false;\n    } else if (data.Image == \"\") {\n      return false;\n    } else if (data.Description == \"\") {\n      return false;\n    } else return true;\n  }\n  //function to upload\n  function UploadImage() {\n    if (files != null) {\n      setValidated(true);\n      setSaving(true);\n      let form_data = new FormData();\n      form_data.append(\"File\", files[0]);\n      let url = Domain + \"/api/Uploads/File/\";\n      axios\n        .post(url, form_data, {\n          headers: {\n            \"content-type\": \"multipart/form-data\",\n          },\n        })\n        .then((res) => {\n          if (res.data.Success) {\n            data.Image = res.data.Data[0];\n            setUploaded(true);\n            HandleSave();\n          } else {\n            setUploaded(false);\n          }\n        });\n    } else {\n      setValidated(false);\n    }\n  }\n\n  //Function to save Data\n  function HandleSave() {\n    if (ValidateFields()) {\n      setValidated(true);\n      fetch(Domain + \"/api/Admin/CreateTestimonials/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setData({\n              Id: 0,\n              Name: \"\",\n              Message: \"\",\n              Date: \"\",\n              Status: \"Created\",\n              Image: \"\",\n              Description: \"\",\n            });\n            setEmpty(false);\n            showSavedNotification();\n            setSaving(false);\n          } else {\n            console.log(\"Error in insertion\");\n          }\n        });\n    } else {\n      setValidated(false);\n    }\n    setUploaded(false);\n  }\n\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n    fetch(Domain + \"/api/Admin/GetAllTestimonials/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length > 2) setPagination(true);\n      });\n  }, [pageIndex]);\n\n  useEffect(() => {\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Admin/GetAllTestimonials/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n      });\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      setDeleting(true);\n      fetch(Domain + \"/api/Admin/DeleteTestimonials/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passDelete),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setDelete([]);\n            showDeletedNotification();\n            setDeleting(false);\n          }\n        });\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Admin/GetTestimonialsById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit([]);\n            setData(json.Data);\n            console.log(json.Data);\n          }\n        });\n    }\n  }, [deletee, edit, saved]);\n\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Testimonials Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Testimonials Deleted Successfully\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n      <LoadingOverlay active={Saving} spinner text=\"Saving Please wait...\">\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <Card>\n              <form>\n                <CardHeader color=\"info\">\n                  <h4 className={classes.cardTitleWhite}>\n                    Add New Testimonials\n                  </h4>\n                  <p className={classes.cardCategoryWhite}>\n                    Enter the Testimonials details below and hit Save\n                  </p>\n                </CardHeader>\n\n                <CardBody>\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={5}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Name}\n                        labelText=\"Student Name\"\n                        id=\"Name\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={3}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Message}\n                        labelText=\"Message\"\n                        id=\"Message\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Date}\n                        labelText=\"Date\"\n                        id=\"Date\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                  </GridContainer>\n\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Description}\n                        labelText=\"Description..\"\n                        id=\"Description\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          multiline: true,\n                          rows: 5,\n                        }}\n                      />\n                    </GridItem>\n\n                    <GridItem xs={12} sm={5} md={5}>\n                      {\" \"}\n                      <CustomFileInput\n                        setFiles={setFiles}\n                        saved={uploaded}\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          placeholder: \"Click here to upload an image\",\n                        }}\n                        endButton={{\n                          buttonProps: {\n                            round: true,\n                            color: \"info\",\n                            justIcon: true,\n                            filebutton: true,\n                          },\n                          icon: <AttachFile />,\n                        }}\n                      />\n                      {validated ? (\n                        <></>\n                      ) : (\n                        <Danger>Please enter all the details to save</Danger>\n                      )}\n                    </GridItem>\n                  </GridContainer>\n                </CardBody>\n                <CardFooter>\n                  <Button onClick={HandleClear} color=\"defualt\">\n                    Clear\n                  </Button>\n                  <Button onClick={UploadImage} color=\"info\">\n                    Save\n                  </Button>\n                </CardFooter>\n              </form>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      </LoadingOverlay>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>\n                List Of All Testimonials\n              </h4>\n              <p className={classes.cardCategoryWhite}>\n                All Testimonials are listed below, you can delete or edit them.\n              </p>\n            </CardHeader>\n            <CardBody>\n              <LoadingOverlay active={deleting} spinner text=\"Please Wait..\">\n                {empty ? (\n                  <p>empty</p>\n                ) : (\n                  <Table\n                    tableHeaderColor=\"info\"\n                    tableHead={[\n                      \"\",\n                      \"ID\",\n                      \"Name\",\n                      \"Message\",\n                      \"Date\",\n                      \"Description\",\n                      \"Image\",\n                      // \"Created By\",\n                      // \"Created Date\",\n                      // \"Modified By\",\n                      // \"Modified Date\",\n                      // \"Deteled By\",\n                      // \"Deleted Date\",\n                      \"Actions\",\n                    ]}\n                    tableData={Testdata}\n                    setEdit={setEdit}\n                    setDelete={setDelete}\n                    loading={loading}\n                  />\n                )}\n              </LoadingOverlay>\n            </CardBody>\n          </Card>\n          {pagination ? (\n            <Pagination\n              setPageIndex={setPageIndex}\n              pageIndex={pageIndex}\n              className={\n                classes.textCenter + \" \" + classes.justifyContentCenter\n              }\n              pages={[\n                { text: \"Previous\" },\n                { active: true, text: \"1\" },\n\n                { text: \"Next\" },\n              ]}\n              color=\"info\"\n            />\n          ) : (\n            <></>\n          )}\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\n","import React from \"react\";\nimport Select from \"react-select\";\nimport PropTypes from \"prop-types\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nimport styles from \"assets/jss/material-dashboard-react/components/customInputStyle.js\";\nimport { makeStyles } from \"@material-ui/core\";\nconst useStyles = makeStyles(styles);\nexport default function SingleSelect({\n  placeholder,\n  Options,\n  setValue,\n  noOptionMessage,\n  formControlProps,\n}) {\n  const classes = useStyles();\n  const [selected, setSelected] = React.useState(null);\n  const handleChange = (e) => {\n    setValue({\n      Id: e.value,\n      Label: e.label,\n    });\n    setSelected(e);\n  };\n\n  return (\n    <FormControl\n      {...formControlProps}\n      className={formControlProps.className + \" \" + classes.formControl}\n    >\n      <Select\n        value={selected}\n        noOptionsMessage={() => noOptionMessage}\n        isSearchable\n        placeholder={placeholder}\n        options={Options}\n        onChange={handleChange}\n      />\n    </FormControl>\n  );\n}\nSingleSelect.propTypes = {\n  placeholder: PropTypes.string,\n  Options: PropTypes.array,\n  setValue: PropTypes.any,\n  data: PropTypes.any,\n  noOptionMessage: PropTypes.any,\n  formControlProps: PropTypes.any,\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Domain } from \"Domain\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport axios from \"axios\";\nimport Danger from \"components/Typography/Danger\";\nimport LoadingOverlay from \"react-loading-overlay\";\n// import ImageUpload from \"components/CustomUpload/ImageUpload.js\";\nimport SingleSelect from \"components/SingleSelect\";\nimport AttachFile from \"@material-ui/icons/AttachFile\";\nimport CustomFileInput from \"components/CustomFileInput/CustomFileInput.js\";\nimport Pagination from \"components/Pagination/Pagination\";\n// import { data } from \"./data.json\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function Students() {\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [events, setEvents] = React.useState([]);\n  const [files, setFiles] = React.useState(null);\n  const [validated, setValidated] = React.useState(true);\n  const [uploaded, setUploaded] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  const [saving, setSaving] = React.useState(false);\n  const [addStudent, setAddstudent] = React.useState(false);\n  const [validateFilter, setValidateFilter] = React.useState(true);\n  const [Courses, setCourses] = React.useState([]);\n\n  const CourseList = Courses.map((d) => ({\n    value: d.Id,\n    label: d.CourseName,\n  }));\n  //Filter Data\n  const [filterData, setFilterData] = React.useState({\n    PageIndex: 0,\n    PageSize: 10,\n    Year: \"\",\n    CourseId: \"\",\n  });\n  const [CourseValues, setCourseValues] = React.useState({\n    Id: null,\n    label: \"\",\n  });\n  const Studentdata = events.map((d) => ({\n    Id: d.Id,\n    FullName: d.FullName,\n    RegistrationNo: d.RegistrationNo,\n    ClassNo: d.ClassNo,\n    AdmissionNo: d.AdmissionNo,\n    Mobile: d.Mobile,\n    Email: d.Email,\n    Course: d.Course,\n    CourseCode: d.CourseCode,\n    Gender: d.Gender,\n    DOB: d.DOB,\n    Password: d.Password,\n    GuardianName: d.GuardianName,\n    GuardianMobile: d.GuardianMobile,\n    GuardianRelation: d.GuardianRelation,\n    Image: d.Image,\n    CourseId: d.CourseId,\n  }));\n\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n    fetch(Domain + \"/api/Student/GetAllStudents/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length > 2) setPagination(true);\n      });\n  }, [pageIndex]);\n\n  //PassData for get all semesters and courses for dropdown\n  let passData1 = {\n    PageIndex: 0,\n    PageSize: 0,\n  };\n\n  function AddStudent() {\n    if (addStudent) {\n      setAddstudent(false);\n      HandleClear();\n    } else setAddstudent(true);\n  }\n  //Saved Notification trigger\n  const showSavedNotification = () => {\n    if (!saved) {\n      setSaved(true);\n      setTimeout(function () {\n        setSaved(false);\n      }, 3000);\n    }\n  };\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n\n  //Form Data\n  const [data, setData] = React.useState({\n    Id: 0,\n    FullName: \"\",\n    Mobile: \"\",\n    Email: \"\",\n    Gender: \"\",\n    DOB: \"\",\n    Password: \"\",\n    GuardianName: \"\",\n    GuardianMobile: \"\",\n    RegistrationNo: \"\",\n    ClassNo: \"\",\n    AdmissionNo: \"\",\n    CourseId: null,\n    Course: \"\",\n    CourseCode: \"\",\n    GuardianRelation: \"\",\n    Status: \"Created\",\n    Image: \"\",\n  });\n\n  //PassData for getAll API\n  let passData = {\n    PageIndex: 0,\n    PageSize: 10,\n  };\n\n  //PaddData for Delete a Row\n  let passDelete = {\n    Id: deletee,\n    DeletedBy: 2,\n  };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n  //Function to handle Data input\n  function HandleData(e) {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n  function HandleFilterData(e) {\n    const newData = { ...filterData };\n    newData[e.target.id] = e.target.value;\n    setFilterData(newData);\n    console.log(newData);\n  }\n  function HandleClear() {\n    setData({\n      Id: 0,\n      FullName: \"\",\n      Mobile: \"\",\n      Email: \"\",\n      Gender: \"\",\n      DOB: \"\",\n      Password: \"\",\n      GuardianName: \"\",\n      GuardianMobile: \"\",\n      RegistrationNo: \"\",\n      ClassNo: \"\",\n      AdmissionNo: \"\",\n      CourseId: \"\",\n      Course: \"\",\n      CourseCode: \"\",\n      GuardianRelation: \"\",\n      Status: \"Created\",\n      Image: \"\",\n    });\n  }\n  //Function for Validating fields\n  function ValidateFields() {\n    if (data.FullName == \"\") {\n      return false;\n    } else if (data.Mobile == \"\") {\n      return false;\n    } else if (data.Email == \"\") {\n      return false;\n    } else if (data.Gender == \"\") {\n      return false;\n    } else if (data.DOB == \"\") {\n      return false;\n    } else if (data.Password == \"\") {\n      return false;\n    } else if (data.GuardianName == \"\") {\n      return false;\n    } else if (data.GuardianMobile == \"\") {\n      return false;\n    } else if (data.RegistrationNo == \"\") {\n      return false;\n    } else if (data.CourseId == \"\") {\n      return false;\n    } else if (data.AdmissionNo == \"\") {\n      return false;\n    } else if (data.GuardianRelation == \"\") {\n      return false;\n    } else if (data.Image == \"\") {\n      return false;\n    } else return true;\n  }\n  //function to upload\n  function UploadImage() {\n    if (files != null) {\n      setValidated(true);\n      setSaving(true);\n      let form_data = new FormData();\n      form_data.append(\"File\", files[0]);\n      let url = Domain + \"/api/Uploads/File/\";\n      axios\n        .post(url, form_data, {\n          headers: {\n            \"content-type\": \"multipart/form-data\",\n          },\n        })\n        .then((res) => {\n          if (res.data.Success) {\n            data.Image = res.data.Data[0];\n            setUploaded(true);\n            HandleSave();\n          } else {\n            setUploaded(false);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setUploaded(false);\n        });\n    } else {\n      setValidated(false);\n    }\n  }\n\n  //Function to save Data\n  function HandleSave() {\n    if (ValidateFields()) {\n      setValidated(true);\n      fetch(Domain + \"/api/Student/CreateStudent/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          console.log(json);\n          if (json.Success) {\n            setData({\n              Id: 0,\n              FullName: \"\",\n              Mobile: \"\",\n              Email: \"\",\n              Gender: \"\",\n              DOB: \"\",\n              Password: \"\",\n              GuardianName: \"\",\n              GuardianMobile: \"\",\n              RegistrationNo: \"\",\n              ClassNo: \"\",\n              AdmissionNo: \"\",\n              CourseId: \"\",\n              Course: \"\",\n              CourseCode: \"\",\n              GuardianRelation: \"\",\n              Status: \"Created\",\n              Image: \"\",\n            });\n            setEmpty(false);\n            showSavedNotification();\n            setSaving(false);\n            setAddstudent(false);\n          } else {\n            console.log(\"Error in insertion\");\n          }\n        });\n    } else {\n      setValidated(false);\n    }\n    setUploaded(false);\n  }\n  useEffect(() => {\n    console.log(CourseValues);\n    setFilterData((data) => ({\n      ...data,\n      CourseId: CourseValues.Id,\n    }));\n  }, [CourseValues.Id]);\n  useEffect(() => {\n    //API call for get all course names to dropedown\n    fetch(Domain + \"/api/Admin/GetAllCourses/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData1),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        if (json.Data.length != 0) setCourses(json.Data);\n      });\n\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Student/GetAllStudents/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n      });\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      setDeleting(true);\n      fetch(Domain + \"/api/Student/DeleteStudent/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passDelete),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setDelete([]);\n            showDeletedNotification();\n            setDeleting(false);\n          }\n        });\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Student/GetStudentById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit([]);\n            setData(json.Data);\n            setAddstudent(true);\n            console.log(json.Data);\n          }\n        });\n    }\n  }, [deletee, edit, saved]);\n  function HandleFilter() {\n    console.log(filterData);\n    if (\n      filterData.CourseId == null ||\n      filterData.CourseId == \"\" ||\n      filterData.Year == \"\"\n    )\n      setValidateFilter(false);\n    else {\n      setDeleting(true);\n      setValidateFilter(true);\n\n      //API call for get latest 10 elements\n      fetch(Domain + \"/api/Student/GetStudentsByCourseIdandDate/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(filterData),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          console.log(json);\n          setEmpty(false);\n          setEvents(json.Data);\n          setFilterData({\n            PageIndex: 0,\n            PageSize: 10,\n            Year: \"\",\n            CourseId: \"\",\n          });\n          setDeleting(false);\n          if (json.Data.length == 0) setEmpty(true);\n          setLoading(false);\n        });\n    }\n  }\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Student Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Student Deleted Successfully\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n      <LoadingOverlay active={saving} spinner text=\"Saving Please Wait..\">\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <Card>\n              <form>\n                <CardHeader color=\"info\">\n                  <h4 className={classes.cardTitleWhite}>\n                    Filter Students Data\n                  </h4>\n                  <p className={classes.cardCategoryWhite}>\n                    Select the Year and Course then click search\n                  </p>\n                </CardHeader>\n\n                <CardBody>\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        onChange={(e) => HandleFilterData(e)}\n                        value={filterData.Year}\n                        labelText=\"Year\"\n                        id=\"Year\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={3}>\n                      <SingleSelect\n                        noOptionsMessage=\"Create any course first\"\n                        placeholder=\"Select Course\"\n                        Options={CourseList}\n                        setValue={setCourseValues}\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                  </GridContainer>\n                  {validateFilter ? (\n                    <></>\n                  ) : (\n                    <Danger>Please select Year and Course</Danger>\n                  )}\n                </CardBody>\n                <CardFooter>\n                  <Button onClick={HandleFilter} color=\"info\">\n                    Search\n                  </Button>\n                </CardFooter>\n              </form>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      </LoadingOverlay>\n      {addStudent ? (\n        <div>\n          <LoadingOverlay active={saving} spinner text=\"Saving Please Wait..\">\n            <GridContainer>\n              <GridItem xs={12} sm={12} md={12}>\n                <Card>\n                  <form>\n                    <CardHeader color=\"info\">\n                      <h4 className={classes.cardTitleWhite}>\n                        Add New Students\n                      </h4>\n                      <p className={classes.cardCategoryWhite}>\n                        Enter the Student details below and hit Save\n                      </p>\n                    </CardHeader>\n\n                    <CardBody>\n                      <GridContainer>\n                        <GridItem xs={12} sm={12} md={6}>\n                          <CustomInput\n                            onChange={(e) => HandleData(e)}\n                            value={data.FullName}\n                            labelText=\"Full Name\"\n                            id=\"FullName\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n                        <GridItem xs={12} sm={12} md={3}>\n                          <CustomInput\n                            onChange={(e) => HandleData(e)}\n                            value={data.RegistrationNo}\n                            labelText=\"Registration No\"\n                            id=\"RegistrationNo\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n                        <GridItem xs={12} sm={12} md={3}>\n                          <CustomInput\n                            onChange={(e) => HandleData(e)}\n                            value={data.CourseId}\n                            labelText=\"Course\"\n                            id=\"CourseId\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n                        <GridItem xs={12} sm={12} md={4}>\n                          <CustomInput\n                            onChange={(e) => HandleData(e)}\n                            value={data.AdmissionNo}\n                            labelText=\"Admission No\"\n                            id=\"AdmissionNo\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n                      </GridContainer>\n\n                      <GridContainer>\n                        <GridItem xs={12} sm={12} md={6}>\n                          <CustomInput\n                            onChange={(e) => HandleData(e)}\n                            value={data.Mobile}\n                            labelText=\"Mobile\"\n                            id=\"Mobile\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n\n                        <GridItem xs={12} sm={12} md={6}>\n                          <CustomInput\n                            onChange={(e) => HandleData(e)}\n                            value={data.Email}\n                            labelText=\"Email ID\"\n                            id=\"Email\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n                        <GridItem xs={12} sm={12} md={4}>\n                          <CustomInput\n                            onChange={(e) => HandleData(e)}\n                            value={data.Gender}\n                            labelText=\"Gender\"\n                            id=\"Gender\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n                        <GridItem xs={12} sm={12} md={4}>\n                          <CustomInput\n                            onChange={(e) => HandleData(e)}\n                            value={data.DOB}\n                            labelText=\"DOB\"\n                            id=\"DOB\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n                        <GridItem xs={12} sm={12} md={4}>\n                          <CustomInput\n                            onChange={(e) => HandleData(e)}\n                            value={data.Password}\n                            labelText=\"Password\"\n                            id=\"Password\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n                      </GridContainer>\n                      <GridContainer>\n                        <GridItem xs={12} sm={12} md={4}>\n                          <CustomInput\n                            onChange={(e) => HandleData(e)}\n                            value={data.GuardianName}\n                            labelText=\"Guardian Name\"\n                            id=\"GuardianName\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n\n                        <GridItem xs={12} sm={12} md={4}>\n                          <CustomInput\n                            onChange={(e) => HandleData(e)}\n                            value={data.GuardianMobile}\n                            labelText=\"Guardian Mobile\"\n                            id=\"GuardianMobile\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n                        <GridItem xs={12} sm={12} md={4}>\n                          <CustomInput\n                            onChange={(e) => HandleData(e)}\n                            value={data.GuardianRelation}\n                            labelText=\"Gurdian Relation\"\n                            id=\"GuardianRelation\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n                        <GridItem xs={12} sm={5} md={5}>\n                          {\" \"}\n                          <CustomFileInput\n                            setFiles={setFiles}\n                            saved={uploaded}\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                            inputProps={{\n                              placeholder: \"Click here to upload an image\",\n                            }}\n                            endButton={{\n                              buttonProps: {\n                                round: true,\n                                color: \"info\",\n                                justIcon: true,\n                                filebutton: true,\n                              },\n                              icon: <AttachFile />,\n                            }}\n                          />\n                          {validated ? (\n                            <></>\n                          ) : (\n                            <Danger>\n                              Please enter all the details to save\n                            </Danger>\n                          )}\n                        </GridItem>\n                      </GridContainer>\n                    </CardBody>\n                    <CardFooter>\n                      <Button onClick={AddStudent} color=\"danger\">\n                        Cancel\n                      </Button>\n                      <Button onClick={HandleClear} color=\"defualt\">\n                        Clear\n                      </Button>\n                      <Button onClick={UploadImage} color=\"info\">\n                        Save\n                      </Button>\n                    </CardFooter>\n                  </form>\n                </Card>\n              </GridItem>\n            </GridContainer>\n          </LoadingOverlay>\n        </div>\n      ) : (\n        <Button onClick={AddStudent} color=\"info\">\n          Add Student\n        </Button>\n      )}\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>List Of All Students</h4>\n              <p className={classes.cardCategoryWhite}>\n                All students are listed below, you can delete or edit them.\n              </p>\n            </CardHeader>\n            <CardBody>\n              <LoadingOverlay active={deleting} spinner text=\"Please Wait..\">\n                {empty ? (\n                  <p>empty</p>\n                ) : (\n                  <Table\n                    tableHeaderColor=\"info\"\n                    tableHead={[\n                      \"\",\n                      \"Id\",\n                      \"FullName\",\n                      \"Registration No\",\n                      \"ClassNo\",\n                      \"AdmissionNo\",\n                      \"Mobile\",\n                      \"Email\",\n                      \"Course\",\n                      \"Coursecode\",\n                      \"Gender\",\n                      \"DOB\",\n                      \"Password\",\n                      \"Gur_Name\",\n                      \"Gur_Mobile\",\n                      \"Gur_Relation\",\n                      \"Image\",\n                      \"CourseId\",\n                      \"Actions\",\n                      // \"Created By\",\n                      // \"Created Date\",\n                      // \"Modified By\",\n                      // \"Modified Date\",\n                      // \"Deteled By\",\n                      // \"Deleted Date\",\n                    ]}\n                    tableData={Studentdata}\n                    setEdit={setEdit}\n                    setDelete={setDelete}\n                    loading={loading}\n                  />\n                )}\n              </LoadingOverlay>\n            </CardBody>\n          </Card>\n          {pagination ? (\n            <Pagination\n              setPageIndex={setPageIndex}\n              pageIndex={pageIndex}\n              className={\n                classes.textCenter + \" \" + classes.justifyContentCenter\n              }\n              pages={[\n                { text: \"Previous\" },\n                { active: true, text: \"1\" },\n\n                { text: \"Next\" },\n              ]}\n              color=\"info\"\n            />\n          ) : (\n            <></>\n          )}\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Domain } from \"Domain\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport axios from \"axios\";\nimport Danger from \"components/Typography/Danger\";\nimport LoadingOverlay from \"react-loading-overlay\";\n// import ImageUpload from \"components/CustomUpload/ImageUpload.js\";\nimport Pagination from \"components/Pagination/Pagination\";\n\nimport AttachFile from \"@material-ui/icons/AttachFile\";\nimport CustomFileInput from \"components/CustomFileInput/CustomFileInput.js\";\n\n// import { data } from \"./data.json\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function Publications() {\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [events, setEvents] = React.useState([]);\n  const [files, setFiles] = React.useState(null);\n  const [validated, setValidated] = React.useState(true);\n  const [uploaded, setUploaded] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  const [saving, setSaving] = React.useState(false);\n\n  const Publicdata = events.map((d) => ({\n    Id: d.Id,\n    Name: d.Name,\n    PublishedBy: d.PublishedBy,\n    PublishedDate: d.PublishedDate,\n    Image: d.Image,\n    Description: d.Description,\n  }));\n\n  //Saved Notification trigger\n  const showSavedNotification = () => {\n    if (!saved) {\n      setSaved(true);\n      setTimeout(function () {\n        setSaved(false);\n      }, 3000);\n    }\n  };\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n  //Form Data\n  const [data, setData] = React.useState({\n    Id: 0,\n    Name: \"\",\n    PublishedBy: \"\",\n    PublishedDate: \"\",\n    Status: \"Created\",\n    Image: \"\",\n    Description: \"\",\n  });\n\n  //PaddData for Delete a Row\n  let passDelete = {\n    Id: deletee,\n    DeletedBy: 2,\n  };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n\n  //Function to handle Data input\n  function HandleData(e) {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n  function HandleClear() {\n    setData({\n      Id: 0,\n      Name: \"\",\n      PublishedBy: \"\",\n      PublishedDate: \"\",\n      Status: \"Created\",\n      Image: \"\",\n      Description: \"\",\n    });\n  }\n\n  //Function for Validating fields\n  function ValidateFields() {\n    if (data.Name == \"\") {\n      return false;\n    } else if (data.PublishedBy == \"\") {\n      return false;\n    } else if (data.PublishedDate == \"\") {\n      return false;\n    } else if (data.Image == \"\") {\n      return false;\n    } else if (data.Description == \"\") {\n      return false;\n    } else return true;\n  }\n  //function to upload\n  function UploadImage() {\n    if (files != null) {\n      setValidated(true);\n      setSaving(true);\n      let form_data = new FormData();\n      form_data.append(\"File\", files[0]);\n      let url = Domain + \"/api/Uploads/File/\";\n      axios\n        .post(url, form_data, {\n          headers: {\n            \"content-type\": \"multipart/form-data\",\n          },\n        })\n        .then((res) => {\n          if (res.data.Success) {\n            data.Image = res.data.Data[0];\n            setUploaded(true);\n            HandleSave();\n          } else {\n            setUploaded(false);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setUploaded(false);\n        });\n    } else {\n      setValidated(false);\n    }\n  }\n\n  //Function to save Data\n  function HandleSave() {\n    if (ValidateFields()) {\n      setValidated(true);\n      fetch(Domain + \"/api/Admin/CreatePublications/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setData({\n              Id: 0,\n              Name: \"\",\n              PublishedBy: \"\",\n              PublishedDate: \"\",\n              Status: \"Created\",\n              Image: \"\",\n              Description: \"\",\n            });\n            setEmpty(false);\n            showSavedNotification();\n            setSaving(false);\n          } else {\n            console.log(\"Error in insertion\");\n          }\n        });\n    } else {\n      setValidated(false);\n    }\n    setUploaded(false);\n  }\n\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n    fetch(Domain + \"/api/Admin/GetAllPublications/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length > 2) setPagination(true);\n      });\n  }, [pageIndex]);\n\n  useEffect(() => {\n    console.log(\"componentDidMount\");\n    console.log(\"Detele\" + deletee + \" edit\" + edit);\n\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Admin/GetAllPublications/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      // body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n        // if (json.Data.length > 2) setPagination(true);\n      });\n    // }, [pageIndex]);\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      setDeleting(true);\n      fetch(Domain + \"/api/Admin/DeletePublications/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passDelete),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setDelete([]);\n            showDeletedNotification();\n            setDeleting(false);\n          }\n        });\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Admin/GetPublicationsById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit([]);\n            setData(json.Data);\n            console.log(json.Data);\n          }\n        });\n    }\n  }, [deletee, edit, saved]);\n\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Publications Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Publications Deleted Successfully\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n      <LoadingOverlay active={saving} spinner text=\"Saving Please Wait..\">\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <Card>\n              <form>\n                <CardHeader color=\"info\">\n                  <h4 className={classes.cardTitleWhite}>\n                    Add New Publications\n                  </h4>\n                  <p className={classes.cardCategoryWhite}>\n                    Enter the Publication details below and hit Save\n                  </p>\n                </CardHeader>\n\n                <CardBody>\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={5}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Name}\n                        labelText=\"Name\"\n                        id=\"Name\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={3}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.PublishedBy}\n                        labelText=\"Published By\"\n                        id=\"PublishedBy\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={3}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.PublishedDate}\n                        labelText=\"Published Date\"\n                        id=\"PublishedDate\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                  </GridContainer>\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Description}\n                        labelText=\"Enter a description about the publication..\"\n                        id=\"Description\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          multiline: true,\n                          rows: 5,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={5} md={6}>\n                      {\" \"}\n                      <CustomFileInput\n                        setFiles={setFiles}\n                        saved={uploaded}\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          placeholder: \"Click here to upload an image\",\n                        }}\n                        endButton={{\n                          buttonProps: {\n                            round: true,\n                            color: \"info\",\n                            justIcon: true,\n                            filebutton: true,\n                          },\n                          icon: <AttachFile />,\n                        }}\n                      />\n                      {validated ? (\n                        <></>\n                      ) : (\n                        <Danger>Please enter all the details to save</Danger>\n                      )}\n                    </GridItem>\n                  </GridContainer>\n                </CardBody>\n                <CardFooter>\n                  <Button onClick={HandleClear} color=\"defualt\">\n                    Clear\n                  </Button>\n                  <Button onClick={UploadImage} color=\"info\">\n                    Save\n                  </Button>\n                </CardFooter>\n              </form>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      </LoadingOverlay>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>\n                List Of All Publications\n              </h4>\n              <p className={classes.cardCategoryWhite}>\n                All Publications are listed below, you can delete or edit them.\n              </p>\n            </CardHeader>\n            <CardBody>\n              <LoadingOverlay active={deleting} spinner text=\"Please Wait..\">\n                {empty ? (\n                  <p>empty</p>\n                ) : (\n                  <Table\n                    tableHeaderColor=\"info\"\n                    tableHead={[\n                      \"\",\n                      \"ID\",\n                      \"Name\",\n                      \"Published By\",\n                      \"Published Date\",\n                      \"Image\",\n                      \"Description\",\n                      // \"Created By\",\n                      // \"Created Date\",\n                      // \"Modified By\",\n                      // \"Modified Date\",\n                      // \"Deteled By\",\n                      // \"Deleted Date\",\n                      \"Actions\",\n                    ]}\n                    tableData={Publicdata}\n                    setEdit={setEdit}\n                    setDelete={setDelete}\n                    loading={loading}\n                  />\n                )}\n              </LoadingOverlay>\n            </CardBody>\n          </Card>\n          {pagination ? (\n            <Pagination\n              setPageIndex={setPageIndex}\n              pageIndex={pageIndex}\n              className={\n                classes.textCenter + \" \" + classes.justifyContentCenter\n              }\n              pages={[\n                { text: \"Previous\" },\n                { active: true, text: \"1\" },\n\n                { text: \"Next\" },\n              ]}\n              color=\"info\"\n            />\n          ) : (\n            <></>\n          )}\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Domain } from \"Domain\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport Danger from \"components/Typography/Danger\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport SingleSelect from \"components/SingleSelect\";\nimport Pagination from \"components/Pagination/Pagination\";\n\n// import { data } from \"./data.json\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function Subjects() {\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [events, setEvents] = React.useState([]);\n  const [validated, setValidated] = React.useState(true);\n  const [loading, setLoading] = React.useState(true);\n  const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  const [Courses, setCourses] = React.useState([]);\n  const [semesters, setSemesters] = React.useState([]);\n  const [saving, setSaving] = React.useState(false);\n  const [CourseValues, setCourseValues] = React.useState({\n    Id: null,\n    label: \"\",\n  });\n  const [SemesterValues, setSemesterValues] = React.useState({\n    Id: null,\n    label: \"\",\n  });\n  //Converting json response to passdata for react select\n  const CourseList = Courses.map((d) => ({\n    value: d.Id,\n    label: d.CourseName,\n  }));\n  const SemesterList = semesters.map((d) => ({\n    value: d.Id,\n    label: d.SemesterNo,\n  }));\n  const Subjectdata = events.map((d) => ({\n    Id: d.Id,\n    CourseId: d.CourseId,\n    CourseName: d.CourseName,\n    SemesterId: d.SemesterId,\n    SemesterNo: d.SemesterNo,\n    SubjectName: d.SubjectName,\n    SubjectCode: d.SubjectCode,\n    Description: d.Description,\n  }));\n\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n    fetch(Domain + \"/api/Admin/GetAllSubjects/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length > 2) setPagination(true);\n      });\n  }, [pageIndex]);\n  //Saved Notification trigger\n  const showSavedNotification = () => {\n    if (!saved) {\n      setSaved(true);\n      setTimeout(function () {\n        setSaved(false);\n      }, 3000);\n    }\n  };\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n  //Form Data\n  const [data, setData] = React.useState({\n    Id: 0,\n    CourseId: null,\n    SemesterId: null,\n    CourseName: \"\",\n    SemesterNo: \"\",\n    SubjectName: \"\",\n    SubjectCode: \"\",\n    Status: \"Created\",\n    Image: \"\",\n    Description: \"\",\n  });\n\n  //PassData for getAll API\n  let passData = {\n    PageIndex: 0,\n    PageSize: 10,\n  };\n  //PassData for get all semesters and courses for dropdown\n  let passData1 = {\n    PageIndex: 0,\n    PageSize: 0,\n  };\n  let passCourseId = {\n    CourseId: data.CourseId,\n  };\n  //PaddData for Delete a Row\n  let passDelete = {\n    Id: deletee,\n    DeletedBy: 2,\n  };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n  //Function to handle Data input\n  function HandleData(e) {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n  function HandleClear() {\n    setValidated(true);\n    setData({\n      Id: 0,\n      CourseId: \"\",\n      SemesterId: \"\",\n      CourseName: \"\",\n      SemesterNo: \"\",\n      SubjectName: \"\",\n      SubjectCode: \"\",\n      Status: \"Created\",\n      Description: \"\",\n    });\n  }\n  //Function for Validating fields\n  function ValidateFields() {\n    if (data.CourseId == \"\" || data.CourseId == null) {\n      return false;\n    } else if (data.SemesterId == \"\" || data.SemesterId == null) {\n      return false;\n    } else if (data.CourseName == \"\") {\n      return false;\n    } else if (data.SemesterNo == \"\") {\n      return false;\n    } else if (data.SubjectName == \"\") {\n      return false;\n    } else if (data.SubjectCode == \"\") {\n      return false;\n    } else if (data.Description == \"\") {\n      return false;\n    } else return true;\n  }\n\n  //API call to get all semesters from the database to dropdown list\n  fetch(Domain + \"/api/Admin/GetSemesterByCourseId/\", {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(passCourseId),\n  })\n    .then((response) => response.json())\n\n    .then((json) => {\n      if (json.Data.length != 0) setSemesters(json.Data);\n      else setSemesters([]);\n    });\n  //Function to save Data\n  function HandleSave() {\n    if (ValidateFields()) {\n      setValidated(true);\n      fetch(Domain + \"/api/Admin/CreateSubjects/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setData({\n              Id: 0,\n              CourseId: \"\",\n              SemesterId: \"\",\n              CourseName: \"\",\n              SemesterNo: \"\",\n              SubjectName: \"\",\n              SubjectCode: \"\",\n              Status: \"Created\",\n              Image: \"\",\n              Description: \"\",\n            });\n            setEmpty(false);\n            showSavedNotification();\n            setSaving(false);\n          } else {\n            console.log(json, \"Error in insertion\");\n          }\n        });\n    } else {\n      setValidated(false);\n    }\n  }\n  //==============================UseEffect======================================\n  useEffect(() => {\n    setData((data) => ({\n      ...data,\n      CourseId: CourseValues.Id,\n      CourseName: CourseValues.Label,\n      SemesterId: SemesterValues.Id,\n      SemesterNo: SemesterValues.Label,\n    }));\n    //API call for get all course names to dropedown\n    fetch(Domain + \"/api/Admin/GetAllCourses/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData1),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        if (json.Data.length != 0) setCourses(json.Data);\n      });\n\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Admin/GetAllSubjects/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n      });\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      setDeleting(true);\n      fetch(Domain + \"/api/Admin/DeleteSubjects/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passDelete),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setDelete([]);\n            showDeletedNotification();\n            setDeleting(false);\n          }\n        });\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Admin/GetSubjectsById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit([]);\n            setData(json.Data);\n            console.log(json.Data);\n          }\n        });\n    }\n  }, [deletee, edit, saved, CourseValues.Id, SemesterValues.Id]);\n\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Subject Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Subject Deleted Successfully\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n      <LoadingOverlay active={saving} spinner text=\"Saving Please Wait..\">\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <Card>\n              <form>\n                <CardHeader color=\"info\">\n                  <h4 className={classes.cardTitleWhite}>Add New Subject</h4>\n                  <p className={classes.cardCategoryWhite}>\n                    Enter the Subject details below and hit Save\n                  </p>\n                </CardHeader>\n\n                <CardBody>\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <SingleSelect\n                        noOptionMessage=\"Create any Course first\"\n                        placeholder=\"Select Course\"\n                        Options={CourseList}\n                        setValue={setCourseValues}\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <SingleSelect\n                        noOptionMessage=\"Select Course First\"\n                        placeholder=\"Select Semester\"\n                        Options={SemesterList}\n                        setValue={setSemesterValues}\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.SubjectName}\n                        labelText=\"Subject Name\"\n                        id=\"SubjectName\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.SubjectCode}\n                        labelText=\"Subject Code\"\n                        id=\"SubjectCode\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                  </GridContainer>\n\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Description}\n                        labelText=\"Enter a description about the Subject..\"\n                        id=\"Description\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          multiline: true,\n                          rows: 5,\n                        }}\n                      />\n                    </GridItem>\n\n                    <GridItem xs={12} sm={5} md={5}>\n                      {validated ? (\n                        <></>\n                      ) : (\n                        <Danger>Please enter all the details to save</Danger>\n                      )}\n                    </GridItem>\n                  </GridContainer>\n                </CardBody>\n                <CardFooter>\n                  <Button onClick={HandleClear} color=\"defualt\">\n                    Clear\n                  </Button>\n                  <Button onClick={HandleSave} color=\"info\">\n                    Save\n                  </Button>\n                </CardFooter>\n              </form>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      </LoadingOverlay>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>List Of All Subjects</h4>\n              <p className={classes.cardCategoryWhite}>\n                All subjects are listed below, you can delete or edit them.\n              </p>\n            </CardHeader>\n            <CardBody>\n              <LoadingOverlay active={deleting} spinner text=\"Please Wait..\">\n                {empty ? (\n                  <p>empty</p>\n                ) : (\n                  <Table\n                    tableHeaderColor=\"info\"\n                    tableHead={[\n                      \"\",\n                      \"ID\",\n                      \"Course Id\",\n                      \"Coursename\",\n                      \"Semester Id\",\n                      \"Semester No\",\n                      \"SubjectName\",\n                      \"CourseCode\",\n                      \"Description\",\n                      \"Actions\",\n                    ]}\n                    tableData={Subjectdata}\n                    setEdit={setEdit}\n                    setDelete={setDelete}\n                    loading={loading}\n                  />\n                )}\n              </LoadingOverlay>\n            </CardBody>\n          </Card>\n          {pagination ? (\n            <Pagination\n              setPageIndex={setPageIndex}\n              pageIndex={pageIndex}\n              className={\n                classes.textCenter + \" \" + classes.justifyContentCenter\n              }\n              pages={[\n                { text: \"Previous\" },\n                { active: true, text: \"1\" },\n\n                { text: \"Next\" },\n              ]}\n              color=\"info\"\n            />\n          ) : (\n            <></>\n          )}\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Domain } from \"Domain\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport Danger from \"components/Typography/Danger\";\nimport LoadingOverlay from \"react-loading-overlay\";\n// import ImageUpload from \"components/CustomUpload/ImageUpload.js\";\n\nimport SingleSelect from \"components/SingleSelect\";\nimport Pagination from \"components/Pagination/Pagination\";\n// import { data } from \"./data.json\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function Semester() {\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [events, setEvents] = React.useState([]);\n  const [validated, setValidated] = React.useState(true);\n  const [loading, setLoading] = React.useState(true);\n  const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  const [Courses, setCourses] = React.useState([]);\n  const [saving, setSaving] = React.useState(false);\n  // const [courseName, setCourseName] = React.useState(\"\");\n  // const [courseId, setCourseId] = React.useState(null);\n\n  //Converting json response to passdata for react select\n  const CourseList = Courses.map((d) => ({\n    value: d.Id,\n    label: d.CourseName,\n  }));\n  const [CourseValues, setCourseValues] = React.useState({\n    Id: null,\n    label: \"\",\n  });\n  const Semesterdata = events.map((d) => ({\n    Id: d.Id,\n    CourseId: d.CourseId,\n    CourseName: d.CourseName,\n    SemesterDuration: d.SemesterDuration,\n    SemesterNo: d.SemesterNo,\n  }));\n  //Saved Notification trigger\n  const showSavedNotification = () => {\n    if (!saved) {\n      setSaved(true);\n      setTimeout(function () {\n        setSaved(false);\n      }, 3000);\n    }\n  };\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n  //Form Data\n  const [data, setData] = React.useState({\n    Id: 0,\n    SemesterNo: \"\",\n    CourseId: null,\n    CourseName: \"\",\n    SemesterDuration: \"\",\n    Status: \"Created\",\n    Image: \"\",\n  });\n\n  console.log(data.CourseName, data.CourseId);\n\n  //PassData for getAll API\n  let passData = {\n    PageIndex: 0,\n    PageSize: 10,\n  };\n  //PassData for get all semesters and courses for dropdown\n  let passData1 = {\n    PageIndex: 0,\n    PageSize: 0,\n  };\n  //PaddData for Delete a Row\n  let passDelete = {\n    Id: deletee,\n    DeletedBy: 2,\n  };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n  //Function to handle Data input\n  function HandleData(e) {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n  function HandleClear() {\n    setData({\n      Id: 0,\n      SemesterNo: \"\",\n      CourseName: \"\",\n      SemesterDuration: \"\",\n      Status: \"Created\",\n    });\n  }\n  //Function for Validating fields\n  function ValidateFields() {\n    if (data.SemesterNo == \"\") {\n      return false;\n    } else if (data.CourseDuration == \"\") {\n      return false;\n    } else if (data.CourseName == \"\") {\n      return false;\n    } else return true;\n  }\n\n  //Function to save Data\n  function HandleSave() {\n    if (ValidateFields()) {\n      setValidated(true);\n      fetch(Domain + \"/api/Admin/CreateSemester/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          console.log(json);\n          console.log(\"data:\", data);\n          if (json.Success) {\n            setData({\n              Id: 0,\n              SemesterNo: \"\",\n              CourseId: \"\",\n              CourseName: \"\",\n              SemesterDuration: \"\",\n              Status: \"Created\",\n            });\n            setEmpty(false);\n            showSavedNotification();\n            setSaving(false);\n          } else {\n            console.log(\"Error in insertion\");\n          }\n        });\n    } else {\n      setValidated(false);\n    }\n  }\n\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n    fetch(Domain + \"/api/Admin/GetAllSemester/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length > 2) setPagination(true);\n      });\n  }, [pageIndex]);\n\n  useEffect(() => {\n    setData((data) => ({\n      ...data,\n      CourseId: CourseValues.Id,\n      CourseName: CourseValues.Label,\n    }));\n    //API call for get all course names to dropedown\n    fetch(Domain + \"/api/Admin/GetAllCourses/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData1),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        if (json.Data.length != 0) setCourses(json.Data);\n      });\n\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Admin/GetAllSemester/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n      });\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      setDeleting(true);\n      fetch(Domain + \"/api/Admin/DeleteSemester/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passDelete),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setDelete([]);\n            showDeletedNotification();\n            setDeleting(false);\n          }\n        });\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Admin/GetSemesterById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit([]);\n            setData(json.Data);\n            console.log(json.Data);\n          }\n        });\n    }\n  }, [deletee, edit, saved, CourseValues.Id]);\n\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Semester Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Semester Deleted Successfully\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n      <LoadingOverlay active={saving} spinner text=\"Saving Please Wait..\">\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <Card>\n              <form>\n                <CardHeader color=\"info\">\n                  <h4 className={classes.cardTitleWhite}>Add New Semester</h4>\n                  <p className={classes.cardCategoryWhite}>\n                    Enter the Semester details below and hit Save\n                  </p>\n                </CardHeader>\n\n                <CardBody>\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={5}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.SemesterNo}\n                        labelText=\"Semester Number\"\n                        id=\"SemesterNo\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={3}>\n                      <SingleSelect\n                        noOptionsMessage=\"Create any course first\"\n                        placeholder=\"Select Course\"\n                        Options={CourseList}\n                        setValue={setCourseValues}\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.SemesterDuration}\n                        labelText=\"Semester Duration\"\n                        id=\"SemesterDuration\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n\n                    <GridItem xs={12} sm={5} md={5}>\n                      {validated ? (\n                        <></>\n                      ) : (\n                        <Danger>Please enter all the details to save</Danger>\n                      )}\n                    </GridItem>\n                  </GridContainer>\n                </CardBody>\n                <CardFooter>\n                  <Button onClick={HandleClear} color=\"defualt\">\n                    Clear\n                  </Button>\n                  <Button onClick={HandleSave} color=\"info\">\n                    Save\n                  </Button>\n                </CardFooter>\n              </form>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      </LoadingOverlay>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>List Of All semester</h4>\n              <p className={classes.cardCategoryWhite}>\n                All Semester are listed below, you can delete or edit them.\n              </p>\n            </CardHeader>\n            <CardBody>\n              <LoadingOverlay active={deleting} spinner text=\"Please Wait..\">\n                {empty ? (\n                  <p>empty</p>\n                ) : (\n                  <Table\n                    tableHeaderColor=\"info\"\n                    tableHead={[\n                      \"\",\n                      \"ID\",\n                      \"Course ID\",\n                      \"CourseName\",\n                      \"SemesterDuration\",\n                      \"Semester Number\",\n                      \"Actions\",\n                    ]}\n                    tableData={Semesterdata}\n                    setEdit={setEdit}\n                    setDelete={setDelete}\n                    loading={loading}\n                  />\n                )}\n              </LoadingOverlay>\n            </CardBody>\n          </Card>\n          {pagination ? (\n            <Pagination\n              setPageIndex={setPageIndex}\n              pageIndex={pageIndex}\n              className={\n                classes.textCenter + \" \" + classes.justifyContentCenter\n              }\n              pages={[\n                { text: \"Previous\" },\n                { active: true, text: \"1\" },\n\n                { text: \"Next\" },\n              ]}\n              color=\"info\"\n            />\n          ) : (\n            <></>\n          )}\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Domain } from \"Domain\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\n// import axios from \"axios\";\nimport Danger from \"components/Typography/Danger\";\nimport LoadingOverlay from \"react-loading-overlay\";\n// import ImageUpload from \"components/CustomUpload/ImageUpload.js\";\n\n// import AttachFile from \"@material-ui/icons/AttachFile\";\n// import CustomFileInput from \"components/CustomFileInput/CustomFileInput.js\";\nimport Pagination from \"components/Pagination/Pagination\";\n// import { data } from \"./data.json\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function InternalMarks() {\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [events, setEvents] = React.useState([]);\n  // const [files, setFiles] = React.useState(null);\n  const [validated, setValidated] = React.useState(true);\n  // const [uploaded, setUploaded] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  const [saving, setSaving] = React.useState(false);\n\n  //Saved Notification trigger\n  const showSavedNotification = () => {\n    if (!saved) {\n      setSaved(true);\n      setTimeout(function () {\n        setSaved(false);\n      }, 3000);\n    }\n  };\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n  //Form Data\n  const [data, setData] = React.useState({\n    Id: 0,\n    CourseId: null,\n    Date: \"\",\n    StudentId: \"\",\n    SemesterId: null,\n    CourseCode: \"\",\n    SemesterNo: null,\n    Note: \"\",\n    ClassNo: null,\n    StudentName: \"\",\n    MarkList: \"\",\n    Status: \"Created\",\n    Files: \"\",\n    Description: \"\",\n  });\n\n  //PassData for getAll API\n  let passData = {\n    PageIndex: 0,\n    PageSize: 10,\n  };\n\n  //PaddData for Delete a Row\n  let passDelete = {\n    Id: deletee,\n    DeletedBy: 2,\n  };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n  //Function to handle Data input\n  function HandleData(e) {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n  function HandleClear() {\n    setValidated(true);\n    setData({\n      Id: 0,\n      CourseId: \"\",\n      Date: \"\",\n      StudentId: \"\",\n      SemesterId: \"\",\n      CourseCode: \"\",\n      SemesterNo: \"\",\n      Note: \"\",\n      ClassNo: \"\",\n      StudentName: \"\",\n      MarkList: \"\",\n      Status: \"Created\",\n      Files: \"\",\n      Description: \"\",\n    });\n  }\n  //Function for Validating fields\n  function ValidateFields() {\n    if (data.CourseId == \"\") {\n      return false;\n    } else if (data.Date == \"\") {\n      return false;\n    } else if (data.Description == \"\") {\n      return false;\n    } else if (data.StudentId == \"\") {\n      return false;\n    } else if (data.SemesterId == \"\") {\n      return false;\n    } else if (data.CourseCode == \"\") {\n      return false;\n    } else if (data.SemesterNo == \"\") {\n      return false;\n    } else if (data.Note == \"\") {\n      return false;\n    } else if (data.ClassNo == \"\") {\n      return false;\n    } else if (data.StudentName == \"\") {\n      return false;\n    } else if (data.MarkList == \"\") {\n      return false;\n    } else return true;\n  }\n  // //function to upload\n  // function UploadImage() {\n  //   if (files != null) {\n  //     setValidated(true);\n  //     setSaving(true);\n  //     let form_data = new FormData();\n  //     form_data.append(\"File\", files[0]);\n  //     let url = Domain + \"/api/Uploads/File/\";\n  //     axios\n  //       .post(url, form_data, {\n  //         headers: {\n  //           \"content-type\": \"multipart/form-data\",\n  //         },\n  //       })\n  //       .then((res) => {\n  //         if (res.data.Success) {\n  //           data.Files = res.data.Data[0];\n  //           setUploaded(true);\n  //           HandleSave();\n  //         } else {\n  //           setUploaded(false);\n  //         }\n  //       })\n  //       .catch((err) => {\n  //         console.log(err);\n  //         setUploaded(false);\n  //       });\n  //   } else {\n  //     setValidated(false);\n  //   }\n  // }\n\n  //Function to save Data\n  function HandleSave() {\n    if (ValidateFields()) {\n      fetch(Domain + \"/api/Student/CreateInternal/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setData({\n              Id: 0,\n              CourseId: \"\",\n              Date: \"\",\n              StudentId: \"\",\n              SemesterId: \"\",\n              CourseCode: \"\",\n              SemesterNo: \"\",\n              Note: \"\",\n              ClassNo: \"\",\n              StudentName: \"\",\n              MarkList: \"\",\n              Status: \"Created\",\n              Files: \"\",\n              Description: \"\",\n            });\n            setEmpty(false);\n            showSavedNotification();\n            setSaving(false);\n          } else {\n            console.log(\"Error in insertion\");\n          }\n        });\n    } else {\n      setValidated(false);\n    }\n  }\n\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n    fetch(Domain + \"/api/Student/GetAllInternal/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length > 2) setPagination(true);\n      });\n  }, [pageIndex]);\n\n  useEffect(() => {\n    console.log(\"componentDidMount\");\n    console.log(\"Detele\" + deletee + \" edit\" + edit);\n\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Student/GetAllInternal/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n      });\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      setDeleting(true);\n      fetch(Domain + \"/api/Student/DeleteInternal/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passDelete),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setDelete([]);\n            showDeletedNotification();\n            setDeleting(false);\n          }\n        });\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Student/GetInternalById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit([]);\n            setData(json.Data);\n            console.log(json.Data);\n          }\n        });\n    }\n  }, [deletee, edit, saved]);\n\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Internal Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Internal Deleted Successfully\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n      <LoadingOverlay active={saving} spinner text=\"Saving Please Wait..\">\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <Card>\n              <form>\n                <CardHeader color=\"info\">\n                  <h4 className={classes.cardTitleWhite}>\n                    Add New InternalMarks\n                  </h4>\n                  <p className={classes.cardCategoryWhite}>\n                    Enter the InternalMarks details below and hit Save\n                  </p>\n                </CardHeader>\n\n                <CardBody>\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Date}\n                        labelText=\"Select Exam Date\"\n                        id=\"Date\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.CourseId}\n                        labelText=\"Select Course\"\n                        id=\"CourseId\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.StudentId}\n                        labelText=\"Student ID\"\n                        id=\"StudentId\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.SemesterId}\n                        labelText=\"Select Semester\"\n                        id=\"SemesterId\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.CourseCode}\n                        labelText=\"CourseCode\"\n                        id=\"CourseCode\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.SemesterNo}\n                        labelText=\"Semester Number\"\n                        id=\"SemesterNo\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Note}\n                        labelText=\"Notes\"\n                        id=\"Note\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.ClassNo}\n                        labelText=\"Class Number\"\n                        id=\"ClassNo\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.StudentName}\n                        labelText=\"StudentName\"\n                        id=\"StudentName\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.MarkList}\n                        labelText=\"MarkList\"\n                        id=\"MarkList\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n\n                    <GridItem xs={12} sm={12} md={8}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Description}\n                        labelText=\"Enter Marks seperated by comma\"\n                        id=\"Description\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          multiline: true,\n                          rows: 5,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={5} md={5}>\n                      {validated ? (\n                        <></>\n                      ) : (\n                        <Danger>Please enter all the details to save</Danger>\n                      )}\n                    </GridItem>\n                  </GridContainer>\n                </CardBody>\n                <CardFooter>\n                  <Button onClick={HandleClear} color=\"defualt\">\n                    Clear\n                  </Button>\n                  <Button onClick={HandleSave} color=\"info\">\n                    Save\n                  </Button>\n                </CardFooter>\n              </form>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      </LoadingOverlay>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>\n                List Of All InternalMarks\n              </h4>\n              <p className={classes.cardCategoryWhite}>\n                All InternalMarks are listed below, you can delete or edit them.\n              </p>\n            </CardHeader>\n            <CardBody>\n              <LoadingOverlay active={deleting} spinner text=\"Please Wait..\">\n                {empty ? (\n                  <p>empty</p>\n                ) : (\n                  <Table\n                    tableHeaderColor=\"info\"\n                    tableHead={[\n                      \"\",\n                      \"ID\",\n                      \"Date\",\n                      \"CourseName\",\n                      \"SemesterNo\",\n                      \"ClassNo\",\n                      \"Note\",\n                      \"Status\",\n                      \"Files\",\n                      \"StudentName\",\n                      \"Description\",\n                      \"Marklist\",\n                      \"Created By\",\n                      \"Created Date\",\n                      \"Modified By\",\n                      \"Modified Date\",\n                      \"Deteled By\",\n                      \"Deleted Date\",\n                      \"CourseId\",\n                      \"SemesterId\",\n                      \"StudentId\",\n                      \"Actions\",\n                    ]}\n                    tableData={events}\n                    setEdit={setEdit}\n                    setDelete={setDelete}\n                    loading={loading}\n                  />\n                )}\n              </LoadingOverlay>\n            </CardBody>\n          </Card>\n          {pagination ? (\n            <Pagination\n              setPageIndex={setPageIndex}\n              pageIndex={pageIndex}\n              className={\n                classes.textCenter + \" \" + classes.justifyContentCenter\n              }\n              pages={[\n                { text: \"Previous\" },\n                { active: true, text: \"1\" },\n\n                { text: \"Next\" },\n              ]}\n              color=\"info\"\n            />\n          ) : (\n            <></>\n          )}\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Domain } from \"Domain\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport axios from \"axios\";\nimport Danger from \"components/Typography/Danger\";\nimport LoadingOverlay from \"react-loading-overlay\";\n// import ImageUpload from \"components/CustomUpload/ImageUpload.js\";\n\nimport AttachFile from \"@material-ui/icons/AttachFile\";\nimport CustomFileInput from \"components/CustomFileInput/CustomFileInput.js\";\nimport Pagination from \"components/Pagination/Pagination\";\n// import { data } from \"./data.json\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function InternalsNotification() {\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [events, setEvents] = React.useState([]);\n  const [files, setFiles] = React.useState(null);\n  const [validated, setValidated] = React.useState(true);\n  const [uploaded, setUploaded] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  const [saving, setSaving] = React.useState(false);\n\n  const InternalNotedata = events.map((d) => ({\n    Id: d.Id,\n    CourseCode: d.CourseId,\n    CourseId: d.CourseId,\n    Date: d.Date,\n    Description: d.Description,\n    Files: d.Files,\n    Note: d.Note,\n    SemesterId: d.SemesterId,\n    SemesterNo: d.SemesterNo,\n  }));\n\n  //Saved Notification trigger\n  const showSavedNotification = () => {\n    if (!saved) {\n      setSaved(true);\n      setTimeout(function () {\n        setSaved(false);\n      }, 3000);\n    }\n  };\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n  //Form Data\n  const [data, setData] = React.useState({\n    Id: 0,\n    Date: \"\",\n    CourseId: null,\n    SemesterId: null,\n    CourseCode: \"\",\n    SemesterNo: null,\n    Note: \"\",\n    Status: \"Active\",\n    Files: \"\",\n    Description: \"\",\n  });\n\n  //PassData for getAll API\n  let passData = {\n    PageIndex: 0,\n    PageSize: 10,\n  };\n\n  //PaddData for Delete a Row\n  let passDelete = {\n    Id: deletee,\n    DeletedBy: 2,\n  };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n  //Function to handle Data input\n  function HandleData(e) {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n  function HandleClear() {\n    setData({\n      Id: 0,\n      Date: \"\",\n      CourseId: \"\",\n      SemesterId: \"\",\n      CourseCode: \"\",\n      SemesterNo: \"\",\n      Note: \"\",\n      Status: \"Active\",\n      Files: \"\",\n      Description: \"\",\n    });\n  }\n  //Function for Validating fields\n  function ValidateFields() {\n    if (data.CourseId == null) {\n      return false;\n    } else if (data.Date == \"\") {\n      return false;\n    } else if (data.SemesterId == null) {\n      return false;\n    } else if (data.CourseCode == \"\") {\n      return false;\n    } else if (data.SemesterNo == null) {\n      return false;\n    } else if (data.Note == \"\") {\n      return false;\n    } else if (data.Files == \"\") {\n      return false;\n    } else if (data.Description == \"\") {\n      return false;\n    } else return true;\n  }\n  //function to upload\n  function UploadImage() {\n    if (files != null) {\n      setValidated(true);\n      setSaving(true);\n      let form_data = new FormData();\n      form_data.append(\"File\", files[0]);\n      let url = Domain + \"/api/Uploads/File/\";\n      axios\n        .post(url, form_data, {\n          headers: {\n            \"content-type\": \"multipart/form-data\",\n          },\n        })\n        .then((res) => {\n          if (res.data.Success) {\n            data.Image = res.data.Data[0];\n            setUploaded(true);\n            HandleSave();\n          } else {\n            setUploaded(false);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setUploaded(false);\n        });\n    } else {\n      setValidated(false);\n    }\n  }\n\n  //Function to save Data\n  function HandleSave() {\n    if (ValidateFields()) {\n      setValidated(true);\n      fetch(Domain + \"/api/Student/CreateInternalNotification/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setData({\n              Id: 0,\n              Date: \"\",\n              CourseId: \"\",\n              SemesterId: \"\",\n              CourseCode: \"\",\n              SemesterNo: \"\",\n              Note: \"\",\n              Status: \"Active\",\n              Files: \"\",\n              Description: \"\",\n            });\n            setEmpty(false);\n            showSavedNotification();\n            setSaving(false);\n          } else {\n            console.log(json);\n          }\n        });\n    } else {\n      setValidated(false);\n    }\n    setUploaded(false);\n  }\n\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n    fetch(Domain + \"/api/Student/GetAllInternalNotification/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length > 2) setPagination(true);\n      });\n  }, [pageIndex]);\n\n  useEffect(() => {\n    console.log(\"componentDidMount\");\n    console.log(\"Detele\" + deletee + \" edit\" + edit);\n\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Student/GetAllInternalNotification/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n      });\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      setDeleting(true);\n      fetch(Domain + \"/api/Student/DeleteInternalNotification/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passDelete),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setDelete([]);\n            showDeletedNotification();\n            setDeleting(false);\n          }\n        });\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Student/GetInternalNotificationById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit([]);\n            setData(json.Data);\n            console.log(json.Data);\n          }\n        });\n    }\n  }, [deletee, edit, saved]);\n\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"InternalNotification Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"InternalNotification Deleted Successfully\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n      <LoadingOverlay active={saving} spinner text=\"Saving Please Wait..\">\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <Card>\n              <form>\n                <CardHeader color=\"info\">\n                  <h4 className={classes.cardTitleWhite}>\n                    Add New InternalNotification\n                  </h4>\n                  <p className={classes.cardCategoryWhite}>\n                    Enter the InternalNotification details below and hit Save\n                  </p>\n                </CardHeader>\n\n                <CardBody>\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.CourseId}\n                        labelText=\"Course Id\"\n                        id=\"CourseId\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.SemesterId}\n                        labelText=\"Semester Id\"\n                        id=\"SemesterId\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.CourseCode}\n                        labelText=\"Course Code\"\n                        id=\"CourseCode\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.SemesterNo}\n                        labelText=\"Semester No\"\n                        id=\"SemesterNo\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Note}\n                        labelText=\"Note\"\n                        id=\"Note\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Date}\n                        labelText=\"Date\"\n                        id=\"Date\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                  </GridContainer>\n\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Description}\n                        labelText=\"Enter a description about the event..\"\n                        id=\"Description\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          multiline: true,\n                          rows: 5,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={5} md={6}>\n                      {\" \"}\n                      <CustomFileInput\n                        setFiles={setFiles}\n                        saved={uploaded}\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          placeholder: \"Click here to upload an image\",\n                        }}\n                        endButton={{\n                          buttonProps: {\n                            round: true,\n                            color: \"info\",\n                            justIcon: true,\n                            filebutton: true,\n                          },\n                          icon: <AttachFile />,\n                        }}\n                      />\n                      {validated ? (\n                        <></>\n                      ) : (\n                        <Danger>Please enter all the details to save</Danger>\n                      )}\n                    </GridItem>\n                  </GridContainer>\n                </CardBody>\n                <CardFooter>\n                  <Button onClick={HandleClear} color=\"defualt\">\n                    Clear\n                  </Button>\n                  <Button onClick={UploadImage} color=\"info\">\n                    Save\n                  </Button>\n                </CardFooter>\n              </form>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      </LoadingOverlay>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>\n                List Of All InternalNotification\n              </h4>\n              <p className={classes.cardCategoryWhite}>\n                All InternalNotification are listed below, you can delete or\n                edit them.\n              </p>\n            </CardHeader>\n            <CardBody>\n              <LoadingOverlay active={deleting} spinner text=\"Please Wait..\">\n                {empty ? (\n                  <p>empty</p>\n                ) : (\n                  <Table\n                    tableHeaderColor=\"info\"\n                    tableHead={[\n                      \"\",\n                      \"ID\",\n                      \"Date\",\n                      \"Coursecode\",\n                      \"SemesterNo\",\n                      \"Note\",\n                      // \"Status\",\n                      \"Files\",\n                      \"Description\",\n                      // \"Created By\",\n                      // \"Created Date\",\n                      // \"Modified By\",\n                      // \"Modified Date\",\n                      // \"Deteled By\",\n                      // \"Deleted Date\",\n                      \"CourseId\",\n                      \"SemesterId\",\n                      \"Actions\",\n                    ]}\n                    tableData={InternalNotedata}\n                    setEdit={setEdit}\n                    setDelete={setDelete}\n                    loading={loading}\n                  />\n                )}\n              </LoadingOverlay>\n            </CardBody>\n          </Card>\n          {pagination ? (\n            <Pagination\n              setPageIndex={setPageIndex}\n              pageIndex={pageIndex}\n              className={\n                classes.textCenter + \" \" + classes.justifyContentCenter\n              }\n              pages={[\n                { text: \"Previous\" },\n                { active: true, text: \"1\" },\n\n                { text: \"Next\" },\n              ]}\n              color=\"info\"\n            />\n          ) : (\n            <></>\n          )}\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Domain } from \"Domain\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport axios from \"axios\";\nimport Danger from \"components/Typography/Danger\";\nimport LoadingOverlay from \"react-loading-overlay\";\n// import ImageUpload from \"components/CustomUpload/ImageUpload.js\";\n\nimport AttachFile from \"@material-ui/icons/AttachFile\";\nimport CustomFileInput from \"components/CustomFileInput/CustomFileInput.js\";\nimport Pagination from \"components/Pagination/Pagination\";\n// import { data } from \"./data.json\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function Placements() {\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [events, setEvents] = React.useState([]);\n  const [files, setFiles] = React.useState(null);\n  const [validated, setValidated] = React.useState(true);\n  const [uploaded, setUploaded] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  const [saving, setSaving] = React.useState(false);\n\n  const Placementdata = events.map((d) => ({\n    Id: d.Id,\n    Name: d.Name,\n    Company: d.Company,\n    Image: d.Image,\n    Description: d.Description,\n  }));\n\n  //Saved Notification trigger\n  const showSavedNotification = () => {\n    if (!saved) {\n      setSaved(true);\n      setTimeout(function () {\n        setSaved(false);\n      }, 3000);\n    }\n  };\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n  //Form Data\n  const [data, setData] = React.useState({\n    Id: 0,\n    Name: \"\",\n    Company: \"\",\n    Status: \"Created\",\n    Image: \"\",\n    Description: \"\",\n  });\n\n  //PassData for getAll API\n  let passData = {\n    PageIndex: 0,\n    PageSize: 10,\n  };\n\n  //PaddData for Delete a Row\n  let passDelete = {\n    Id: deletee,\n    DeletedBy: 2,\n  };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n  //Function to handle Data input\n  function HandleData(e) {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n  function HandleClear() {\n    setData({\n      Id: 0,\n      Name: \"\",\n      Company: \"\",\n      Status: \"Created\",\n      Image: \"\",\n      Description: \"\",\n    });\n  }\n  //Function for Validating fields\n  function ValidateFields() {\n    if (data.Name == \"\") {\n      return false;\n    } else if (data.Company == \"\") {\n      return false;\n    } else if (data.Status == \"\") {\n      return false;\n    } else if (data.Image == \"\") {\n      return false;\n    } else if (data.Description == \"\") {\n      return false;\n    } else return true;\n  }\n  //function to upload\n  function UploadImage() {\n    if (files != null) {\n      setValidated(true);\n      setSaving(true);\n      let form_data = new FormData();\n      form_data.append(\"File\", files[0]);\n      let url = Domain + \"/api/Uploads/File/\";\n      axios\n        .post(url, form_data, {\n          headers: {\n            \"content-type\": \"multipart/form-data\",\n          },\n        })\n        .then((res) => {\n          if (res.data.Success) {\n            data.Image = res.data.Data[0];\n            setUploaded(true);\n            HandleSave();\n          } else {\n            setUploaded(false);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setUploaded(false);\n        });\n    } else {\n      setValidated(false);\n    }\n  }\n\n  //Function to save Data\n  function HandleSave() {\n    if (ValidateFields()) {\n      setValidated(true);\n      fetch(Domain + \"/api/Admin/CreatePlacements/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setData({\n              Id: 0,\n              Name: \"\",\n              Company: \"\",\n              Status: \"Created\",\n              Image: \"\",\n              Description: \"\",\n            });\n            setEmpty(false);\n            showSavedNotification();\n            setSaving(false);\n          } else {\n            console.log(\"Error in insertion\");\n          }\n        });\n    } else {\n      setValidated(false);\n    }\n    setUploaded(false);\n  }\n\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n    fetch(Domain + \"/api/Admin/GetAllPlacements/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length > 2) setPagination(true);\n      });\n  }, [pageIndex]);\n\n  useEffect(() => {\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Admin/GetAllPlacements/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n      });\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      setDeleting(true);\n      fetch(Domain + \"/api/Admin/DeletePlacements/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passDelete),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setDelete([]);\n            showDeletedNotification();\n            setDeleting(false);\n          }\n        });\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Admin/GetPlacementsById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit([]);\n            setData(json.Data);\n            console.log(json.Data);\n          }\n        });\n    }\n  }, [deletee, edit, saved]);\n\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Placements Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Placement Deleted Successfully\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n      <LoadingOverlay active={saving} spinner text=\"Saving Please Wait..\">\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <Card>\n              <form>\n                <CardHeader color=\"info\">\n                  <h4 className={classes.cardTitleWhite}>Add Placements</h4>\n                  <p className={classes.cardCategoryWhite}>\n                    Enter the Placement details below and hit Save\n                  </p>\n                </CardHeader>\n\n                <CardBody>\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Name}\n                        labelText=\"Student Name\"\n                        id=\"Name\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Company}\n                        labelText=\"Company\"\n                        id=\"Company\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                  </GridContainer>\n\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Description}\n                        labelText=\"Enter a description about the company..\"\n                        id=\"Description\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          multiline: true,\n                          rows: 5,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={5} md={5}>\n                      {\" \"}\n                      <CustomFileInput\n                        setFiles={setFiles}\n                        saved={uploaded}\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          placeholder: \"Click here to upload an image\",\n                        }}\n                        endButton={{\n                          buttonProps: {\n                            round: true,\n                            color: \"info\",\n                            justIcon: true,\n                            filebutton: true,\n                          },\n                          icon: <AttachFile />,\n                        }}\n                      />\n                      {validated ? (\n                        <></>\n                      ) : (\n                        <Danger>Please enter all the details to save</Danger>\n                      )}\n                    </GridItem>\n                  </GridContainer>\n                </CardBody>\n                <CardFooter>\n                  <Button onClick={HandleClear} color=\"defualt\">\n                    Clear\n                  </Button>\n                  <Button onClick={UploadImage} color=\"info\">\n                    Save\n                  </Button>\n                </CardFooter>\n              </form>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      </LoadingOverlay>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>List Of All Placements</h4>\n              <p className={classes.cardCategoryWhite}>\n                All Placements are listed below, you can delete or edit them.\n              </p>\n            </CardHeader>\n            <CardBody>\n              <LoadingOverlay active={deleting} spinner text=\"Please Wait..\">\n                {empty ? (\n                  <p>empty</p>\n                ) : (\n                  <Table\n                    tableHeaderColor=\"info\"\n                    tableHead={[\n                      \"\",\n                      \"ID\",\n                      \"Name\",\n                      \"Company\",\n                      // \"Status\",\n                      \"Image\",\n                      \"Description\",\n                      // \"Created By\",\n                      // \"Created Date\",\n                      // \"Modified By\",\n                      // \"Modified Date\",\n                      // \"Deteled By\",\n                      // \"Deleted Date\",\n                      \"Actions\",\n                    ]}\n                    tableData={Placementdata}\n                    setEdit={setEdit}\n                    setDelete={setDelete}\n                    loading={loading}\n                  />\n                )}\n              </LoadingOverlay>\n            </CardBody>\n          </Card>\n          {pagination ? (\n            <Pagination\n              setPageIndex={setPageIndex}\n              pageIndex={pageIndex}\n              className={\n                classes.textCenter + \" \" + classes.justifyContentCenter\n              }\n              pages={[\n                { text: \"Previous\" },\n                { active: true, text: \"1\" },\n\n                { text: \"Next\" },\n              ]}\n              color=\"info\"\n            />\n          ) : (\n            <></>\n          )}\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Domain } from \"Domain\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport Pagination from \"components/Pagination/Pagination\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function Enquiry() {\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [events, setEvents] = React.useState([]);\n  // const [validated, setValidated] = React.useState(true);\n  const [loading, setLoading] = React.useState(true);\n  const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  // const [saving, setSaving] = React.useState(false);\n  const [viewEnquiry, setViewEnquiry] = React.useState(false);\n  function HandleView() {\n    if (viewEnquiry) setViewEnquiry(false);\n    else setViewEnquiry(true);\n  }\n  const Enquirydata = events.map((d) => ({\n    Id: d.Id,\n    Name: d.Name,\n    Mobile: d.Mobile,\n    // Image: d.Image,\n    Description: d.Description,\n  }));\n  //Saved Notification trigger\n  // const showSavedNotification = () => {\n  //   if (!saved) {\n  //     setSaved(true);\n  //     setTimeout(function () {\n  //       setSaved(false);\n  //     }, 3000);\n  //   }\n  // };\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n  //Form Data\n  const [data, setData] = React.useState({\n    Id: 0,\n    Name: \"\",\n    Mobile: \"\",\n    Description: \"\",\n    Status: \"Created\",\n  });\n\n  //PassData for getAll API\n  let passData = {\n    PageIndex: 0,\n    PageSize: 10,\n  };\n\n  //PaddData for Delete a Row\n  let passDelete = {\n    Id: deletee,\n    DeletedBy: 2,\n  };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n  //Function to handle Data input\n  function HandleData(e) {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n  // function HandleClear() {\n  //   setData({\n  //     Id: 0,\n  //     Name: \"\",\n  //     Mobile: \"\",\n  //     Description: \"\",\n  //     Status: \"Created\",\n  //   });\n  // }\n  //Function for Validating fields\n  // function ValidateFields() {\n  //   if (data.Name == \"\") {\n  //     return false;\n  //   } else if (data.Mobile == \"\") {\n  //     return false;\n  //   } else if (data.Description == \"\") {\n  //     return false;\n  //   } else return true;\n  // }\n\n  // //Function to save Data\n  // function HandleSave() {\n  //   if (ValidateFields()) {\n  //     setValidated(true);\n  //     fetch(\n  //       Domain + \"/api/Admin/CreateEnquiry/\",\n  //       {\n  //         method: \"POST\",\n  //         headers: {\n  //           Accept: \"application/json\",\n  //           \"Content-Type\": \"application/json\",\n  //         },\n  //         body: JSON.stringify(data),\n  //       }\n  //     )\n  //       .then((response) => response.json())\n\n  //       .then((json) => {\n  //         if (json.Success) {\n  //           setData({\n  //             Id: 0,\n  //             Name: \"\",\n  //             Mobile: \"\",\n  //             Description: \"\",\n  //             Status: \"Created\",\n  //           });\n  //           setEmpty(false);\n  //           showSavedNotification();\n  //           setSaving(false);\n  //         } else {\n  //           console.log(\"Error in insertion\");\n  //         }\n  //       });\n  //   } else {\n  //     setValidated(false);\n  //   }\n  // }\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n    fetch(Domain + \"/api/Admin/GetAllEnquiry/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        console.log(json);\n        setEvents(json.Data);\n        if (json.Data.length > 2) setPagination(true);\n      });\n  }, [pageIndex]);\n\n  useEffect(() => {\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Admin/GetAllEnquiry/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        console.log(json);\n        setEvents(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n      });\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      setDeleting(true);\n      fetch(Domain + \"/api/Admin/DeleteEnquiry/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passDelete),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setDelete([]);\n            showDeletedNotification();\n            setDeleting(false);\n          }\n        });\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Admin/GetEnquiryById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit([]);\n            setData(json.Data);\n            HandleView();\n          }\n        });\n    }\n  }, [deletee, edit, saved]);\n\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Enquiry Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Enquiry Deleted Successfully\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n\n      {viewEnquiry ? (\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <Card>\n              <form>\n                <CardHeader color=\"info\">\n                  <h4 className={classes.cardTitleWhite}>View Enquiry</h4>\n                  <p className={classes.cardCategoryWhite}>\n                    View the Message below\n                  </p>\n                </CardHeader>\n\n                <CardBody>\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        disabled\n                        onChange={(e) => HandleData(e)}\n                        value={data.Name}\n                        labelText=\"Student Name\"\n                        id=\"Name\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        disabled\n                        onChange={(e) => HandleData(e)}\n                        value={data.Mobile}\n                        labelText=\"Mobile\"\n                        id=\"Mobile\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n\n                    <GridItem xs={12} sm={12} md={12}>\n                      <CustomInput\n                        disabled\n                        onChange={(e) => HandleData(e)}\n                        value={data.Description}\n                        labelText=\"Message\"\n                        id=\"Description\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          multiline: true,\n                          rows: 5,\n                        }}\n                      />\n                    </GridItem>\n                  </GridContainer>\n                </CardBody>\n                <CardFooter>\n                  <Button onClick={HandleView} color=\"danger\">\n                    Close\n                  </Button>\n                </CardFooter>\n              </form>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      ) : (\n        <></>\n      )}\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>List Of All Enquirys</h4>\n              <p className={classes.cardCategoryWhite}>\n                All Enquirys are listed below, you can delete or edit them.\n              </p>\n            </CardHeader>\n            <CardBody>\n              <LoadingOverlay active={deleting} spinner text=\"Please Wait..\">\n                {empty ? (\n                  <p>empty</p>\n                ) : (\n                  <Table\n                    tableHeaderColor=\"info\"\n                    tableHead={[\n                      \"\",\n                      \"ID\",\n                      \"Name\",\n                      \"Mobile\",\n                      // \"Status\",\n                      // \"Image\",\n                      \"Description\",\n                      // \"Created By\",\n                      // \"Created Date\",\n                      // \"Modified By\",\n                      // \"Modified Date\",\n                      // \"Deteled By\",\n                      // \"Deleted Date\",\n                      \"Actions\",\n                    ]}\n                    tableData={Enquirydata}\n                    setEdit={setEdit}\n                    setDelete={setDelete}\n                    loading={loading}\n                  />\n                )}\n              </LoadingOverlay>\n            </CardBody>\n          </Card>\n          {pagination ? (\n            <Pagination\n              setPageIndex={setPageIndex}\n              pageIndex={pageIndex}\n              className={\n                classes.textCenter + \" \" + classes.justifyContentCenter\n              }\n              pages={[\n                { text: \"Previous\" },\n                { active: true, text: \"1\" },\n\n                { text: \"Next\" },\n              ]}\n              color=\"info\"\n            />\n          ) : (\n            <></>\n          )}\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Domain } from \"Domain\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport axios from \"axios\";\nimport Danger from \"components/Typography/Danger\";\nimport LoadingOverlay from \"react-loading-overlay\";\n// import ImageUpload from \"components/CustomUpload/ImageUpload.js\";\n\nimport AttachFile from \"@material-ui/icons/AttachFile\";\nimport CustomFileInput from \"components/CustomFileInput/CustomFileInput.js\";\nimport Pagination from \"components/Pagination/Pagination\";\n// import { data } from \"./data.json\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function Departments() {\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [events, setEvents] = React.useState([]);\n  const [files, setFiles] = React.useState(null);\n  const [validated, setValidated] = React.useState(true);\n  const [uploaded, setUploaded] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  const [saving, setSaving] = React.useState(false);\n\n  const Departdata = events.map((d) => ({\n    Id: d.Id,\n    DepartmentName: d.DepartmentName,\n    HeadName: d.HeadName,\n    Image: d.Image,\n    Description: d.Description,\n  }));\n  //Saved Notification trigger\n  const showSavedNotification = () => {\n    if (!saved) {\n      setSaved(true);\n      setTimeout(function () {\n        setSaved(false);\n      }, 3000);\n    }\n  };\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n  //Form Data\n  const [data, setData] = React.useState({\n    Id: 0,\n    DepartmentName: \"\",\n    HeadName: \"\",\n    Status: \"Created\",\n    Image: \"\",\n    Description: \"\",\n  });\n\n  //PassData for getAll API\n  let passData = {\n    PageIndex: 0,\n    PageSize: 10,\n  };\n\n  //PaddData for Delete a Row\n  let passDelete = {\n    Id: deletee,\n    DeletedBy: 2,\n  };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n  //Function to handle Data input\n  function HandleData(e) {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n  function HandleClear() {\n    setData({\n      Id: 0,\n      DepartmentName: \"\",\n      HeadName: \"\",\n      Status: \"Created\",\n      Image: \"\",\n      Description: \"\",\n    });\n  }\n  //Function for Validating fields\n  function ValidateFields() {\n    if (data.DepartmentName == \"\") {\n      return false;\n    } else if (data.HeadName == \"\") {\n      return false;\n    } else if (data.Description == \"\") {\n      return false;\n    } else return true;\n  }\n  //function to upload\n  function UploadImage() {\n    if (files != null) {\n      setValidated(true);\n      setSaving(true);\n      let form_data = new FormData();\n      form_data.append(\"File\", files[0]);\n      let url = Domain + \"/api/Uploads/File/\";\n      axios\n        .post(url, form_data, {\n          headers: {\n            \"content-type\": \"multipart/form-data\",\n          },\n        })\n        .then((res) => {\n          if (res.data.Success) {\n            data.Image = res.data.Data[0];\n            setUploaded(true);\n            HandleSave();\n          } else {\n            setUploaded(false);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setUploaded(false);\n        });\n    } else {\n      HandleSave();\n    }\n  }\n\n  //Function to save Data\n  function HandleSave() {\n    if (ValidateFields()) {\n      setSaving(true);\n      setValidated(true);\n      fetch(Domain + \"/api/Admin/CreateDepartments/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setData({\n              Id: 0,\n              DepartmentName: \"\",\n              HeadName: \"\",\n              Status: \"Created\",\n              Image: \"\",\n              Description: \"\",\n            });\n            setEmpty(false);\n            showSavedNotification();\n            setSaving(false);\n          } else {\n            console.log(\"Error in insertion\");\n          }\n        });\n    } else {\n      setValidated(false);\n    }\n    setUploaded(false);\n  }\n\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n    fetch(Domain + \"/api/Admin/GetAllDepartments/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length > 2) setPagination(true);\n      });\n  }, [pageIndex]);\n\n  useEffect(() => {\n    console.log(\"componentDidMount\");\n    console.log(\"Detele\" + deletee + \" edit\" + edit);\n\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Admin/GetAllDepartments/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n      });\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      setDeleting(true);\n      fetch(Domain + \"/api/Admin/DeleteDepartments/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passDelete),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setDelete([]);\n            showDeletedNotification();\n            setDeleting(false);\n          }\n        });\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Admin/GetDepartmentsById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit([]);\n            setData(json.Data);\n            console.log(json.Data);\n          }\n        });\n    }\n  }, [deletee, edit, saved]);\n\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Department Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Department Deleted Successfully\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n      <LoadingOverlay active={saving} spinner text=\"Saving Please Wait..\">\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <Card>\n              <form>\n                <CardHeader color=\"info\">\n                  <h4 className={classes.cardTitleWhite}>\n                    Add New Departments\n                  </h4>\n                  <p className={classes.cardCategoryWhite}>\n                    Enter the Department details below and hit Save\n                  </p>\n                </CardHeader>\n\n                <CardBody>\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.DepartmentName}\n                        labelText=\"Department Name\"\n                        id=\"DepartmentName\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.HeadName}\n                        labelText=\"Head of Department\"\n                        id=\"HeadName\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                  </GridContainer>\n\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Description}\n                        labelText=\"Enter a description about the Department..\"\n                        id=\"Description\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          multiline: true,\n                          rows: 5,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={5} md={5}>\n                      {\" \"}\n                      <CustomFileInput\n                        setFiles={setFiles}\n                        saved={uploaded}\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          placeholder: \"Click here to upload an image\",\n                        }}\n                        endButton={{\n                          buttonProps: {\n                            round: true,\n                            color: \"info\",\n                            justIcon: true,\n                            filebutton: true,\n                          },\n                          icon: <AttachFile />,\n                        }}\n                      />\n                      {validated ? (\n                        <></>\n                      ) : (\n                        <Danger>Please enter all the details to save</Danger>\n                      )}\n                    </GridItem>\n                  </GridContainer>\n                </CardBody>\n                <CardFooter>\n                  <Button onClick={HandleClear} color=\"defualt\">\n                    Clear\n                  </Button>\n                  <Button onClick={UploadImage} color=\"info\">\n                    Save\n                  </Button>\n                </CardFooter>\n              </form>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      </LoadingOverlay>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>\n                List Of All Departments\n              </h4>\n              <p className={classes.cardCategoryWhite}>\n                All Departments are listed below, you can delete or edit them.\n              </p>\n            </CardHeader>\n            <CardBody>\n              <LoadingOverlay active={deleting} spinner text=\"Please Wait..\">\n                {empty ? (\n                  <p>empty</p>\n                ) : (\n                  <Table\n                    tableHeaderColor=\"info\"\n                    tableHead={[\n                      \"\",\n                      \"ID\",\n                      \"DepartmentName\",\n                      \"HODName\",\n                      // \"Status\",\n                      \"Image\",\n                      \"Description\",\n                      // \"Created By\",\n                      // \"Created Date\",\n                      // \"Modified By\",\n                      // \"Modified Date\",\n                      // \"Deteled By\",\n                      // \"Deleted Date\",\n                      \"Actions\",\n                    ]}\n                    tableData={Departdata}\n                    setEdit={setEdit}\n                    setDelete={setDelete}\n                    loading={loading}\n                  />\n                )}\n              </LoadingOverlay>\n            </CardBody>\n          </Card>\n          {pagination ? (\n            <Pagination\n              setPageIndex={setPageIndex}\n              pageIndex={pageIndex}\n              className={\n                classes.textCenter + \" \" + classes.justifyContentCenter\n              }\n              pages={[\n                { text: \"Previous\" },\n                { active: true, text: \"1\" },\n\n                { text: \"Next\" },\n              ]}\n              color=\"info\"\n            />\n          ) : (\n            <></>\n          )}\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Domain } from \"Domain\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport axios from \"axios\";\nimport Danger from \"components/Typography/Danger\";\nimport LoadingOverlay from \"react-loading-overlay\";\n// import ImageUpload from \"components/CustomUpload/ImageUpload.js\";\n\nimport AttachFile from \"@material-ui/icons/AttachFile\";\nimport CustomFileInput from \"components/CustomFileInput/CustomFileInput.js\";\nimport Pagination from \"components/Pagination/Pagination\";\n\n// import { data } from \"./data.json\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function Admin() {\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [events, setEvents] = React.useState([]);\n  const [files, setFiles] = React.useState(null);\n  const [validated, setValidated] = React.useState(true);\n  const [uploaded, setUploaded] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  // const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  const [saving, setSaving] = React.useState(false);\n  const [viewData, setViewData] = React.useState(false);\n  const Admindata = events.map((d) => ({\n    Id: d.Id,\n    FullName: d.FullName,\n    Email: d.Email,\n    Password: d.Password,\n  }));\n\n  //Saved Notification trigger\n  const showSavedNotification = () => {\n    if (!saved) {\n      setSaved(true);\n      setTimeout(function () {\n        setSaved(false);\n      }, 3000);\n    }\n  };\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n  //Form Data\n  const [data, setData] = React.useState({\n    Id: 0,\n    FullName: \"\",\n    Email: \"\",\n    Status: \"Created\",\n    Image: \"\",\n    Password: \"\",\n  });\n\n  //PassData for getAll API\n  let passData = {\n    PageIndex: 0,\n    PageSize: 10,\n  };\n\n  //PaddData for Delete a Row\n  // let passDelete = {\n  //   Id: deletee,\n  //   DeletedBy: 2,\n  // };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n  //Function to handle Data input\n  function HandleData(e) {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n  function HandleClear() {\n    setData({\n      Id: 0,\n      FullName: \"\",\n      Email: \"\",\n      Status: \"Created\",\n      Image: \"\",\n      Password: \"\",\n    });\n    setViewData(false);\n  }\n  //Function for Validating fields\n  function ValidateFields() {\n    if (data.FullName == \"\") {\n      return false;\n    } else if (data.Email == \"\") {\n      return false;\n    } else if (data.Status == \"\") {\n      return false;\n    } else if (data.Image == \"\") {\n      return false;\n    } else if (data.Password == \"\") {\n      return false;\n    } else return true;\n  }\n  //function to upload\n  function UploadImage() {\n    if (files != null) {\n      setValidated(true);\n      setSaving(true);\n      let form_data = new FormData();\n      form_data.append(\"File\", files[0]);\n      let url = Domain + \"/api/Uploads/File/\";\n      axios\n        .post(url, form_data, {\n          headers: {\n            \"content-type\": \"multipart/form-data\",\n          },\n        })\n        .then((res) => {\n          if (res.data.Success) {\n            data.Image = res.data.Data[0];\n            setUploaded(true);\n            HandleSave();\n          } else {\n            setUploaded(false);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setUploaded(false);\n        });\n    } else {\n      setValidated(false);\n    }\n  }\n\n  //Function to save Data\n  function HandleSave() {\n    if (ValidateFields()) {\n      setValidated(true);\n      fetch(Domain + \"/api/Admin/CreateAdminDetails/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setData({\n              Id: 0,\n              FullName: \"\",\n              Email: \"\",\n              Status: \"Created\",\n              Image: \"\",\n              Password: \"\",\n            });\n            setEmpty(false);\n            showSavedNotification();\n            setSaving(false);\n          } else {\n            console.log(\"Error in insertion\");\n          }\n        });\n    } else {\n      setValidated(false);\n    }\n    setUploaded(false);\n  }\n\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n    fetch(Domain + \"/api/Admin/GetAllAdminDetails/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length > 2) setPagination(true);\n      });\n  }, [pageIndex]);\n\n  useEffect(() => {\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Admin/GetAllAdminDetails/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n      });\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      // setDeleting(true);\n      // fetch(Domain + \"/api/Admin/DeleteAdminDetails/\", {\n      //   method: \"POST\",\n      //   headers: {\n      //     Accept: \"application/json\",\n      //     \"Content-Type\": \"application/json\",\n      //   },\n      //   body: JSON.stringify(passDelete),\n      // })\n      //   .then((response) => response.json())\n\n      //   .then((json) => {\n      //     if (json.Success) {\n      //       setDelete([]);\n      //       showDeletedNotification();\n      //       setDeleting(false);\n      //     }\n      //   });\n      showDeletedNotification();\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Admin/GetAdminDetailsById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setViewData(true);\n            setEdit([]);\n            setData(json.Data);\n            console.log(json.Data);\n          }\n        });\n    }\n  }, [deletee, edit, saved]);\n\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Admin Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Cannot Delete the Super Admin\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n      {viewData ? (\n        <LoadingOverlay active={saving} spinner text=\"Saving Please Wait..\">\n          <GridContainer>\n            <GridItem xs={12} sm={12} md={12}>\n              <Card>\n                <form>\n                  <CardHeader color=\"info\">\n                    <h4 className={classes.cardTitleWhite}>Admin</h4>\n                    <p className={classes.cardCategoryWhite}>Details</p>\n                  </CardHeader>\n\n                  <CardBody>\n                    <GridContainer>\n                      <GridItem xs={12} sm={12} md={6}>\n                        <CustomInput\n                          onChange={(e) => HandleData(e)}\n                          value={data.FullName}\n                          labelText=\"FullName\"\n                          id=\"FullName\"\n                          formControlProps={{\n                            fullWidth: true,\n                          }}\n                        />\n                      </GridItem>\n                      <GridItem xs={12} sm={12} md={4}>\n                        <CustomInput\n                          onChange={(e) => HandleData(e)}\n                          value={data.Email}\n                          labelText=\"Email\"\n                          id=\"Email\"\n                          formControlProps={{\n                            fullWidth: true,\n                          }}\n                        />\n                      </GridItem>\n                    </GridContainer>\n\n                    <GridContainer>\n                      <GridItem xs={12} sm={12} md={5}>\n                        <CustomInput\n                          onChange={(e) => HandleData(e)}\n                          value={data.Password}\n                          labelText=\"Password\"\n                          id=\"Password\"\n                          formControlProps={{\n                            fullWidth: true,\n                          }}\n                        />\n                      </GridItem>\n                      <GridItem xs={12} sm={5} md={5}>\n                        {\" \"}\n                        <CustomFileInput\n                          setFiles={setFiles}\n                          saved={uploaded}\n                          formControlProps={{\n                            fullWidth: true,\n                          }}\n                          inputProps={{\n                            placeholder: \"Click here to upload an image\",\n                          }}\n                          endButton={{\n                            buttonProps: {\n                              round: true,\n                              color: \"info\",\n                              justIcon: true,\n                              filebutton: true,\n                            },\n                            icon: <AttachFile />,\n                          }}\n                        />\n                        {validated ? (\n                          <></>\n                        ) : (\n                          <Danger>Please enter all the details to save</Danger>\n                        )}\n                      </GridItem>\n                    </GridContainer>\n                  </CardBody>\n                  <CardFooter>\n                    <Button onClick={HandleClear} color=\"defualt\">\n                      Cansel\n                    </Button>\n                    <Button onClick={UploadImage} color=\"info\">\n                      Save\n                    </Button>\n                  </CardFooter>\n                </form>\n              </Card>\n            </GridItem>\n          </GridContainer>\n        </LoadingOverlay>\n      ) : (\n        <></>\n      )}\n\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>List Of All Admin</h4>\n              <p className={classes.cardCategoryWhite}>\n                All Admins are listed below, you can delete or edit them.\n              </p>\n            </CardHeader>\n            <CardBody>\n              {empty ? (\n                <p>empty</p>\n              ) : (\n                <Table\n                  tableHeaderColor=\"info\"\n                  tableHead={[\n                    \"\",\n                    \"Id\",\n                    \"FullName\",\n                    \"Email\",\n                    \"Password\",\n                    // \"Gender\",\n                    // \"DOB\",\n                    // \"Address\",\n                    // \"Usertype\",\n                    // \"AreaOfInterest\",\n                    // \"Status\",\n                    // \"Created By\",\n                    // \"Created Date\",\n                    // \"Modified By\",\n                    // \"Modified Date\",\n                    // \"Deteled By\",\n                    // \"Deleted Date\",\n                    \"Actions\",\n                  ]}\n                  tableData={Admindata}\n                  setEdit={setEdit}\n                  setDelete={setDelete}\n                  loading={loading}\n                />\n              )}\n            </CardBody>\n          </Card>\n          {pagination ? (\n            <Pagination\n              setPageIndex={setPageIndex}\n              pageIndex={pageIndex}\n              className={\n                classes.textCenter + \" \" + classes.justifyContentCenter\n              }\n              pages={[\n                { text: \"Previous\" },\n                { active: true, text: \"1\" },\n\n                { text: \"Next\" },\n              ]}\n              color=\"info\"\n            />\n          ) : (\n            <></>\n          )}\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\n","import {\n  roseColor,\n  primaryColor,\n  infoColor,\n  successColor,\n  warningColor,\n  dangerColor,\n  blackColor,\n  whiteColor,\n  grayColor,\n  hexToRgb,\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst navPillsStyle = (theme) => ({\n  root: {\n    marginTop: \"20px\",\n    paddingLeft: \"0\",\n    marginBottom: \"0\",\n    overflow: \"visible !important\",\n  },\n  flexContainer: {\n    [theme.breakpoints.down(\"xs\")]: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n  },\n  displayNone: {\n    display: \"none !important\",\n  },\n  fixed: {\n    overflow: \"visible !important\",\n  },\n  horizontalDisplay: {\n    display: \"block\",\n  },\n  pills: {\n    float: \"left\",\n    position: \"relative\",\n    display: \"block\",\n    borderRadius: \"30px\",\n    minWidth: \"100px\",\n    textAlign: \"center\",\n    transition: \"all .3s\",\n    padding: \"10px 15px\",\n    color: grayColor[15],\n    height: \"auto\",\n    opacity: \"1\",\n    maxWidth: \"100%\",\n    margin: \"0 5px\",\n    minHeight: \"unset\",\n    lineHeight: \"24px\",\n    textTransform: \"uppercase\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n  },\n  pillsWithIcons: {\n    borderRadius: \"4px\",\n  },\n  tabIcon: {\n    width: \"30px\",\n    height: \"30px\",\n    display: \"block\",\n    margin: \"15px 0 !important\",\n  },\n  horizontalPills: {\n    width: \"100%\",\n    float: \"none !important\",\n    \"& + button\": {\n      margin: \"10px 0\",\n    },\n  },\n  contentWrapper: {\n    marginTop: \"20px\",\n    \"& .react-swipeable-view-container > div > div\": {\n      paddingLeft: \"15px\",\n      paddingRight: \"15px\",\n    },\n  },\n  primary: {\n    \"&,&:hover\": {\n      color: whiteColor,\n      backgroundColor: primaryColor[0],\n      boxShadow:\n        \"0 4px 20px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.14), 0 7px 10px -5px rgba(\" +\n        hexToRgb(primaryColor[0]) +\n        \", 0.4)\",\n    },\n  },\n  info: {\n    \"&,&:hover\": {\n      color: whiteColor,\n      backgroundColor: infoColor[0],\n      boxShadow:\n        \"0 4px 20px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.14), 0 7px 10px -5px rgba(\" +\n        hexToRgb(successColor[0]) +\n        \", 0.4)\",\n    },\n  },\n  success: {\n    \"&,&:hover\": {\n      color: whiteColor,\n      backgroundColor: successColor[0],\n      boxShadow:\n        \"0 2px 2px 0 rgba(\" +\n        hexToRgb(successColor[0]) +\n        \", 0.14), 0 3px 1px -2px rgba(\" +\n        hexToRgb(successColor[0]) +\n        \", 0.2), 0 1px 5px 0 rgba(\" +\n        hexToRgb(successColor[0]) +\n        \", 0.12)\",\n    },\n  },\n  warning: {\n    \"&,&:hover\": {\n      color: whiteColor,\n      backgroundColor: warningColor[0],\n      boxShadow:\n        \"0 4px 20px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.14), 0 7px 10px -5px rgba(\" +\n        hexToRgb(warningColor[0]) +\n        \", 0.4)\",\n    },\n  },\n  danger: {\n    \"&,&:hover\": {\n      color: whiteColor,\n      backgroundColor: dangerColor[0],\n      boxShadow:\n        \"0 4px 20px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.14), 0 7px 10px -5px rgba(\" +\n        hexToRgb(warningColor[0]) +\n        \", 0.4)\",\n    },\n  },\n  rose: {\n    \"&,&:hover\": {\n      color: whiteColor,\n      backgroundColor: roseColor[0],\n      boxShadow:\n        \"0 4px 20px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.14), 0 7px 10px -5px rgba(\" +\n        hexToRgb(roseColor[0]) +\n        \", 0.4)\",\n    },\n  },\n  alignCenter: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  tabLabelContainer: {\n    padding: \"unset !important\",\n  },\n});\n\nexport default navPillsStyle;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\nimport SwipeableViews from \"react-swipeable-views\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\n\n// core components\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\n\nimport styles from \"assets/jss/material-dashboard-react/components/navPillsStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function NavPills(props) {\n  const [active, setActive] = React.useState(props.active);\n  const handleChange = (event, active) => {\n    setActive(active);\n  };\n  const handleChangeIndex = (index) => {\n    setActive(index);\n  };\n  const { tabs, direction, color, horizontal, alignCenter } = props;\n  const classes = useStyles();\n  const flexContainerClasses = classNames({\n    [classes.flexContainer]: true,\n    [classes.horizontalDisplay]: horizontal !== undefined,\n  });\n  const tabButtons = (\n    <Tabs\n      classes={{\n        root: classes.root,\n        fixed: classes.fixed,\n        flexContainer: flexContainerClasses,\n        indicator: classes.displayNone,\n      }}\n      value={active}\n      onChange={handleChange}\n      centered={alignCenter}\n    >\n      {tabs.map((prop, key) => {\n        var icon = {};\n        if (prop.tabIcon !== undefined) {\n          icon[\"icon\"] = <prop.tabIcon className={classes.tabIcon} />;\n        }\n        const pillsClasses = classNames({\n          [classes.pills]: true,\n          [classes.horizontalPills]: horizontal !== undefined,\n          [classes.pillsWithIcons]: prop.tabIcon !== undefined,\n        });\n        return (\n          <Tab\n            label={prop.tabButton}\n            key={key}\n            {...icon}\n            classes={{\n              root: pillsClasses,\n              label: classes.label,\n              selected: classes[color],\n            }}\n          />\n        );\n      })}\n    </Tabs>\n  );\n  const tabContent = (\n    <div className={classes.contentWrapper}>\n      <SwipeableViews\n        axis={direction === \"rtl\" ? \"x-reverse\" : \"x\"}\n        index={active}\n        onChangeIndex={handleChangeIndex}\n      >\n        {tabs.map((prop, key) => {\n          return (\n            <div className={classes.tabContent} key={key}>\n              {prop.tabContent}\n            </div>\n          );\n        })}\n      </SwipeableViews>\n    </div>\n  );\n  return horizontal !== undefined ? (\n    <GridContainer>\n      <GridItem {...horizontal.tabsGrid}>{tabButtons}</GridItem>\n      <GridItem {...horizontal.contentGrid}>{tabContent}</GridItem>\n    </GridContainer>\n  ) : (\n    <div>\n      {tabButtons}\n      {tabContent}\n    </div>\n  );\n}\n\nNavPills.defaultProps = {\n  active: 0,\n  color: \"primary\",\n};\n\nNavPills.propTypes = {\n  // index of the default active pill\n  active: PropTypes.number,\n  tabs: PropTypes.arrayOf(\n    PropTypes.shape({\n      tabButton: PropTypes.string,\n      tabIcon: PropTypes.object,\n      tabContent: PropTypes.node,\n    })\n  ).isRequired,\n  color: PropTypes.oneOf([\n    \"primary\",\n    \"warning\",\n    \"danger\",\n    \"success\",\n    \"info\",\n    \"rose\",\n  ]),\n  direction: PropTypes.string,\n  horizontal: PropTypes.shape({\n    tabsGrid: PropTypes.object,\n    contentGrid: PropTypes.object,\n  }),\n  alignCenter: PropTypes.bool,\n};\n","import {\n  primaryColor,\n  warningColor,\n  dangerColor,\n  successColor,\n  infoColor,\n  roseColor,\n  grayColor,\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst accordionStyle = (theme) => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: \"20px\",\n  },\n  expansionPanel: {\n    boxShadow: \"none\",\n    \"&:before\": {\n      display: \"none !important\",\n    },\n  },\n  expansionPanelExpanded: {\n    margin: \"0 !important\",\n  },\n  expansionPanelSummary: {\n    minHeight: \"auto !important\",\n    backgroundColor: \"transparent\",\n    borderBottom: \"1px solid \" + grayColor[6],\n    padding: \"25px 10px 5px 0px\",\n    borderTopLeftRadius: \"3px\",\n    borderTopRightRadius: \"3px\",\n    color: grayColor[1],\n  },\n  primaryExpansionPanelSummary: {\n    \"&:hover\": {\n      color: primaryColor[0],\n    },\n  },\n  secondaryExpansionPanelSummary: {\n    \"&:hover\": {\n      color: primaryColor[0],\n    },\n  },\n  warningExpansionPanelSummary: {\n    \"&:hover\": {\n      color: warningColor[0],\n    },\n  },\n  dangerExpansionPanelSummary: {\n    \"&:hover\": {\n      color: dangerColor[0],\n    },\n  },\n  successExpansionPanelSummary: {\n    \"&:hover\": {\n      color: successColor[0],\n    },\n  },\n  infoExpansionPanelSummary: {\n    \"&:hover\": {\n      color: infoColor[0],\n    },\n  },\n  roseExpansionPanelSummary: {\n    \"&:hover\": {\n      color: roseColor[0],\n    },\n  },\n  expansionPanelSummaryExpaned: {\n    \"& $expansionPanelSummaryExpandIcon\": {\n      [theme.breakpoints.up(\"md\")]: {\n        top: \"auto !important\",\n      },\n      transform: \"rotate(180deg)\",\n      [theme.breakpoints.down(\"sm\")]: {\n        top: \"10px !important\",\n      },\n      // some jss/css to make the cards look a bit better on Internet Explorer\n      \"@media all and (-ms-high-contrast: none), (-ms-high-contrast: active)\": {\n        display: \"inline-block !important\",\n        top: \"10px !important\",\n      },\n    },\n  },\n  primaryExpansionPanelSummaryExpaned: {\n    color: primaryColor[0],\n  },\n  secondaryExpansionPanelSummaryExpaned: {\n    color: primaryColor[0],\n  },\n  warningExpansionPanelSummaryExpaned: {\n    color: warningColor[0],\n  },\n  dangerExpansionPanelSummaryExpaned: {\n    color: dangerColor[0],\n  },\n  successExpansionPanelSummaryExpaned: {\n    color: successColor[0],\n  },\n  infoExpansionPanelSummaryExpaned: {\n    color: infoColor[0],\n  },\n  roseExpansionPanelSummaryExpaned: {\n    color: roseColor[0],\n  },\n  expansionPanelSummaryContent: {\n    margin: \"0 !important\",\n  },\n  expansionPanelSummaryExpandIcon: {\n    [theme.breakpoints.up(\"md\")]: {\n      top: \"auto !important\",\n    },\n    transform: \"rotate(0deg)\",\n    color: \"inherit\",\n    right: \"10px\",\n    position: \"absolute\",\n    [theme.breakpoints.down(\"sm\")]: {\n      top: \"10px !important\",\n    },\n    // some jss/css to make the cards look a bit better on Internet Explorer\n    \"@media all and (-ms-high-contrast: none), (-ms-high-contrast: active)\": {\n      display: \"inline-block !important\",\n    },\n  },\n  expansionPanelSummaryExpandIconExpanded: {},\n  title: {\n    fontSize: \"15px\",\n    fontWeight: \"bolder\",\n    marginTop: \"0\",\n    marginBottom: \"0\",\n    color: \"inherit\",\n  },\n  expansionPanelDetails: {\n    display: \"block\",\n    padding: \"15px 0px 5px\",\n    fontSize: \".875rem\",\n  },\n});\n\nexport default accordionStyle;\n","import React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\n\n// @material-ui/icons\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\n\nimport styles from \"assets/jss/material-dashboard-react/components/accordionStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Accordion(props) {\n  const [active, setActive] = React.useState(\n    props.active.length === undefined ? [props.active] : props.active\n  );\n  const [single] = React.useState(\n    props.active.length === undefined ? true : false\n  );\n  const handleChange = (panel) => () => {\n    let newArray;\n\n    if (single) {\n      if (active[0] === panel) {\n        newArray = [];\n      } else {\n        newArray = [panel];\n      }\n    } else {\n      if (active.indexOf(panel) === -1) {\n        newArray = [...active, panel];\n      } else {\n        newArray = [...active];\n        newArray.splice(active.indexOf(panel), 1);\n      }\n    }\n    setActive(newArray);\n  };\n  const { collapses, activeColor } = props;\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      {collapses.map((prop, key) => {\n        return (\n          <ExpansionPanel\n            expanded={active === key || active.indexOf(key) !== -1}\n            onChange={handleChange(key)}\n            key={key}\n            classes={{\n              root: classes.expansionPanel,\n              expanded: classes.expansionPanelExpanded,\n            }}\n          >\n            <ExpansionPanelSummary\n              expandIcon={<ExpandMore />}\n              classes={{\n                root: `${classes.expansionPanelSummary} ${\n                  classes[activeColor + \"ExpansionPanelSummary\"]\n                }`,\n                expanded: `${classes.expansionPanelSummaryExpaned} ${\n                  classes[activeColor + \"ExpansionPanelSummaryExpaned\"]\n                }`,\n                content: classes.expansionPanelSummaryContent,\n                expandIcon: classes.expansionPanelSummaryExpandIcon,\n              }}\n            >\n              <h4 className={classes.title}>{prop.title}</h4>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails className={classes.expansionPanelDetails}>\n              {prop.content}\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n        );\n      })}\n    </div>\n  );\n}\n\nAccordion.defaultProps = {\n  active: -1,\n  activeColor: \"primary\",\n};\n\nAccordion.propTypes = {\n  // index of the default active collapse\n  active: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.arrayOf(PropTypes.number),\n  ]),\n  collapses: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      content: PropTypes.node,\n    })\n  ).isRequired,\n  activeColor: PropTypes.oneOf([\n    \"primary\",\n    \"secondary\",\n    \"warning\",\n    \"danger\",\n    \"success\",\n    \"info\",\n    \"rose\",\n  ]),\n};\n","import React, { useEffect, useState } from \"react\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\n// import CustomInput from \"components/CustomInput/CustomInput.js\";\n// import Button from \"components/CustomButtons/Button.js\";\n// import CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport NavPills from \"components/NavPills/NavPills.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport { Domain } from \"Domain\";\n// import axios from \"axios\";\n// import Danger from \"components/Typography/Danger\";\nimport LoadingOverlay from \"react-loading-overlay\";\n// import ImageUpload from \"components/CustomUpload/ImageUpload.js\";\nimport Accordion from \"components/Accordion/Accordion\";\nimport Pagination from \"components/Pagination/Pagination\";\n\n// import AttachFile from \"@material-ui/icons/AttachFile\";\n// import CustomFileInput from \"components/CustomFileInput/CustomFileInput.js\";\n\n// import { data } from \"./data.json\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function Admission() {\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [edit1, setEdit1] = React.useState([]);\n  const [edit2, setEdit2] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [requested, setRequested] = React.useState([]);\n  const [waitingList, setWaitingList] = React.useState([]);\n  const [admitted, setAdmitted] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n  const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  const [empty1, setEmpty1] = React.useState(false);\n  const [empty2, setEmpty2] = React.useState(false);\n  const [viewData, Setview] = React.useState(false);\n  const [step, setStep] = React.useState(0);\n  const [stepChangeData, setStepChangeData] = React.useState();\n  const [stepChangeData1, setStepChangeData1] = React.useState();\n  const [stepChangeData2, setStepChangeData2] = React.useState();\n  function HandleView() {\n    if (viewData) {\n      Setview(false);\n      setStep(0);\n    } else {\n      setStep(1);\n      Setview(true);\n    }\n  }\n  function HandleView1() {\n    if (viewData) {\n      Setview(false);\n      setStep(0);\n    } else {\n      setStep(2);\n      Setview(true);\n    }\n  }\n  function HandleView2() {\n    if (viewData) {\n      Setview(false);\n      setStep(0);\n    } else {\n      setStep(3);\n      Setview(true);\n    }\n  }\n  const ReqData = requested.map((d) => ({\n    Id: d.Id,\n    AdmissionNo: d.AdmissionNo,\n    FirstName: d.FirstName,\n    Gender: d.Gender,\n    DOB: d.DOB,\n    Course: d.Course,\n    FathersName: d.FathersName,\n    FatherMobile: d.FatherMobile,\n    District: d.District,\n    HouseName: d.HouseName,\n    Email: d.Email,\n  }));\n  const WaitData = waitingList.map((d) => ({\n    Id: d.Id,\n    AdmissionNo: d.AdmissionNo,\n    FirstName: d.FirstName,\n    Gender: d.Gender,\n    DOB: d.DOB,\n    Course: d.Course,\n    FathersName: d.FathersName,\n    FatherMobile: d.FatherMobile,\n    District: d.District,\n    HouseName: d.HouseName,\n    Email: d.Email,\n  }));\n  const AdmData = admitted.map((d) => ({\n    Id: d.Id,\n    AdmissionNo: d.AdmissionNo,\n    FirstName: d.FirstName,\n    Gender: d.Gender,\n    DOB: d.DOB,\n    Course: d.Course,\n    FathersName: d.FathersName,\n    FatherMobile: d.FatherMobile,\n    District: d.District,\n    HouseName: d.HouseName,\n    Email: d.Email,\n  }));\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n  //Form Data\n  const [data, setData] = React.useState();\n\n  // console.log(data);\n  //PassData for getAll API\n  let passData1 = {\n    PageIndex: 0,\n    PageSize: 10,\n    CourseId: \"\",\n    Year: 2021,\n    Step: 1,\n  };\n  let passData2 = {\n    PageIndex: 0,\n    PageSize: 10,\n    CourseId: \"\",\n    Year: 2021,\n    Step: 2,\n  };\n  let passData3 = {\n    PageIndex: 0,\n    PageSize: 10,\n    CourseId: \"\",\n    Year: 2021,\n    Step: 3,\n  };\n  //PaddData for Delete a Row\n  let passDelete = {\n    Id: deletee,\n    DeletedBy: 2,\n  };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n  let passEdit1 = {\n    Id: edit1,\n  };\n  let passEdit2 = {\n    Id: edit2,\n  };\n\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n\n    fetch(Domain + \"/api/Student/GetAdmissionDetailsForAdmin/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        // console.log(\"requested data\", json.Data);\n        setRequested(json.Data);\n        if (json.Data.length > 2) setPagination(true);\n        // if (json.Data.length == 0) setEmpty(true);\n        // setLoading(false);\n      });\n  }, [pageIndex]);\n\n  useEffect(() => {\n    //API call for get latest 10 elements step is requested\n    fetch(Domain + \"/api/Student/GetAdmissionDetailsForAdmin/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData1),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        // console.log(\"requested data\", json.Data);\n        setRequested(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        else setEmpty(false);\n\n        setLoading(false);\n      });\n    //API call for get latest 10 elements step is waiting glist\n    fetch(Domain + \"/api/Student/GetAdmissionDetailsForAdmin/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData2),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setWaitingList(json.Data);\n        if (json.Data.length == 0) setEmpty1(true);\n        else setEmpty1(false);\n\n        setLoading(false);\n      });\n    //API call for get latest 10 elements step is accepted\n    fetch(Domain + \"/api/Student/GetAdmissionDetailsForAdmin/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData3),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setAdmitted(json.Data);\n        if (json.Data.length == 0) setEmpty2(true);\n        else setEmpty2(false);\n        setLoading(false);\n      });\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      setDeleting(true);\n      fetch(Domain + \"/api/Student/DeleteAdmissionDetails/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passDelete),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setDelete([]);\n            showDeletedNotification();\n            setDeleting(false);\n          }\n        });\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Student/GetAdmissionDetailsById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit([]);\n            setData(json.Data);\n            HandleView();\n            console.log(json.Data);\n          }\n        });\n    }\n    if (edit1.length != 0) {\n      fetch(Domain + \"/api/Student/GetAdmissionDetailsById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit1),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit1([]);\n            setData(json.Data);\n            HandleView1();\n            console.log(json.Data);\n          }\n        });\n    }\n    if (edit2.length != 0) {\n      fetch(Domain + \"/api/Student/GetAdmissionDetailsById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit2),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit2([]);\n            setData(json.Data);\n            HandleView2();\n            console.log(json.Data);\n          }\n        });\n    }\n  }, [deletee, edit, edit1, edit2, saved, viewData]);\n\n  useEffect(() => {\n    setLoading(true);\n    //console.log(\"Data:\", data.Id);\n    fetch(Domain + \"/api/Student/CreateAdmissionDetails/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(stepChangeData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        console.log(\"status update:\", json.Data);\n        // setRequested(json.Data);\n        // if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n        Setview(false);\n      });\n  }, [stepChangeData]);\n  useEffect(() => {\n    setLoading(true);\n    //console.log(\"Data:\", data.Id);\n    fetch(Domain + \"/api/Student/CreateAdmissionDetails/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(stepChangeData1),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        console.log(\"status update:\", json.Data);\n        // setRequested(json.Data);\n        // if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n        Setview(false);\n      });\n  }, [stepChangeData1]);\n  useEffect(() => {\n    setLoading(true);\n    //console.log(\"Data:\", data.Id);\n    fetch(Domain + \"/api/Student/CreateAdmissionDetails/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(stepChangeData2),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        console.log(\"status update:\", json.Data);\n        // setRequested(json.Data);\n        // if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n        Setview(false);\n      });\n  }, [stepChangeData2]);\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Admission Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Admission Deleted Successfully\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n\n      {viewData ? (\n        <LoadingOverlay active={loading} spinner text=\"Please Wait..\">\n          <Card>\n            <GridContainer>\n              <GridItem md={12} sm={12} lg={4}>\n                <img src={Domain + data.Image} alt=\"..\" />\n              </GridItem>\n              <GridItem md={12} sm={12} lg={6}>\n                <h2 className={classes.title}>{data.FirstName}</h2>\n                <h3 className={classes.mainPrice}>{data.Course}</h3>\n                <Accordion\n                  active={0}\n                  activeColor=\"info\"\n                  collapses={[\n                    {\n                      title: \"Personel Info\",\n                      content: (\n                        <>\n                          <b>Date Of Birth : </b>\n                          {data.DOB}\n                          <br />\n                          <b> Gender : </b>\n                          {data.Gender}\n                          <br />\n                          <b> Guardians Name :</b> {data.FathersName}\n                          <br />\n                          <b> Guardians Mobile :</b> {data.FatherMobile}\n                          <br />\n                          <b> Contact : </b>\n                          {data.StudentMobile}\n                          <br />\n                          <b> Email : </b>\n                          {data.Email}\n                          <br />\n                        </>\n                      ),\n                    },\n                    {\n                      title: \"Educational Details\",\n                      content: (\n                        <>\n                          <b> Course : </b>\n                          {data.Course}\n                          <br />\n                          <b> Course Code : </b>\n                          {data.CourseCode}\n                          <br />\n                          <b> Admission Number : </b>\n                          {data.AdmissionNo}\n                          <br />\n                          <b> Registration Number: </b>\n                          {data.RegistrationNo}\n                        </>\n                      ),\n                    },\n                    {\n                      title: \"Academic Details\",\n                      content: (\n                        <p>\n                          Here comes the internal marks and university\n                          marklists.\n                        </p>\n                      ),\n                    },\n                  ]}\n                />\n\n                <GridContainer className={classes.pullRight}>\n                  <Button round onClick={HandleView}>\n                    Go back\n                  </Button>\n                  {step == 1 ? (\n                    <>\n                      <Button\n                        round\n                        color=\"info\"\n                        onClick={() => {\n                          setStepChangeData1({\n                            Id: data.Id,\n                            LastStatus: \"Processing\",\n                            Step: 2,\n                            StatusList: \"\",\n                          });\n                        }}\n                      >\n                        Add to Waiting list\n                      </Button>\n                      <Button\n                        round\n                        color=\"danger\"\n                        onClick={() => {\n                          setStepChangeData2({\n                            Id: data.Id,\n                            LastStatus: \"Rejected\",\n                            Step: 4,\n                            StatusList: \"\",\n                          });\n                        }}\n                      >\n                        Reject Application\n                      </Button>\n                    </>\n                  ) : (\n                    <>\n                      {step == 2 ? (\n                        <>\n                          <Button\n                            round\n                            color=\"success\"\n                            onClick={() => {\n                              setStepChangeData({\n                                Id: data.Id,\n                                LastStatus: \"Admitted\",\n                                Step: 3,\n                                StatusList: \"\",\n                              });\n                            }}\n                          >\n                            Admit\n                          </Button>\n                          <Button\n                            round\n                            color=\"danger\"\n                            onClick={() => {\n                              setStepChangeData2({\n                                Id: data.Id,\n                                LastStatus: \"Rejected\",\n                                Step: 4,\n                                StatusList: \"\",\n                              });\n                            }}\n                          >\n                            Reject Application\n                          </Button>\n                        </>\n                      ) : (\n                        <>\n                          {\" \"}\n                          <Button round color=\"success\">\n                            Admitted\n                          </Button>\n                        </>\n                      )}\n                    </>\n                  )}\n                </GridContainer>\n              </GridItem>\n            </GridContainer>\n          </Card>\n        </LoadingOverlay>\n      ) : (\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <h3>\n              <small>Select Admission status to view entries</small>\n            </h3>\n            <NavPills\n              color=\"info\"\n              tabs={[\n                {\n                  tabButton: \"Requested\",\n                  tabContent: (\n                    <GridContainer>\n                      <GridItem xs={12} sm={12} md={12}>\n                        <Card>\n                          <CardHeader color=\"info\">\n                            <h4 className={classes.cardTitleWhite}>\n                              List Requested Admission entries\n                            </h4>\n                            <p className={classes.cardCategoryWhite}>\n                              Admissions with status requested will be listed\n                              below\n                            </p>\n                          </CardHeader>\n                          <CardBody>\n                            <LoadingOverlay\n                              active={deleting}\n                              spinner\n                              text=\"Please Wait..\"\n                            >\n                              {empty ? (\n                                <p>empty</p>\n                              ) : (\n                                <Table\n                                  tableHeaderColor=\"info\"\n                                  tableHead={[\n                                    \"\",\n                                    \"Id\",\n                                    \"AdmissionNo\",\n                                    \"First Name\",\n                                    \"Gender\",\n                                    \"DOB\",\n                                    \"Course\",\n                                    \"Father's Name\",\n                                    \"Father's Mobile\",\n                                    \"District\",\n                                    \"House Name\",\n                                    \"Email\",\n                                    \"Actions\",\n                                  ]}\n                                  tableData={ReqData}\n                                  setEdit={setEdit}\n                                  setDelete={setDelete}\n                                  loading={loading}\n                                />\n                              )}\n                            </LoadingOverlay>\n                          </CardBody>\n                        </Card>\n                      </GridItem>\n                    </GridContainer>\n                  ),\n                },\n                {\n                  tabButton: \"Waiting List\",\n                  tabContent: (\n                    <span>\n                      <GridContainer>\n                        <GridItem xs={12} sm={12} md={12}>\n                          <Card>\n                            <CardHeader color=\"info\">\n                              <h4 className={classes.cardTitleWhite}>\n                                List Of Admissions in Waiting List\n                              </h4>\n                              <p className={classes.cardCategoryWhite}>\n                                Admissions with status Waiting list will be\n                                listed below\n                              </p>\n                            </CardHeader>\n                            <CardBody>\n                              <LoadingOverlay\n                                active={deleting}\n                                spinner\n                                text=\"Please Wait..\"\n                              >\n                                {empty1 ? (\n                                  <p>empty</p>\n                                ) : (\n                                  <Table\n                                    tableHeaderColor=\"info\"\n                                    tableHead={[\n                                      \"\",\n                                      \"Id\",\n                                      \"AdmissionNo\",\n                                      \"First Name\",\n                                      \"Gender\",\n                                      \"DOB\",\n                                      \"Course\",\n                                      \"Father's Name\",\n                                      \"Father's Mobile\",\n                                      \"District\",\n                                      \"House Name\",\n                                      \"Email\",\n                                      \"Actions\",\n                                    ]}\n                                    tableData={WaitData}\n                                    setEdit={setEdit1}\n                                    setDelete={setDelete}\n                                    loading={loading}\n                                  />\n                                )}\n                              </LoadingOverlay>\n                            </CardBody>\n                          </Card>\n                        </GridItem>\n                      </GridContainer>\n                    </span>\n                  ),\n                },\n                {\n                  tabButton: \"Accepted\",\n                  tabContent: (\n                    <span>\n                      <GridContainer>\n                        <GridItem xs={12} sm={12} md={12}>\n                          <Card>\n                            <CardHeader color=\"info\">\n                              <h4 className={classes.cardTitleWhite}>\n                                List Of Admitted entries\n                              </h4>\n                              <p className={classes.cardCategoryWhite}>\n                                Admissions with status Admitted will be listed\n                                below\n                              </p>\n                            </CardHeader>\n                            <CardBody>\n                              <LoadingOverlay\n                                active={deleting}\n                                spinner\n                                text=\"Please Wait..\"\n                              >\n                                {empty2 ? (\n                                  <p>empty</p>\n                                ) : (\n                                  <Table\n                                    tableHeaderColor=\"info\"\n                                    tableHead={[\n                                      \"\",\n                                      \"Id\",\n                                      \"AdmissionNo\",\n                                      \"First Name\",\n                                      \"Gender\",\n                                      \"DOB\",\n                                      \"Course\",\n                                      \"Father's Name\",\n                                      \"Father's Mobile\",\n                                      \"District\",\n                                      \"House Name\",\n                                      \"Email\",\n                                      \"Actions\",\n                                    ]}\n                                    tableData={AdmData}\n                                    setEdit={setEdit2}\n                                    setDelete={setDelete}\n                                    loading={loading}\n                                  />\n                                )}\n                              </LoadingOverlay>\n                            </CardBody>\n                          </Card>\n                        </GridItem>\n                      </GridContainer>\n                    </span>\n                  ),\n                },\n              ]}\n            />\n            {pagination ? (\n              <Pagination\n                setPageIndex={setPageIndex}\n                pageIndex={pageIndex}\n                className={\n                  classes.textCenter + \" \" + classes.justifyContentCenter\n                }\n                pages={[\n                  { text: \"Previous\" },\n                  { active: true, text: \"1\" },\n\n                  { text: \"Next\" },\n                ]}\n                color=\"primary\"\n              />\n            ) : (\n              <></>\n            )}\n          </GridItem>\n        </GridContainer>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function EmptyTable() {\n  const classes = useStyles();\n  return <div className={classes.tableResponsive}>Empty Table</div>;\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Domain } from \"Domain\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport axios from \"axios\";\nimport Danger from \"components/Typography/Danger\";\nimport LoadingOverlay from \"react-loading-overlay\";\n// import ImageUpload from \"components/CustomUpload/ImageUpload.js\";\n\nimport AttachFile from \"@material-ui/icons/AttachFile\";\nimport CustomFileInput from \"components/CustomFileInput/CustomFileInput.js\";\nimport EmptyTable from \"components/EmptyTable\";\nimport Pagination from \"components/Pagination/Pagination\";\n// import { data } from \"./data.json\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function Clubs() {\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [events, setEvents] = React.useState([]);\n  const [files, setFiles] = React.useState(null);\n  const [validated, setValidated] = React.useState(true);\n  const [uploaded, setUploaded] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  const [saving, setSaving] = React.useState(false);\n\n  const Clubsdata = events.map((d) => ({\n    Id: d.Id,\n    Name: d.Name,\n    Link: d.Link,\n    StaffId: d.StaffId,\n    Image: d.Image,\n    Description: d.Description,\n  }));\n\n  //Saved Notification trigger\n  const showSavedNotification = () => {\n    if (!saved) {\n      setSaved(true);\n      setTimeout(function () {\n        setSaved(false);\n      }, 3000);\n    }\n  };\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n  //Form Data\n  const [data, setData] = React.useState({\n    Id: 0,\n    Name: \"\",\n    Link: \"\",\n    StaffId: \"\",\n    Status: \"Created\",\n    Image: \"\",\n    Description: \"\",\n  });\n\n  //PassData for getAll API\n  let passData = {\n    PageIndex: 0,\n    PageSize: 10,\n  };\n\n  //PaddData for Delete a Row\n  let passDelete = {\n    Id: deletee,\n    DeletedBy: 2,\n  };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n  //Function to handle Data input\n  function HandleData(e) {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n  function HandleClear() {\n    setData({\n      Id: 0,\n      Name: \"\",\n      Link: \"\",\n      StaffId: \"\",\n      Status: \"Created\",\n      Image: \"\",\n      Description: \"\",\n    });\n  }\n  //Function for Validating fields\n  function ValidateFields() {\n    if (data.Name == \"\") {\n      return false;\n    } else if (data.Link == \"\") {\n      return false;\n    } else if (data.StaffId == \"\") {\n      return false;\n    } else if (data.Image == \"\") {\n      return false;\n    } else if (data.Description == \"\") {\n      return false;\n    } else return true;\n  }\n  //function to upload\n  function UploadImage() {\n    if (files != null) {\n      setValidated(true);\n      setSaving(true);\n      let form_data = new FormData();\n      form_data.append(\"File\", files[0]);\n      let url = Domain + \"/api/Uploads/File/\";\n      axios\n        .post(url, form_data, {\n          headers: {\n            \"content-type\": \"multipart/form-data\",\n          },\n        })\n        .then((res) => {\n          if (res.data.Success) {\n            data.Image = res.data.Data[0];\n            setUploaded(true);\n            HandleSave();\n          } else {\n            setUploaded(false);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setUploaded(false);\n        });\n    } else {\n      setValidated(false);\n    }\n  }\n\n  //Function to save Data\n  function HandleSave() {\n    if (ValidateFields()) {\n      setValidated(true);\n      fetch(Domain + \"/api/Admin/CreateClubs/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setData({\n              Id: 0,\n              Name: \"\",\n              Link: \"\",\n              StaffId: \"\",\n              Status: \"Created\",\n              Image: \"\",\n              Description: \"\",\n            });\n            setEmpty(false);\n            showSavedNotification();\n            setSaving(false);\n          } else {\n            console.log(\"Error in insertion\");\n          }\n        });\n    } else {\n      setValidated(false);\n    }\n    setUploaded(false);\n  }\n\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n    fetch(Domain + \"/api/Admin/GetAllClubs/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length > 2) setPagination(true);\n      });\n  }, [pageIndex]);\n\n  useEffect(() => {\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Admin/GetAllClubs/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n      });\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      setDeleting(true);\n      fetch(Domain + \"/api/Admin/DeleteClubs/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passDelete),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setDelete([]);\n            showDeletedNotification();\n            setDeleting(false);\n          }\n        });\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Admin/GetClubsById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit([]);\n            setData(json.Data);\n            console.log(json.Data);\n          }\n        });\n    }\n  }, [deletee, edit, saved]);\n\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Club Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Club Deleted Successfully\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n      <LoadingOverlay active={saving} spinner text=\"Saving Please Wait..\">\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <Card>\n              <form>\n                <CardHeader color=\"info\">\n                  <h4 className={classes.cardTitleWhite}>Add New Club</h4>\n                  <p className={classes.cardCategoryWhite}>\n                    Enter the Club details below and hit Save\n                  </p>\n                </CardHeader>\n\n                <CardBody>\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Name}\n                        labelText=\"Name\"\n                        id=\"Name\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={3}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Link}\n                        labelText=\"Link\"\n                        id=\"Link\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={3}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.StaffId}\n                        labelText=\"Staff Id\"\n                        id=\"StaffId\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                  </GridContainer>\n\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Description}\n                        labelText=\"Enter a description about the club..\"\n                        id=\"Description\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          multiline: true,\n                          rows: 5,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={5} md={5}>\n                      {\" \"}\n                      <CustomFileInput\n                        setFiles={setFiles}\n                        saved={uploaded}\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          placeholder: \"Click here to upload an image\",\n                        }}\n                        endButton={{\n                          buttonProps: {\n                            round: true,\n                            color: \"info\",\n                            justIcon: true,\n                            filebutton: true,\n                          },\n                          icon: <AttachFile />,\n                        }}\n                      />\n                      {validated ? (\n                        <></>\n                      ) : (\n                        <Danger>Please enter all the details to save</Danger>\n                      )}\n                    </GridItem>\n                  </GridContainer>\n                </CardBody>\n                <CardFooter>\n                  <Button onClick={HandleClear} color=\"defualt\">\n                    Clear\n                  </Button>\n                  <Button onClick={UploadImage} color=\"info\">\n                    Save\n                  </Button>\n                </CardFooter>\n              </form>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      </LoadingOverlay>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>List Of All Clubs</h4>\n              <p className={classes.cardCategoryWhite}>\n                All Clubs are listed below, you can delete or edit them.\n              </p>\n            </CardHeader>\n            <CardBody>\n              <LoadingOverlay active={deleting} spinner text=\"Please Wait..\">\n                {empty ? (\n                  <EmptyTable />\n                ) : (\n                  <Table\n                    tableHeaderColor=\"info\"\n                    tableHead={[\n                      \"\",\n                      \"ID\",\n                      \"Name\",\n                      \"Link\",\n                      \"StaffId\",\n                      // \"Status\",\n                      \"Image\",\n                      \"Description\",\n                      // \"Created By\",\n                      // \"Created Date\",\n                      // \"Modified By\",\n                      // \"Modified Date\",\n                      // \"Deteled By\",\n                      // \"Deleted Date\",\n                      \"Actions\",\n                    ]}\n                    tableData={Clubsdata}\n                    setEdit={setEdit}\n                    setDelete={setDelete}\n                    loading={loading}\n                  />\n                )}\n              </LoadingOverlay>\n            </CardBody>\n          </Card>\n          {pagination ? (\n            <Pagination\n              setPageIndex={setPageIndex}\n              pageIndex={pageIndex}\n              className={\n                classes.textCenter + \" \" + classes.justifyContentCenter\n              }\n              pages={[\n                { text: \"Previous\" },\n                { active: true, text: \"1\" },\n\n                { text: \"Next\" },\n              ]}\n              color=\"info\"\n            />\n          ) : (\n            <></>\n          )}\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Domain } from \"Domain\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport axios from \"axios\";\nimport Danger from \"components/Typography/Danger\";\nimport LoadingOverlay from \"react-loading-overlay\";\n// import ImageUpload from \"components/CustomUpload/ImageUpload.js\";\n\nimport AttachFile from \"@material-ui/icons/AttachFile\";\nimport CustomFileInput from \"components/CustomFileInput/CustomFileInput.js\";\nimport Pagination from \"components/Pagination/Pagination\";\n// import { data } from \"./data.json\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function Facilities() {\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [events, setEvents] = React.useState([]);\n  const [files, setFiles] = React.useState(null);\n  const [validated, setValidated] = React.useState(true);\n  const [uploaded, setUploaded] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  const [saving, setSaving] = React.useState(false);\n  const [errors, setError] = React.useState(false);\n\n  const Facilitiesdata = events.map((d) => ({\n    Id: d.Id,\n    Name: d.Name,\n    Link: d.Link,\n    StaffId: d.StaffId,\n    Image: d.Image,\n    Description: d.Description,\n  }));\n\n  //Saved Notification trigger\n  const showSavedNotification = () => {\n    if (!saved) {\n      setSaved(true);\n      setTimeout(function () {\n        setSaved(false);\n      }, 3000);\n    }\n  };\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n  //Error Notification Trigger\n  const showErrorNotification = () => {\n    if (!errors) {\n      setError(true);\n      setTimeout(function () {\n        setError(false);\n      }, 3000);\n    }\n  };\n  //Form Data\n  const [data, setData] = React.useState({\n    Id: 0,\n    Name: \"\",\n    Link: \"\",\n    StaffId: \"\",\n    Status: \"Created\",\n    Image: \"\",\n    Description: \"\",\n  });\n\n  //PassData for getAll API\n  let passData = {\n    PageIndex: 0,\n    PageSize: 10,\n  };\n\n  //PaddData for Delete a Row\n  let passDelete = {\n    Id: deletee,\n    DeletedBy: 2,\n  };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n  //Function to handle Data input\n  function HandleData(e) {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n  function HandleClear() {\n    setData({\n      Id: 0,\n      Name: \"\",\n      Link: \"\",\n      StaffId: \"\",\n      Status: \"Created\",\n      Image: \"\",\n      Description: \"\",\n    });\n  }\n  //Function for Validating fields\n  function ValidateFields() {\n    if (data.Name == \"\") {\n      return false;\n    } else if (data.Link == \"\") {\n      return false;\n    } else if (data.StaffId == \"\") {\n      return false;\n    } else if (data.Image == \"\") {\n      return false;\n    } else if (data.Description == \"\") {\n      return false;\n    } else return true;\n  }\n  //function to upload\n  function UploadImage() {\n    if (files != null) {\n      setValidated(true);\n      setSaving(true);\n      let form_data = new FormData();\n      form_data.append(\"File\", files[0]);\n      let url = Domain + \"/api/Uploads/File/\";\n      axios\n        .post(url, form_data, {\n          headers: {\n            \"content-type\": \"multipart/form-data\",\n          },\n        })\n        .then((res) => {\n          if (res.data.Success) {\n            data.Image = res.data.Data[0];\n            setUploaded(true);\n            console.log(data);\n            HandleSave();\n          } else {\n            setUploaded(false);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setUploaded(false);\n        });\n    } else {\n      setValidated(false);\n    }\n  }\n\n  //Function to save Data\n  function HandleSave() {\n    if (ValidateFields()) {\n      setValidated(true);\n      fetch(Domain + \"/api/Admin/CreateFacilities/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setData({\n              Id: 0,\n              Name: \"\",\n              Link: \"\",\n              StaffId: \"\",\n              Status: \"Created\",\n              Image: \"\",\n              Description: \"\",\n            });\n            setEmpty(false);\n            showSavedNotification();\n            setSaving(false);\n          } else {\n            console.log(\"Error in insertion\");\n            setSaving(false);\n            showErrorNotification();\n          }\n        });\n    } else {\n      setValidated(false);\n    }\n    setUploaded(false);\n  }\n\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n    fetch(Domain + \"/api/Admin/GetAllFacilities/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length > 2) setPagination(true);\n      });\n  }, [pageIndex]);\n\n  useEffect(() => {\n    console.log(\"componentDidMount\");\n    console.log(\"Detele\" + deletee + \" edit\" + edit);\n\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Admin/GetAllFacilities/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n      });\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      setDeleting(true);\n      fetch(Domain + \"/api/Admin/DeleteFacilities/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passDelete),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setDelete([]);\n            showDeletedNotification();\n            setDeleting(false);\n          }\n        });\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Admin/GetFacilitiesById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit([]);\n            setData(json.Data);\n            console.log(json.Data);\n          }\n        });\n    }\n  }, [deletee, edit, saved]);\n\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Facilities Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Facilities Deleted Successfully\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Error! Please Try Again\"\n        open={errors}\n        closeNotification={() => setError(false)}\n        close\n      />\n      <LoadingOverlay active={saving} spinner text=\"Saving Please wait...\">\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <Card>\n              <form>\n                <CardHeader color=\"info\">\n                  <h4 className={classes.cardTitleWhite}>Add New Facilities</h4>\n                  <p className={classes.cardCategoryWhite}>\n                    Enter the Facilities details below and hit Save\n                  </p>\n                </CardHeader>\n\n                <CardBody>\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={5}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Name}\n                        labelText=\"Name\"\n                        id=\"Name\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={3}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Link}\n                        labelText=\"Link\"\n                        id=\"Link\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={3}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.StaffId}\n                        labelText=\"Staff Id\"\n                        id=\"StaffId\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                  </GridContainer>\n\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Description}\n                        labelText=\"Enter a description about the facilities..\"\n                        id=\"Description\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          multiline: true,\n                          rows: 5,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={5} md={5}>\n                      {\" \"}\n                      <CustomFileInput\n                        setFiles={setFiles}\n                        saved={uploaded}\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          placeholder: \"Click here to upload an image\",\n                        }}\n                        endButton={{\n                          buttonProps: {\n                            round: true,\n                            color: \"info\",\n                            justIcon: true,\n                            filebutton: true,\n                          },\n                          icon: <AttachFile />,\n                        }}\n                      />\n                      {validated ? (\n                        <></>\n                      ) : (\n                        <Danger>Please enter all the details to save</Danger>\n                      )}\n                    </GridItem>\n                  </GridContainer>\n                </CardBody>\n                <CardFooter>\n                  <Button onClick={HandleClear} color=\"defualt\">\n                    Clear\n                  </Button>\n                  <Button onClick={UploadImage} color=\"info\">\n                    Save\n                  </Button>\n                </CardFooter>\n              </form>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      </LoadingOverlay>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>List Of All Facilities</h4>\n              <p className={classes.cardCategoryWhite}>\n                All facilities are listed below, you can delete or edit them.\n              </p>\n            </CardHeader>\n            <CardBody>\n              <LoadingOverlay active={deleting} spinner text=\"Please Wait..\">\n                {empty ? (\n                  <p>empty</p>\n                ) : (\n                  <Table\n                    tableHeaderColor=\"info\"\n                    tableHead={[\n                      \"\",\n                      \"ID\",\n                      \"Name\",\n                      \"Link\",\n                      \"StaffId\",\n                      // \"Status\",\n                      \"Image\",\n                      \"Description\",\n                      // \"Created By\",\n                      // \"Created Date\",\n                      // \"Modified By\",\n                      // \"Modified Date\",\n                      // \"Deteled By\",\n                      // \"Deleted Date\",\n                      \"Actions\",\n                    ]}\n                    tableData={Facilitiesdata}\n                    setEdit={setEdit}\n                    setDelete={setDelete}\n                    loading={loading}\n                  />\n                )}\n              </LoadingOverlay>\n            </CardBody>\n          </Card>\n          {pagination ? (\n            <Pagination\n              setPageIndex={setPageIndex}\n              pageIndex={pageIndex}\n              className={\n                classes.textCenter + \" \" + classes.justifyContentCenter\n              }\n              pages={[\n                { text: \"Previous\" },\n                { active: true, text: \"1\" },\n\n                { text: \"Next\" },\n              ]}\n              color=\"info\"\n            />\n          ) : (\n            <></>\n          )}\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Domain } from \"Domain\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport axios from \"axios\";\nimport Danger from \"components/Typography/Danger\";\nimport LoadingOverlay from \"react-loading-overlay\";\n// import ImageUpload from \"components/CustomUpload/ImageUpload.js\";\n\nimport AttachFile from \"@material-ui/icons/AttachFile\";\nimport CustomFileInput from \"components/CustomFileInput/CustomFileInput.js\";\nimport Pagination from \"components/Pagination/Pagination\";\n// import { data } from \"./data.json\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function Management() {\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [events, setEvents] = React.useState([]);\n  const [files, setFiles] = React.useState(null);\n  const [validated, setValidated] = React.useState(true);\n  const [uploaded, setUploaded] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  const [saving, setSaving] = React.useState(false);\n\n  const Managedata = events.map((d) => ({\n    Id: d.Id,\n    Name: d.Name,\n    Post: d.Post,\n    Image: d.Image,\n    Description: d.Description,\n  }));\n\n  //Saved Notification trigger\n  const showSavedNotification = () => {\n    if (!saved) {\n      setSaved(true);\n      setTimeout(function () {\n        setSaved(false);\n      }, 3000);\n    }\n  };\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n  //Form Data\n  const [data, setData] = React.useState({\n    Id: 0,\n    Name: \"\",\n    Post: \"\",\n    Image: \"1\",\n    Status: \"Created\",\n    Description: \"\",\n  });\n\n  //PassData for getAll API\n  let passData = {\n    PageIndex: 0,\n    PageSize: 10,\n  };\n\n  //PaddData for Delete a Row\n  let passDelete = {\n    Id: deletee,\n    DeletedBy: 2,\n  };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n  //Function to handle Data input\n  function HandleData(e) {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n  function HandleClear() {\n    setData({\n      Id: 0,\n      Name: \"\",\n      Post: \"\",\n      Image: \"\",\n      Status: \"Created\",\n      Description: \"\",\n    });\n  }\n  //Function for Validating fields\n  function ValidateFields() {\n    if (data.Name == \"\") {\n      return false;\n    } else if (data.Post == \"\") {\n      return false;\n    } else if (data.Image == \"\") {\n      return false;\n    } else if (data.Description == \"\") {\n      return false;\n    } else return true;\n  }\n  //function to upload\n  function UploadImage() {\n    if (files != null) {\n      setValidated(true);\n      setSaving(true);\n      let form_data = new FormData();\n      form_data.append(\"File\", files[0]);\n      let url = Domain + \"/api/Uploads/File/\";\n      axios\n        .post(url, form_data, {\n          headers: {\n            \"content-type\": \"multipart/form-data\",\n          },\n        })\n        .then((res) => {\n          if (res.data.Success) {\n            data.Image = res.data.Data[0];\n            setUploaded(true);\n            HandleSave();\n          } else {\n            setUploaded(false);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setUploaded(false);\n        });\n    } else {\n      setValidated(false);\n    }\n  }\n\n  //Function to save Data\n  function HandleSave() {\n    if (ValidateFields()) {\n      setValidated(true);\n      fetch(Domain + \"/api/Admin/CreateManagement/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setData({\n              Id: 0,\n              Name: \"\",\n              Post: \"\",\n              Image: \"1\",\n              Status: \"Created\",\n              Description: \"\",\n            });\n            setEmpty(false);\n            showSavedNotification();\n            setSaving(false);\n          } else {\n            console.log(\"Error in insertion\");\n            setSaving(false);\n          }\n        });\n    } else {\n      setValidated(false);\n    }\n    setUploaded(false);\n  }\n\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n    fetch(Domain + \"/api/Admin/GetAllManagement/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length > 2) setPagination(true);\n      });\n  }, [pageIndex]);\n\n  useEffect(() => {\n    console.log(\"componentDidMount\");\n    console.log(\"Detele\" + deletee + \" edit\" + edit);\n\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Admin/GetAllManagement/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n      });\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      setDeleting(true);\n      fetch(Domain + \"/api/Admin/DeleteManagement/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passDelete),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setDelete([]);\n            showDeletedNotification();\n            setDeleting(false);\n          }\n        });\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Admin/GetManagementById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit([]);\n            setData(json.Data);\n            console.log(json.Data);\n          }\n        });\n    }\n  }, [deletee, edit, saved]);\n\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Management Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Management Deleted Successfully\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n      <LoadingOverlay active={saving} spinner text=\"Saving Please Wait..\">\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <Card>\n              <form>\n                <CardHeader color=\"info\">\n                  <h4 className={classes.cardTitleWhite}>Add New Management</h4>\n                  <p className={classes.cardCategoryWhite}>\n                    Enter the Management details below and hit Save\n                  </p>\n                </CardHeader>\n\n                <CardBody>\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Name}\n                        labelText=\"Name\"\n                        id=\"Name\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Post}\n                        labelText=\"Post\"\n                        id=\"Post\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                  </GridContainer>\n\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Description}\n                        labelText=\"Enter a description about the management..\"\n                        id=\"Description\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          multiline: true,\n                          rows: 5,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={5} md={5}>\n                      {\" \"}\n                      <CustomFileInput\n                        setFiles={setFiles}\n                        saved={uploaded}\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          placeholder: \"Click here to upload an image\",\n                        }}\n                        endButton={{\n                          buttonProps: {\n                            round: true,\n                            color: \"info\",\n                            justIcon: true,\n                            filebutton: true,\n                          },\n                          icon: <AttachFile />,\n                        }}\n                      />\n                      {validated ? (\n                        <></>\n                      ) : (\n                        <Danger>Please enter all the details to save</Danger>\n                      )}\n                    </GridItem>\n                  </GridContainer>\n                </CardBody>\n                <CardFooter>\n                  <Button onClick={HandleClear} color=\"defualt\">\n                    Clear\n                  </Button>\n                  <Button onClick={UploadImage} color=\"info\">\n                    Save\n                  </Button>\n                </CardFooter>\n              </form>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      </LoadingOverlay>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>\n                List Of All Managements\n              </h4>\n              <p className={classes.cardCategoryWhite}>\n                All managements are listed below, you can delete or edit them.\n              </p>\n            </CardHeader>\n            <CardBody>\n              <LoadingOverlay active={deleting} spinner text=\"Please Wait..\">\n                {empty ? (\n                  <p>empty</p>\n                ) : (\n                  <Table\n                    tableHeaderColor=\"info\"\n                    tableHead={[\n                      \"\",\n                      \"Id\",\n                      \"Name\",\n                      \"Post\",\n                      // \"Status\",\n                      \"Image\",\n                      \"Description\",\n                      // \"Created By\",\n                      // \"Created Date\",\n                      // \"Modified By\",\n                      // \"Modified Date\",\n                      // \"Deteled By\",\n                      // \"Deleted Date\",\n                      \"Actions\",\n                    ]}\n                    tableData={Managedata}\n                    setEdit={setEdit}\n                    setDelete={setDelete}\n                    loading={loading}\n                  />\n                )}\n              </LoadingOverlay>\n            </CardBody>\n          </Card>\n          {pagination ? (\n            <Pagination\n              setPageIndex={setPageIndex}\n              pageIndex={pageIndex}\n              className={\n                classes.textCenter + \" \" + classes.justifyContentCenter\n              }\n              pages={[\n                { text: \"Previous\" },\n                { active: true, text: \"1\" },\n\n                { text: \"Next\" },\n              ]}\n              color=\"info\"\n            />\n          ) : (\n            <></>\n          )}\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Domain } from \"Domain\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport axios from \"axios\";\nimport Danger from \"components/Typography/Danger\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport Pagination from \"components/Pagination/Pagination\";\n// import ImageUpload from \"components/CustomUpload/ImageUpload.js\";\n\nimport AttachFile from \"@material-ui/icons/AttachFile\";\nimport CustomFileInput from \"components/CustomFileInput/CustomFileInput.js\";\nimport SingleSelect from \"components/SingleSelect\";\nimport EmptyTable from \"components/EmptyTable\";\n\n// import { data } from \"./data.json\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardCategoryGrey: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgb(128,128,128)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n      fontWeight: \"500\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardStyle: {\n    padding: \"10px\",\n    paddingRight: \"0\",\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function Staffs() {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    document.body.scrollTop = 0;\n  });\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [events, setEvents] = React.useState([]);\n  const [files, setFiles] = React.useState(null);\n  const [validated, setValidated] = React.useState(true);\n  const [uploaded, setUploaded] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  const [departments, setDepartments] = React.useState([]);\n  const [departmentValues, setDepartmentValues] = React.useState({\n    Id: null,\n    Label: \"\",\n  });\n  const [usertype, setUsertype] = React.useState({\n    Id: null,\n    Label: \"\",\n  });\n  const departmentList = departments.map((d) => ({\n    value: d.Id,\n    label: d.DepartmentName,\n  }));\n  const usertypeList = [\n    { value: 1, label: \"HOD\" },\n    { value: 2, label: \"Staff\" },\n  ];\n\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n    fetch(Domain + \"/api/Staff/GetAllStaffs/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        //   if (json.Data.length == 0) setEmpty(true);\n        //   setLoading(false);\n        // });\n        if (json.Data.length > 2) setPagination(true);\n        // if (json.Data.length == 0) setEmpty(true);\n        // setLoading(false);\n      });\n  }, [pageIndex]);\n\n  console.log(departments);\n  //Saved Notification trigger\n  const showSavedNotification = () => {\n    if (!saved) {\n      setSaved(true);\n      setTimeout(function () {\n        setSaved(false);\n      }, 3000);\n    }\n  };\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n  //Form Data\n  const [data, setData] = React.useState({\n    Id: 0,\n    DepartmentId: \"\",\n    DepartmentName: \"\",\n    FullName: \"\",\n    Mobile: \"\",\n    Email: \"\",\n    Gender: \"\",\n    DOB: \"\",\n    Password: \"\",\n    Qualifications: \"\",\n    AreaOfInterest: \"\",\n    Achievements: \"\",\n    Status: \"\",\n    AddressType: \"\",\n    Country: \"\",\n    State: \"\",\n    District: \"\",\n    City: \"\",\n    Street: \"\",\n    HouseName: \"\",\n    PostOffice: \"\",\n    PostalCode: \"\",\n    UserType: \"\",\n    Image: \"\",\n  });\n\n  //PassData for getAll API\n  let passData = {\n    PageIndex: 0,\n    PageSize: 10,\n  };\n  let passData1 = {\n    PageIndex: 0,\n    PageSize: 0,\n  };\n  //PaddData for Delete a Row\n  let passDelete = {\n    Id: deletee,\n    DeletedBy: 2,\n  };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n  //Function to handle Data input\n  function HandleData(e) {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n  function HandleClear() {\n    setData({\n      Id: 0,\n      DepartmentId: \"\",\n      DepartmentName: \"\",\n      FullName: \"\",\n      Mobile: \"\",\n      Email: \"\",\n      Gender: \"\",\n      DOB: \"\",\n      Password: \"\",\n      Qualifications: \"\",\n      AreaOfInterest: \"\",\n      Achievements: \"\",\n      Status: \"\",\n      AddressType: \"\",\n      Country: \"\",\n      State: \"\",\n      District: \"\",\n      City: \"\",\n      Street: \"\",\n      HouseName: \"\",\n      PostOffice: \"\",\n      PostalCode: \"\",\n      UserType: \"\",\n      Image: \"\",\n    });\n  }\n  //Function for Validating fields\n  function ValidateFields() {\n    if (data.DepartmentId == \"\") {\n      return false;\n    } else if (data.DepartmentName == \"\") {\n      return false;\n    } else if (data.FullName == \"\") {\n      return false;\n    } else if (data.Mobile == \"\") {\n      return false;\n    } else if (data.Email == \"\") {\n      return false;\n    } else if (data.Gender == \"\") {\n      return false;\n    } else if (data.DOB == \"\") {\n      return false;\n    } else if (data.Password == \"\") {\n      return false;\n    } else if (data.Qualifications == \"\") {\n      return false;\n    } else if (data.AreaOfInterest == \"\") {\n      return false;\n    } else if (data.Achievements == \"\") {\n      return false;\n    } else if (data.AddressType == \"\") {\n      return false;\n    } else if (data.Country == \"\") {\n      return false;\n    } else if (data.State == \"\") {\n      return false;\n    } else if (data.District == \"\") {\n      return false;\n    } else if (data.City == \"\") {\n      return false;\n    } else if (data.Street == \"\") {\n      return false;\n    } else if (data.HouseName == \"\") {\n      return false;\n    } else if (data.PostOffice == \"\") {\n      return false;\n    } else if (data.PostalCode == \"\") {\n      return false;\n    } else if (data.UserType == \"\") {\n      return false;\n    } else if (data.Image == \"\") {\n      return false;\n    } else return true;\n  }\n  //function to upload\n  function UploadImage() {\n    if (files != null) {\n      setValidated(true);\n      let form_data = new FormData();\n      form_data.append(\"File\", files[0]);\n      let url = Domain + \"/api/Uploads/File/\";\n      axios\n        .post(url, form_data, {\n          headers: {\n            \"content-type\": \"multipart/form-data\",\n          },\n        })\n        .then((res) => {\n          if (res.data.Success) {\n            data.Image = res.data.Data[0];\n            setUploaded(true);\n            HandleSave();\n          } else {\n            setUploaded(false);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setUploaded(false);\n        });\n    } else {\n      setValidated(false);\n    }\n  }\n\n  //Function to save Data\n  function HandleSave() {\n    if (ValidateFields()) {\n      setValidated(true);\n      fetch(Domain + \"/api/Staff/CreateStaff/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          console.log(json);\n          if (json.Success) {\n            setData({\n              Id: 0,\n              DepartmentId: \"\",\n              DepartmentName: \"\",\n              FullName: \"\",\n              Mobile: \"\",\n              Email: \"\",\n              Gender: \"\",\n              DOB: \"\",\n              Password: \"\",\n              Qualifications: \"\",\n              AreaOfInterest: \"\",\n              Achievements: \"\",\n              Status: \"\",\n              AddressType: \"\",\n              Country: \"\",\n              State: \"\",\n              District: \"\",\n              City: \"\",\n              Street: \"\",\n              HouseName: \"\",\n              PostOffice: \"\",\n              PostalCode: \"\",\n              UserType: \"\",\n              Image: \"\",\n            });\n            setEmpty(false);\n            showSavedNotification();\n          } else {\n            console.log(\"Error in insertion\");\n          }\n        });\n    } else {\n      setValidated(false);\n    }\n    setUploaded(false);\n  }\n  //==============================UseEffect=================================================\n  useEffect(() => {\n    setData((data) => ({\n      ...data,\n      DepartmentId: departmentValues.Id,\n      DepartmentName: departmentValues.Label,\n      UserType: usertype.Label,\n    }));\n    // console.log(\"data:\", data);\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Admin/GetAllDepartments/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData1),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setDepartments(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n      });\n\n    // useEffect(() => {\n    // let passData = {\n    //   PageIndex: pageIndex,\n    //   PageSize: 10,\n    // };\n\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Staff/GetAllStaffs/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n      });\n    // if (json.Data.length > 2) setPagination(true);\n    // // if (json.Data.length == 0) setEmpty(true);\n    // setLoading(false);\n    // });\n    // }, [pageIndex]);\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      setDeleting(true);\n      fetch(Domain + \"/api/Staff/DeleteStaffs/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passDelete),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setDelete([]);\n            showDeletedNotification();\n            setDeleting(false);\n          }\n        });\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Staff/GetStaffById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit([]);\n            setData(json.Data);\n            console.log(json.Data);\n          }\n        });\n    }\n  }, [deletee, edit, saved, departmentValues.Id, usertype.Id]);\n\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Staff Details Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Staff Details Deleted Successfully\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <form>\n              <CardHeader color=\"info\">\n                <h4 className={classes.cardTitleWhite}>Staff Details</h4>\n                <p className={classes.cardCategoryWhite}>Details</p>\n              </CardHeader>\n\n              <CardBody>\n                <Card className={classes.cardStyle}>\n                  <p className={classes.cardCategoryGrey}>Department Details</p>\n                  <br />\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <SingleSelect\n                        noOptionMessage=\"Create Department Details first\"\n                        placeholder=\"Select Department\"\n                        Options={departmentList}\n                        setValue={setDepartmentValues}\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                  </GridContainer>\n                </Card>\n                <Card className={classes.cardStyle}>\n                  <p className={classes.cardCategoryGrey}>Login Details</p>\n\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <SingleSelect\n                        placeholder=\"Select UserType\"\n                        Options={usertypeList}\n                        setValue={setUsertype}\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.FullName}\n                        labelText=\"Full Name\"\n                        id=\"FullName\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Mobile}\n                        labelText=\"Mobile\"\n                        id=\"Mobile\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Email}\n                        labelText=\"Email\"\n                        id=\"Email\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        type=\"password\"\n                        onChange={(e) => HandleData(e)}\n                        value={data.Password}\n                        labelText=\"Password\"\n                        id=\"Password\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                  </GridContainer>\n                </Card>\n                <p className={classes.cardCategoryGrey}>Personal Details</p>\n\n                <GridContainer>\n                  <GridItem xs={12} sm={12} md={4}>\n                    <CustomInput\n                      onChange={(e) => HandleData(e)}\n                      value={data.Gender}\n                      labelText=\"Gender\"\n                      id=\"Gender\"\n                      formControlProps={{\n                        fullWidth: true,\n                      }}\n                    />\n                  </GridItem>\n                  <GridItem xs={12} sm={12} md={4}>\n                    <CustomInput\n                      onChange={(e) => HandleData(e)}\n                      value={data.DOB}\n                      labelText=\"DOB\"\n                      id=\"DOB\"\n                      formControlProps={{\n                        fullWidth: true,\n                      }}\n                    />\n                  </GridItem>\n\n                  <GridItem xs={12} sm={12} md={4}>\n                    <CustomInput\n                      onChange={(e) => HandleData(e)}\n                      value={data.Qualifications}\n                      labelText=\"Qualifications\"\n                      id=\"Qualifications\"\n                      formControlProps={{\n                        fullWidth: true,\n                      }}\n                    />\n                  </GridItem>\n                  <GridItem xs={12} sm={12} md={4}>\n                    <CustomInput\n                      onChange={(e) => HandleData(e)}\n                      value={data.AreaOfInterest}\n                      labelText=\"AreaOfInterest\"\n                      id=\"AreaOfInterest\"\n                      formControlProps={{\n                        fullWidth: true,\n                      }}\n                    />\n                  </GridItem>\n                  <GridItem xs={12} sm={12} md={4}>\n                    <CustomInput\n                      onChange={(e) => HandleData(e)}\n                      value={data.Achievements}\n                      labelText=\"Achievements\"\n                      id=\"Achievements\"\n                      formControlProps={{\n                        fullWidth: true,\n                      }}\n                    />\n                  </GridItem>\n                  <GridItem xs={12} sm={12} md={4}>\n                    <CustomInput\n                      onChange={(e) => HandleData(e)}\n                      value={data.AddressType}\n                      labelText=\"AddressType\"\n                      id=\"AddressType\"\n                      formControlProps={{\n                        fullWidth: true,\n                      }}\n                    />\n                  </GridItem>\n                  <GridItem xs={12} sm={12} md={4}>\n                    <CustomInput\n                      onChange={(e) => HandleData(e)}\n                      value={data.Country}\n                      labelText=\"Country\"\n                      id=\"Country\"\n                      formControlProps={{\n                        fullWidth: true,\n                      }}\n                    />\n                  </GridItem>\n                  <GridItem xs={12} sm={12} md={4}>\n                    <CustomInput\n                      onChange={(e) => HandleData(e)}\n                      value={data.State}\n                      labelText=\"State\"\n                      id=\"State\"\n                      formControlProps={{\n                        fullWidth: true,\n                      }}\n                    />\n                  </GridItem>\n                  <GridItem xs={12} sm={12} md={4}>\n                    <CustomInput\n                      onChange={(e) => HandleData(e)}\n                      value={data.District}\n                      labelText=\"District\"\n                      id=\"District\"\n                      formControlProps={{\n                        fullWidth: true,\n                      }}\n                    />\n                  </GridItem>\n                  <GridItem xs={12} sm={12} md={4}>\n                    <CustomInput\n                      onChange={(e) => HandleData(e)}\n                      value={data.City}\n                      labelText=\"City\"\n                      id=\"City\"\n                      formControlProps={{\n                        fullWidth: true,\n                      }}\n                    />\n                  </GridItem>\n                  <GridItem xs={12} sm={12} md={4}>\n                    <CustomInput\n                      onChange={(e) => HandleData(e)}\n                      value={data.Street}\n                      labelText=\"Street\"\n                      id=\"Street\"\n                      formControlProps={{\n                        fullWidth: true,\n                      }}\n                    />\n                  </GridItem>\n                  <GridItem xs={12} sm={12} md={4}>\n                    <CustomInput\n                      onChange={(e) => HandleData(e)}\n                      value={data.HouseName}\n                      labelText=\"HouseName\"\n                      id=\"HouseName\"\n                      formControlProps={{\n                        fullWidth: true,\n                      }}\n                    />\n                  </GridItem>\n                  <GridItem xs={12} sm={12} md={4}>\n                    <CustomInput\n                      onChange={(e) => HandleData(e)}\n                      value={data.PostOffice}\n                      labelText=\"PostOffice\"\n                      id=\"PostOffice\"\n                      formControlProps={{\n                        fullWidth: true,\n                      }}\n                    />\n                  </GridItem>\n                  <GridItem xs={12} sm={12} md={4}>\n                    <CustomInput\n                      onChange={(e) => HandleData(e)}\n                      value={data.PostalCode}\n                      labelText=\"PostalCode\"\n                      id=\"PostalCode\"\n                      formControlProps={{\n                        fullWidth: true,\n                      }}\n                    />\n                  </GridItem>\n\n                  <GridItem xs={12} sm={5} md={4}>\n                    {\" \"}\n                    <CustomFileInput\n                      setFiles={setFiles}\n                      saved={uploaded}\n                      formControlProps={{\n                        fullWidth: true,\n                      }}\n                      inputProps={{\n                        placeholder: \"Click here to upload an image\",\n                      }}\n                      endButton={{\n                        buttonProps: {\n                          round: true,\n                          color: \"info\",\n                          justIcon: true,\n                        },\n                        icon: <AttachFile />,\n                      }}\n                    />\n                    {validated ? (\n                      <></>\n                    ) : (\n                      <Danger>Please enter all the details to save</Danger>\n                    )}\n                  </GridItem>\n                </GridContainer>\n              </CardBody>\n              <CardFooter>\n                <Button onClick={HandleClear}>Clear</Button>\n                <Button onClick={UploadImage} color=\"info\">\n                  Save\n                </Button>\n              </CardFooter>\n            </form>\n          </Card>\n        </GridItem>\n      </GridContainer>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>List Of All Staffs</h4>\n              <p className={classes.cardCategoryWhite}>\n                All Staffss are listed below, you can delete or edit them.\n              </p>\n            </CardHeader>\n            <CardBody>\n              <LoadingOverlay active={deleting} spinner text=\"Please Wait..\">\n                {empty ? (\n                  <EmptyTable />\n                ) : (\n                  <Table\n                    tableHeaderColor=\"info\"\n                    tableHead={[\n                      \"\",\n                      \"Id\",\n                      \"Department\",\n                      \"Name\",\n                      \"Mobile\",\n                      \"Email\",\n                      \"Gender\",\n                      \"DOB\",\n                      \"Password\",\n                      \"Qualifications\",\n                      \"AreaOfInterest\",\n                      \"Achievements\",\n                      \"Status\",\n                      \"Address\",\n                      \"Country\",\n                      \"State\",\n                      \"District\",\n                      \"City\",\n                      \"Street\",\n                      \"HouseName\",\n                      \"PostOffice\",\n                      \"PostalCode\",\n                      \"UserType\",\n                      \"Image\",\n                      \"CreateBy\",\n                      \"CreateDate\",\n                      \"ModifiedBy\",\n                      \"ModifiedDate\",\n                      \"DeletedBy\",\n                      \"DeletedDate\",\n                      \"DepartmentId\",\n                      \"Actions\",\n                    ]}\n                    tableData={events}\n                    setEdit={setEdit}\n                    setDelete={setDelete}\n                    loading={loading}\n                  />\n                )}\n              </LoadingOverlay>\n            </CardBody>\n          </Card>\n          {pagination ? (\n            <Pagination\n              setPageIndex={setPageIndex}\n              pageIndex={pageIndex}\n              className={\n                classes.textCenter + \" \" + classes.justifyContentCenter\n              }\n              pages={[\n                { text: \"Previous\" },\n                { active: true, text: \"1\" },\n\n                { text: \"Next\" },\n              ]}\n              color=\"info\"\n            />\n          ) : (\n            <></>\n          )}\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/typographyStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Success(props) {\n  const classes = useStyles();\n  const { children } = props;\n  return (\n    <div className={classes.defaultFontStyle + \" \" + classes.successText}>\n      {children}\n    </div>\n  );\n}\n\nSuccess.propTypes = {\n  children: PropTypes.node,\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Domain } from \"Domain\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport Danger from \"components/Typography/Danger\";\nimport LoadingOverlay from \"react-loading-overlay\";\n// import ImageUpload from \"components/CustomUpload/ImageUpload.js\";\nimport SingleSelect from \"components/SingleSelect\";\nimport Success from \"components/Typography/Success\";\nimport Pagination from \"components/Pagination/Pagination\";\n// import { data } from \"./data.json\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function SendSMS() {\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [events, setEvents] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n  const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  const [validateFilter, setValidateFilter] = React.useState(true);\n  const [Courses, setCourses] = React.useState([]);\n  const [sizeOfArray, setSizeOfArray] = React.useState(null);\n  const CourseList = Courses.map((d) => ({\n    value: d.Id,\n    label: d.CourseName,\n  }));\n  //Filter Data\n  const [filterData, setFilterData] = React.useState({\n    PageIndex: 0,\n    PageSize: 10,\n    Year: \"\",\n    CourseId: \"\",\n  });\n  const [messageData, setMessageData] = React.useState({\n    Mobile: \"9605263417\",\n    Message: \"\",\n  });\n  const [CourseValues, setCourseValues] = React.useState({\n    Id: null,\n    label: \"\",\n  });\n  const Studentdata = events.map((d) => ({\n    Id: d.Id,\n    FullName: d.FullName,\n    RegistrationNo: d.RegistrationNo,\n    ClassNo: d.ClassNo,\n    AdmissionNo: d.AdmissionNo,\n    Mobile: d.Mobile,\n    Email: d.Email,\n    Course: d.Course,\n    CourseCode: d.CourseCode,\n    Gender: d.Gender,\n    DOB: d.DOB,\n    Password: d.Password,\n    GuardianName: d.GuardianName,\n    GuardianMobile: d.GuardianMobile,\n    GuardianRelation: d.GuardianRelation,\n    Image: d.Image,\n    CourseId: d.CourseId,\n  }));\n\n  //PassData for get all semesters and courses for dropdown\n  let passData1 = {\n    PageIndex: 0,\n    PageSize: 0,\n  };\n\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n\n  //Form Data\n  const [data, setData] = React.useState({\n    Id: 0,\n    FullName: \"\",\n    Mobile: \"\",\n    Email: \"\",\n    Gender: \"\",\n    DOB: \"\",\n    Password: \"\",\n    GuardianName: \"\",\n    GuardianMobile: \"\",\n    RegistrationNo: \"\",\n    ClassNo: \"\",\n    AdmissionNo: \"\",\n    CourseId: null,\n    Course: \"\",\n    CourseCode: \"\",\n    GuardianRelation: \"\",\n    Status: \"Created\",\n    Image: \"\",\n  });\n  console.log(data);\n  //PassData for getAll API\n  let passData = {\n    PageIndex: 0,\n    PageSize: 10,\n  };\n\n  //PaddData for Delete a Row\n  let passDelete = {\n    Id: deletee,\n    DeletedBy: 2,\n  };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n\n  function HandleFilterData(e) {\n    const newData = { ...filterData };\n    newData[e.target.id] = e.target.value;\n    setFilterData(newData);\n    console.log(newData);\n  }\n  function HandleMessageData(e) {\n    const newData = { ...messageData };\n    newData[e.target.id] = e.target.value;\n    setMessageData(newData);\n    console.log(newData);\n  }\n\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n    fetch(Domain + \"/api/Student/GetAllStudents/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length > 2) setPagination(true);\n      });\n  }, [pageIndex]);\n\n  useEffect(() => {\n    console.log(CourseValues);\n    setFilterData((data) => ({\n      ...data,\n      CourseId: CourseValues.Id,\n    }));\n  }, [CourseValues.Id]);\n  useEffect(() => {\n    //API call for get all course names to dropedown\n    fetch(Domain + \"/api/Admin/GetAllCourses/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData1),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        if (json.Data.length != 0) setCourses(json.Data);\n      });\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Student/GetAllStudents/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n      });\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      setDeleting(true);\n      fetch(Domain + \"/api/Student/DeleteStudent/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passDelete),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setDelete([]);\n            showDeletedNotification();\n            setDeleting(false);\n          }\n        });\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Student/GetStudentById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit([]);\n            setData(json.Data);\n\n            console.log(json.Data);\n          }\n        });\n    }\n  }, [deletee, edit, saved]);\n  function HandleFilter() {\n    console.log(filterData);\n    if (\n      filterData.CourseId == null ||\n      filterData.CourseId == \"\" ||\n      filterData.Year == \"\"\n    )\n      setValidateFilter(false);\n    else {\n      setDeleting(true);\n      setValidateFilter(true);\n\n      //API call for get latest 10 elements\n      fetch(Domain + \"/api/Student/GetStudentsByCourseIdandDate/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(filterData),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          console.log(json);\n          setEmpty(false);\n          setEvents(json.Data);\n          setSizeOfArray(json.Data.length);\n          setFilterData({\n            PageIndex: 0,\n            PageSize: 10,\n            Year: \"\",\n            CourseId: \"\",\n          });\n          setDeleting(false);\n          if (json.Data.length == 0) setEmpty(true);\n          setLoading(false);\n        });\n    }\n  }\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Student Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Student Deleted Successfully\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <form>\n              <CardHeader color=\"info\">\n                <h4 className={classes.cardTitleWhite}>Add Reciepient List</h4>\n                <p className={classes.cardCategoryWhite}>\n                  Select the Year and Course then click search to Add reciepient\n                  list\n                </p>\n              </CardHeader>\n\n              <CardBody>\n                <GridContainer>\n                  <GridItem xs={12} sm={12} md={6}>\n                    <CustomInput\n                      onChange={(e) => HandleFilterData(e)}\n                      value={filterData.Year}\n                      labelText=\"Year\"\n                      id=\"Year\"\n                      formControlProps={{\n                        fullWidth: true,\n                      }}\n                    />\n                  </GridItem>\n                  <GridItem xs={12} sm={12} md={3}>\n                    <SingleSelect\n                      noOptionsMessage=\"Create any course first\"\n                      placeholder=\"Select Course\"\n                      Options={CourseList}\n                      setValue={setCourseValues}\n                      formControlProps={{\n                        fullWidth: true,\n                      }}\n                    />\n                  </GridItem>\n                </GridContainer>\n                {validateFilter ? (\n                  <>\n                    {sizeOfArray == null ? (\n                      <></>\n                    ) : (\n                      <>\n                        {sizeOfArray == 0 ? (\n                          <Danger>No student Found!</Danger>\n                        ) : (\n                          <Success>Found {sizeOfArray} Students</Success>\n                        )}\n                      </>\n                    )}\n                  </>\n                ) : (\n                  <Danger>Please select Year and Course</Danger>\n                )}\n              </CardBody>\n              <CardFooter>\n                <Button onClick={HandleFilter} color=\"info\">\n                  Search\n                </Button>\n              </CardFooter>\n            </form>\n          </Card>\n        </GridItem>\n      </GridContainer>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <form>\n              <CardBody>\n                <GridContainer>\n                  <GridItem xs={12} sm={12} md={6}>\n                    <CustomInput\n                      onChange={(e) => HandleMessageData(e)}\n                      value={messageData.Message}\n                      labelText=\"Enter the Message here\"\n                      id=\"Message\"\n                      formControlProps={{\n                        fullWidth: true,\n                      }}\n                      inputProps={{\n                        multiline: true,\n                        rows: 5,\n                      }}\n                    />\n                  </GridItem>\n                </GridContainer>\n              </CardBody>\n              <CardFooter>\n                <Button onClick={HandleFilter} color=\"info\">\n                  Send to ({sizeOfArray})\n                </Button>\n              </CardFooter>\n            </form>\n          </Card>\n        </GridItem>\n      </GridContainer>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>List Of All Students</h4>\n              <p className={classes.cardCategoryWhite}>\n                All students are listed below, you can delete or edit them.\n              </p>\n            </CardHeader>\n            <CardBody>\n              <LoadingOverlay active={deleting} spinner text=\"Please Wait..\">\n                {empty ? (\n                  <p>empty</p>\n                ) : (\n                  <Table\n                    tableHeaderColor=\"info\"\n                    tableHead={[\n                      \"\",\n                      \"Id\",\n                      \"FullName\",\n                      \"Registration No\",\n                      \"ClassNo\",\n                      \"AdmissionNo\",\n                      \"Mobile\",\n                      \"Email\",\n                      \"Course\",\n                      \"Coursecode\",\n                      \"Gender\",\n                      \"DOB\",\n                      \"Password\",\n                      \"Gur_Name\",\n                      \"Gur_Mobile\",\n                      \"Gur_Relation\",\n                      \"Image\",\n                      \"CourseId\",\n                      \"Actions\",\n                      // \"Created By\",\n                      // \"Created Date\",\n                      // \"Modified By\",\n                      // \"Modified Date\",\n                      // \"Deteled By\",\n                      // \"Deleted Date\",\n                    ]}\n                    tableData={Studentdata}\n                    setEdit={setEdit}\n                    setDelete={setDelete}\n                    loading={loading}\n                  />\n                )}\n              </LoadingOverlay>\n            </CardBody>\n          </Card>\n          {pagination ? (\n            <Pagination\n              setPageIndex={setPageIndex}\n              pageIndex={pageIndex}\n              className={\n                classes.textCenter + \" \" + classes.justifyContentCenter\n              }\n              pages={[\n                { text: \"Previous\" },\n                { active: true, text: \"1\" },\n\n                { text: \"Next\" },\n              ]}\n              color=\"info\"\n            />\n          ) : (\n            <></>\n          )}\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\n","// @material-ui/icons\nimport Dashboard from \"@material-ui/icons/Dashboard\";\nimport Notifications from \"@material-ui/icons/Notifications\";\nimport ViewCarouselIcon from \"@material-ui/icons/ViewCarousel\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport CommentIcon from \"@material-ui/icons/Comment\";\nimport PhotoLibraryIcon from \"@material-ui/icons/PhotoLibrary\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport ListIcon from \"@material-ui/icons/List\";\nimport MenuBookIcon from \"@material-ui/icons/MenuBook\";\nimport SupervisedUserCircleIcon from \"@material-ui/icons/SupervisedUserCircle\";\nimport CalendarViewDayIcon from \"@material-ui/icons/CalendarViewDay\";\nimport BusinessIcon from \"@material-ui/icons/Business\";\nimport BusinessCenterIcon from \"@material-ui/icons/BusinessCenter\";\nimport LibraryBooksIcon from \"@material-ui/icons/LibraryBooks\";\nimport VerticalSplitIcon from \"@material-ui/icons/VerticalSplit\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport ClearAllIcon from \"@material-ui/icons/ClearAll\";\nimport MailIcon from \"@material-ui/icons/Mail\";\n// core components/views for Admin layout\nimport DashboardPage from \"views/Dashboard/Dashboard.js\";\nimport Slideshow from \"views/Slideshow/Slideshow\";\nimport Events from \"views/Events/Events\";\nimport Gallery from \"views/Gallery/Gallery\";\nimport Courses from \"views/Courses/Courses\";\nimport Testimonials from \"views/Testimonials/Testimonials\";\nimport Students from \"views/Students/Students\";\nimport Publications from \"views/Publications/Publications\";\nimport Subjects from \"views/Subjects/Subjects\";\nimport Semester from \"views/Semester/Semester\";\nimport InternalMarks from \"views/InternalMarks/InternalMarks\";\nimport InternalsNotification from \"views/InternalsNotification/InternalsNotification\";\nimport Placements from \"views/Placements/Placements\";\nimport Enquiry from \"views/Enquiry/Enquiry\";\nimport Departments from \"views/Departments/Departments\";\nimport Admin from \"views/Admin/Admin\";\nimport Admission from \"views/Admission/Admission\";\nimport Clubs from \"views/Clubs/Clubs\";\nimport Facilities from \"views/Facilities/Facilities\";\nimport Management from \"views/Management/Management\";\nimport Staffs from \"views/Sfatts/Staffs\";\nimport SendSMS from \"views/SendSMS/SendSMS\";\n\n// core components/views for RTL layout\nconst dashboardRoutes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: Dashboard,\n    component: DashboardPage,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/admission\",\n    name: \"Admission\",\n    icon: \"content_paste\",\n    component: Admission,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/departments\",\n    name: \"Departments\",\n    icon: ClearAllIcon,\n    component: Departments,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/admin\",\n    name: \"Admin Profile\",\n    icon: LockIcon,\n    component: Admin,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/staffs\",\n    name: \"Manage Staffs\",\n    icon: PeopleIcon,\n    component: Staffs,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/slideshow\",\n    name: \"Home screen Carousel\",\n    icon: ViewCarouselIcon,\n    component: Slideshow,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/events\",\n    name: \"Events\",\n    icon: DateRangeIcon,\n    component: Events,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/testimonials\",\n    name: \"Testimonials\",\n    icon: CommentIcon,\n    component: Testimonials,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/gallery\",\n    name: \"Gallery\",\n    icon: PhotoLibraryIcon,\n    component: Gallery,\n    layout: \"/admin\",\n  },\n\n  {\n    path: \"/courses\",\n    name: \"Courses\",\n    icon: FileCopyIcon,\n    component: Courses,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/semester\",\n    name: \"Semester\",\n    icon: ListIcon,\n    component: Semester,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/subjects\",\n    name: \"Subjects\",\n    icon: MenuBookIcon,\n    component: Subjects,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/students\",\n    name: \"Students\",\n    icon: SupervisedUserCircleIcon,\n    component: Students,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/sms\",\n    name: \"Send SMS\",\n    icon: MailIcon,\n    component: SendSMS,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/clubs\",\n    name: \"Clubs\",\n    icon: CalendarViewDayIcon,\n    component: Clubs,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/facilities\",\n    name: \"Facilities\",\n    icon: BusinessIcon,\n    component: Facilities,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/management\",\n    name: \"Management\",\n    icon: BusinessCenterIcon,\n    component: Management,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/publications\",\n    name: \"Publications\",\n    icon: LibraryBooksIcon,\n    component: Publications,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/Internalsnotification\",\n    name: \"Internals Notification\",\n    icon: Notifications,\n    component: InternalsNotification,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/internals\",\n    name: \"Internal Marks\",\n    icon: VerticalSplitIcon,\n    component: InternalMarks,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/placements\",\n    name: \"Placements\",\n    icon: AssignmentIcon,\n    component: Placements,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/enquiry\",\n    name: \"Enquiry\",\n    icon: EmailIcon,\n    component: Enquiry,\n    layout: \"/admin\",\n  },\n];\n\nexport default dashboardRoutes;\n","import {\n  container,\n  defaultFont,\n  primaryColor,\n  defaultBoxShadow,\n  infoColor,\n  successColor,\n  warningColor,\n  dangerColor,\n  whiteColor,\n  grayColor,\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst headerStyle = () => ({\n  appBar: {\n    backgroundColor: \"transparent\",\n    boxShadow: \"none\",\n    borderBottom: \"0\",\n    marginBottom: \"0\",\n    position: \"absolute\",\n    width: \"100%\",\n    paddingTop: \"10px\",\n    zIndex: \"1029\",\n    color: grayColor[7],\n    border: \"0\",\n    borderRadius: \"3px\",\n    padding: \"10px 0\",\n    transition: \"all 150ms ease 0s\",\n    minHeight: \"50px\",\n    display: \"block\",\n  },\n  container: {\n    ...container,\n    minHeight: \"50px\",\n  },\n  flex: {\n    flex: 1,\n  },\n  title: {\n    ...defaultFont,\n    letterSpacing: \"unset\",\n    lineHeight: \"30px\",\n    fontSize: \"18px\",\n    borderRadius: \"3px\",\n    textTransform: \"none\",\n    color: \"inherit\",\n    margin: \"0\",\n    \"&:hover,&:focus\": {\n      background: \"transparent\",\n    },\n  },\n  appResponsive: {\n    top: \"8px\",\n  },\n  primary: {\n    backgroundColor: primaryColor[0],\n    color: whiteColor,\n    ...defaultBoxShadow,\n  },\n  info: {\n    backgroundColor: infoColor[0],\n    color: whiteColor,\n    ...defaultBoxShadow,\n  },\n  success: {\n    backgroundColor: successColor[0],\n    color: whiteColor,\n    ...defaultBoxShadow,\n  },\n  warning: {\n    backgroundColor: warningColor[0],\n    color: whiteColor,\n    ...defaultBoxShadow,\n  },\n  danger: {\n    backgroundColor: dangerColor[0],\n    color: whiteColor,\n    ...defaultBoxShadow,\n  },\n});\n\nexport default headerStyle;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Hidden from \"@material-ui/core/Hidden\";\n// @material-ui/icons\nimport Menu from \"@material-ui/icons/Menu\";\n// core components\nimport AdminNavbarLinks from \"./AdminNavbarLinks.js\";\nimport RTLNavbarLinks from \"./RTLNavbarLinks.js\";\nimport Button from \"components/CustomButtons/Button.js\";\n\n//hooks\nimport { useRouteName } from \"hooks\";\n\nimport styles from \"assets/jss/material-dashboard-react/components/headerStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Header(props) {\n  console.log(\"setLoggedIn,navbar\", props);\n  const classes = useStyles();\n  const routeName = useRouteName();\n  const { color } = props;\n  const appBarClasses = classNames({\n    [\" \" + classes[color]]: color,\n  });\n  return (\n    <AppBar className={classes.appBar + appBarClasses}>\n      <Toolbar className={classes.container}>\n        <div className={classes.flex}>\n          {/* Here we create navbar brand, based on route name */}\n          <Button color=\"transparent\" href=\"#\" className={classes.title}>\n            {routeName}\n          </Button>\n        </div>\n        <Hidden smDown implementation=\"css\">\n          {props.rtlActive ? (\n            <RTLNavbarLinks />\n          ) : (\n            <AdminNavbarLinks setLoggedin={props.setLoggedin} />\n          )}\n        </Hidden>\n        <Hidden mdUp implementation=\"css\">\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={props.handleDrawerToggle}\n          >\n            <Menu />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nHeader.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\"]),\n  rtlActive: PropTypes.bool,\n  handleDrawerToggle: PropTypes.func,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  setLoggedin: PropTypes.any,\n};\n","import routes from \"routes\";\n\nexport const useRouteName = () => {\n  let name = \"\";\n  routes.forEach((route) => {\n    if (window.location.href.indexOf(route.layout + route.path) !== -1) {\n      name = routes.rtlActive ? route.rtlName : route.name;\n    }\n  });\n  return name;\n};\n","import {\n  defaultFont,\n  container,\n  primaryColor,\n  grayColor,\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst footerStyle = {\n  block: {\n    color: \"inherit\",\n    padding: \"15px\",\n    textTransform: \"uppercase\",\n    borderRadius: \"3px\",\n    textDecoration: \"none\",\n    position: \"relative\",\n    display: \"block\",\n    ...defaultFont,\n    fontWeight: \"500\",\n    fontSize: \"12px\",\n  },\n  left: {\n    float: \"left!important\",\n    display: \"block\",\n  },\n  right: {\n    padding: \"15px 0\",\n    margin: \"0\",\n    fontSize: \"14px\",\n    float: \"right!important\",\n  },\n  footer: {\n    bottom: \"0\",\n    borderTop: \"1px solid \" + grayColor[11],\n    padding: \"15px 0\",\n    ...defaultFont,\n  },\n  container,\n  a: {\n    color: primaryColor,\n    textDecoration: \"none\",\n    backgroundColor: \"transparent\",\n  },\n  list: {\n    marginBottom: \"0\",\n    padding: \"0\",\n    marginTop: \"0\",\n  },\n  inlineBlock: {\n    display: \"inline-block\",\n    padding: \"0px\",\n    width: \"auto\",\n  },\n};\nexport default footerStyle;\n","/*eslint-disable*/\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport List from \"@material-ui/core/List\";\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/footerStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Footer(props) {\n  const classes = useStyles();\n  return (\n    <footer className={classes.footer}>\n      <div className={classes.container}>\n        <p className={classes.right}>\n          <span>\n            &copy; {1900 + new Date().getYear()}{\" \"}\n            <a\n              href=\"http://marygiricollege.edu.in\"\n              target=\"_blank\"\n              className={classes.a}\n            >\n              Marygiri College\n            </a>\n            ,Admin Dashboard\n          </span>\n        </p>\n      </div>\n    </footer>\n  );\n}\n","import {\n  drawerWidth,\n  transition,\n  boxShadow,\n  defaultFont,\n  primaryColor,\n  primaryBoxShadow,\n  infoColor,\n  successColor,\n  warningColor,\n  dangerColor,\n  whiteColor,\n  grayColor,\n  blackColor,\n  hexToRgb,\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst sidebarStyle = (theme) => ({\n  drawerPaper: {\n    border: \"none\",\n    position: \"fixed\",\n    top: \"0\",\n    bottom: \"0\",\n    left: \"0\",\n    zIndex: \"1\",\n    ...boxShadow,\n    width: drawerWidth,\n    [theme.breakpoints.up(\"md\")]: {\n      width: drawerWidth,\n      position: \"fixed\",\n      height: \"100%\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      width: drawerWidth,\n      ...boxShadow,\n      position: \"fixed\",\n      display: \"block\",\n      top: \"0\",\n      height: \"100vh\",\n      right: \"0\",\n      left: \"auto\",\n      zIndex: \"1032\",\n      visibility: \"visible\",\n      overflowY: \"visible\",\n      borderTop: \"none\",\n      textAlign: \"left\",\n      paddingRight: \"0px\",\n      paddingLeft: \"0\",\n      transform: `translate3d(${drawerWidth}px, 0, 0)`,\n      ...transition,\n    },\n  },\n  drawerPaperRTL: {\n    [theme.breakpoints.up(\"md\")]: {\n      left: \"auto !important\",\n      right: \"0 !important\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      left: \"0  !important\",\n      right: \"auto !important\",\n    },\n  },\n  logo: {\n    position: \"relative\",\n    padding: \"15px 15px\",\n    zIndex: \"4\",\n    \"&:after\": {\n      content: '\"\"',\n      position: \"absolute\",\n      bottom: \"0\",\n\n      height: \"1px\",\n      right: \"15px\",\n      width: \"calc(100% - 30px)\",\n      backgroundColor: \"rgba(\" + hexToRgb(grayColor[6]) + \", 0.3)\",\n    },\n  },\n  logoLink: {\n    ...defaultFont,\n    textTransform: \"uppercase\",\n    padding: \"5px 0\",\n    display: \"block\",\n    fontSize: \"18px\",\n    textAlign: \"left\",\n    fontWeight: \"400\",\n    lineHeight: \"30px\",\n    textDecoration: \"none\",\n    backgroundColor: \"transparent\",\n    \"&,&:hover\": {\n      color: whiteColor,\n    },\n  },\n  logoLinkRTL: {\n    textAlign: \"right\",\n  },\n  logoImage: {\n    width: \"30px\",\n    display: \"inline-block\",\n    maxHeight: \"30px\",\n    marginLeft: \"10px\",\n    marginRight: \"15px\",\n  },\n  img: {\n    width: \"35px\",\n    top: \"22px\",\n    position: \"absolute\",\n    verticalAlign: \"middle\",\n    border: \"0\",\n  },\n  background: {\n    position: \"absolute\",\n    zIndex: \"1\",\n    height: \"100%\",\n    width: \"100%\",\n    display: \"block\",\n    top: \"0\",\n    left: \"0\",\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center center\",\n    \"&:after\": {\n      position: \"absolute\",\n      zIndex: \"3\",\n      width: \"100%\",\n      height: \"100%\",\n      content: '\"\"',\n      display: \"block\",\n      background: blackColor,\n      opacity: \".8\",\n    },\n  },\n  list: {\n    overflow: \"auto\",\n    marginTop: \"20px\",\n    paddingLeft: \"0\",\n    paddingTop: \"0\",\n    paddingBottom: \"0\",\n    marginBottom: \"0\",\n    listStyle: \"none\",\n    position: \"unset\",\n  },\n  item: {\n    position: \"relative\",\n    display: \"block\",\n    textDecoration: \"none\",\n    \"&:hover,&:focus,&:visited,&\": {\n      color: whiteColor,\n    },\n  },\n  itemLink: {\n    width: \"auto\",\n    transition: \"all 300ms linear\",\n    margin: \"10px 15px 0\",\n    borderRadius: \"3px\",\n    position: \"relative\",\n    display: \"block\",\n    padding: \"10px 15px\",\n    backgroundColor: \"transparent\",\n    ...defaultFont,\n  },\n  itemIcon: {\n    width: \"24px\",\n    height: \"30px\",\n    fontSize: \"24px\",\n    lineHeight: \"30px\",\n    float: \"left\",\n    marginRight: \"15px\",\n    textAlign: \"center\",\n    verticalAlign: \"middle\",\n    color: \"rgba(\" + hexToRgb(whiteColor) + \", 0.8)\",\n  },\n  itemIconRTL: {\n    marginRight: \"3px\",\n    marginLeft: \"15px\",\n    float: \"right\",\n  },\n  itemText: {\n    ...defaultFont,\n    margin: \"0\",\n    lineHeight: \"30px\",\n    fontSize: \"14px\",\n    color: whiteColor,\n  },\n  itemTextRTL: {\n    textAlign: \"right\",\n  },\n  whiteFont: {\n    color: whiteColor,\n  },\n  purple: {\n    backgroundColor: primaryColor[0],\n    ...primaryBoxShadow,\n    \"&:hover,&:focus\": {\n      backgroundColor: primaryColor[0],\n      ...primaryBoxShadow,\n    },\n  },\n  blue: {\n    backgroundColor: infoColor[0],\n    boxShadow:\n      \"0 12px 20px -10px rgba(\" +\n      hexToRgb(infoColor[0]) +\n      \",.28), 0 4px 20px 0 rgba(\" +\n      hexToRgb(blackColor) +\n      \",.12), 0 7px 8px -5px rgba(\" +\n      hexToRgb(infoColor[0]) +\n      \",.2)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: infoColor[0],\n      boxShadow:\n        \"0 12px 20px -10px rgba(\" +\n        hexToRgb(infoColor[0]) +\n        \",.28), 0 4px 20px 0 rgba(\" +\n        hexToRgb(blackColor) +\n        \",.12), 0 7px 8px -5px rgba(\" +\n        hexToRgb(infoColor[0]) +\n        \",.2)\",\n    },\n  },\n  green: {\n    backgroundColor: successColor[0],\n    boxShadow:\n      \"0 12px 20px -10px rgba(\" +\n      hexToRgb(successColor[0]) +\n      \",.28), 0 4px 20px 0 rgba(\" +\n      hexToRgb(blackColor) +\n      \",.12), 0 7px 8px -5px rgba(\" +\n      hexToRgb(successColor[0]) +\n      \",.2)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: successColor[0],\n      boxShadow:\n        \"0 12px 20px -10px rgba(\" +\n        hexToRgb(successColor[0]) +\n        \",.28), 0 4px 20px 0 rgba(\" +\n        hexToRgb(blackColor) +\n        \",.12), 0 7px 8px -5px rgba(\" +\n        hexToRgb(successColor[0]) +\n        \",.2)\",\n    },\n  },\n  orange: {\n    backgroundColor: warningColor[0],\n    boxShadow:\n      \"0 12px 20px -10px rgba(\" +\n      hexToRgb(warningColor[0]) +\n      \",.28), 0 4px 20px 0 rgba(\" +\n      hexToRgb(blackColor) +\n      \",.12), 0 7px 8px -5px rgba(\" +\n      hexToRgb(warningColor[0]) +\n      \",.2)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: warningColor[0],\n      boxShadow:\n        \"0 12px 20px -10px rgba(\" +\n        hexToRgb(warningColor[0]) +\n        \",.28), 0 4px 20px 0 rgba(\" +\n        hexToRgb(blackColor) +\n        \",.12), 0 7px 8px -5px rgba(\" +\n        hexToRgb(warningColor[0]) +\n        \",.2)\",\n    },\n  },\n  red: {\n    backgroundColor: dangerColor[0],\n    boxShadow:\n      \"0 12px 20px -10px rgba(\" +\n      hexToRgb(dangerColor[0]) +\n      \",.28), 0 4px 20px 0 rgba(\" +\n      hexToRgb(blackColor) +\n      \",.12), 0 7px 8px -5px rgba(\" +\n      hexToRgb(dangerColor[0]) +\n      \",.2)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: dangerColor[0],\n      boxShadow:\n        \"0 12px 20px -10px rgba(\" +\n        hexToRgb(dangerColor[0]) +\n        \",.28), 0 4px 20px 0 rgba(\" +\n        hexToRgb(blackColor) +\n        \",.12), 0 7px 8px -5px rgba(\" +\n        hexToRgb(dangerColor[0]) +\n        \",.2)\",\n    },\n  },\n  sidebarWrapper: {\n    position: \"relative\",\n    height: \"calc(100vh - 75px)\",\n    overflow: \"auto\",\n    width: \"260px\",\n    zIndex: \"4\",\n    overflowScrolling: \"touch\",\n  },\n  activePro: {\n    [theme.breakpoints.up(\"md\")]: {\n      position: \"absolute\",\n      width: \"100%\",\n      bottom: \"13px\",\n    },\n  },\n});\n\nexport default sidebarStyle;\n","/*eslint-disable*/\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { NavLink, useLocation } from \"react-router-dom\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Icon from \"@material-ui/core/Icon\";\n// core components\nimport AdminNavbarLinks from \"components/Navbars/AdminNavbarLinks.js\";\nimport RTLNavbarLinks from \"components/Navbars/RTLNavbarLinks.js\";\n\nimport styles from \"assets/jss/material-dashboard-react/components/sidebarStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Sidebar(props) {\n  const classes = useStyles();\n  let location = useLocation();\n  // verifies if routeName is the one active (in browser input)\n  function activeRoute(routeName) {\n    return location.pathname === routeName;\n  }\n  const { color, logo, image, logoText, routes, userdetails } = props;\n  console.log(\"user details:\", userdetails);\n  var links = (\n    <List className={classes.list}>\n      {routes.map((prop, key) => {\n        var activePro = \" \";\n        var listItemClasses;\n        if (prop.path === \"/upgrade-to-pro\") {\n          activePro = classes.activePro + \" \";\n          listItemClasses = classNames({\n            [\" \" + classes[color]]: true,\n          });\n        } else {\n          listItemClasses = classNames({\n            [\" \" + classes[color]]: activeRoute(prop.layout + prop.path),\n          });\n        }\n        const whiteFontClasses = classNames({\n          [\" \" + classes.whiteFont]: activeRoute(prop.layout + prop.path),\n        });\n        return (\n          <NavLink\n            to={{\n              pathname: prop.layout + prop.path,\n              aboutProps: {\n                name: userdetails,\n              },\n            }}\n            className={activePro + classes.item}\n            activeClassName=\"active\"\n            key={key}\n          >\n            <ListItem button className={classes.itemLink + listItemClasses}>\n              {typeof prop.icon === \"string\" ? (\n                <Icon\n                  className={classNames(classes.itemIcon, whiteFontClasses, {\n                    [classes.itemIconRTL]: props.rtlActive,\n                  })}\n                >\n                  {prop.icon}\n                </Icon>\n              ) : (\n                <prop.icon\n                  className={classNames(classes.itemIcon, whiteFontClasses, {\n                    [classes.itemIconRTL]: props.rtlActive,\n                  })}\n                />\n              )}\n              <ListItemText\n                primary={props.rtlActive ? prop.rtlName : prop.name}\n                className={classNames(classes.itemText, whiteFontClasses, {\n                  [classes.itemTextRTL]: props.rtlActive,\n                })}\n                disableTypography={true}\n              />\n            </ListItem>\n          </NavLink>\n        );\n      })}\n    </List>\n  );\n  var brand = (\n    <div className={classes.logo}>\n      <a\n        href=\"/\"\n        className={classNames(classes.logoLink, {\n          [classes.logoLinkRTL]: props.rtlActive,\n        })}\n      >\n        <div className={classes.logoImage}>\n          <img src={logo} alt=\"logo\" className={classes.img} />\n        </div>\n        {logoText}\n      </a>\n    </div>\n  );\n  return (\n    <div>\n      <Hidden mdUp implementation=\"css\">\n        <Drawer\n          variant=\"temporary\"\n          anchor={props.rtlActive ? \"left\" : \"right\"}\n          open={props.open}\n          classes={{\n            paper: classNames(classes.drawerPaper, {\n              [classes.drawerPaperRTL]: props.rtlActive,\n            }),\n          }}\n          onClose={props.handleDrawerToggle}\n          ModalProps={{\n            keepMounted: true, // Better open performance on mobile.\n          }}\n        >\n          {brand}\n          <div className={classes.sidebarWrapper}>\n            {props.rtlActive ? <RTLNavbarLinks /> : <AdminNavbarLinks />}\n            {links}\n          </div>\n          {image !== undefined ? (\n            <div\n              className={classes.background}\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\n            />\n          ) : null}\n        </Drawer>\n      </Hidden>\n      <Hidden smDown implementation=\"css\">\n        <Drawer\n          anchor={props.rtlActive ? \"right\" : \"left\"}\n          variant=\"permanent\"\n          open\n          classes={{\n            paper: classNames(classes.drawerPaper, {\n              [classes.drawerPaperRTL]: props.rtlActive,\n            }),\n          }}\n        >\n          {brand}\n          <div className={classes.sidebarWrapper}>{links}</div>\n          {image !== undefined ? (\n            <div\n              className={classes.background}\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\n            />\n          ) : null}\n        </Drawer>\n      </Hidden>\n    </div>\n  );\n}\n\nSidebar.propTypes = {\n  rtlActive: PropTypes.bool,\n  handleDrawerToggle: PropTypes.func,\n  bgColor: PropTypes.oneOf([\"purple\", \"blue\", \"green\", \"orange\", \"red\"]),\n  logo: PropTypes.string,\n  image: PropTypes.string,\n  logoText: PropTypes.string,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  open: PropTypes.bool,\n};\n","import {\n  drawerWidth,\n  transition,\n  container,\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst appStyle = (theme) => ({\n  wrapper: {\n    position: \"relative\",\n    top: \"0\",\n    height: \"100vh\",\n  },\n  mainPanel: {\n    [theme.breakpoints.up(\"md\")]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n    },\n    overflow: \"auto\",\n    position: \"relative\",\n    float: \"right\",\n    ...transition,\n    maxHeight: \"100%\",\n    width: \"100%\",\n    overflowScrolling: \"touch\",\n  },\n  content: {\n    marginTop: \"70px\",\n    padding: \"30px 15px\",\n    minHeight: \"calc(100vh - 123px)\",\n  },\n  container,\n  map: {\n    marginTop: \"70px\",\n  },\n});\n\nexport default appStyle;\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n// creates a beautiful scrollbar\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Navbar from \"components/Navbars/Navbar.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\n\nimport routes from \"routes.js\";\n\nimport styles from \"assets/jss/material-dashboard-react/layouts/adminStyle.js\";\n\nimport logo from \"assets/img/favicon.png\";\n\nlet ps;\n\nconst switchRoutes = (\n  <Switch>\n    {routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      }\n      return null;\n    })}\n    <Redirect from=\"/admin\" to=\"/admin/dashboard\" />\n  </Switch>\n);\n\nconst useStyles = makeStyles(styles);\n\nexport default function Admin({ ...rest }) {\n  // styles\n  const classes = useStyles();\n  // ref to help us initialize PerfectScrollbar on windows devices\n  const mainPanel = React.createRef();\n  // states and functions\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n  // const getRoute = () => {\n  //   return window.location.pathname !== \"/admin/user\";\n  // };\n  const resizeFunction = () => {\n    if (window.innerWidth >= 960) {\n      setMobileOpen(false);\n    }\n  };\n  // initialize and destroy the PerfectScrollbar plugin\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(mainPanel.current, {\n        suppressScrollX: true,\n        suppressScrollY: false,\n      });\n      document.body.style.overflow = \"hidden\";\n    }\n    window.addEventListener(\"resize\", resizeFunction);\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n      }\n      window.removeEventListener(\"resize\", resizeFunction);\n    };\n  }, [mainPanel]);\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.mainPanel} ref={mainPanel}>\n        {/* On the /maps route we want the map to be on full screen - this is not possible if the content and conatiner classes are present because they have some paddings which would make the map smaller */}\n\n        <Sidebar\n          routes={routes}\n          logoText={\"Marygiri\"}\n          logo={logo}\n          image=\"\"\n          handleDrawerToggle={handleDrawerToggle}\n          open={mobileOpen}\n          color=\"blue\"\n          {...rest}\n        />\n        <Navbar\n          setLoggedin={rest.setLoggedin}\n          routes={routes}\n          handleDrawerToggle={handleDrawerToggle}\n          {...rest}\n        />\n        <div className={classes.content}>\n          <div className={classes.container}>{switchRoutes}</div>\n        </div>\n\n        <Footer />\n      </div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/favicon.774d483b.png\";","import React from \"react\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport { Domain } from \"Domain\";\nimport PropTypes from \"prop-types\";\n\nconst styles = {\n  cardCategoryRed: {\n    color: \"#ff0000\",\n    margin: \"0\",\n    fontSize: \"14px\",\n    marginTop: \"0\",\n    marginBottom: \"0\",\n  },\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function LoginPage({\n  setLoggedin,\n  setNotification,\n  setUserType,\n  setUserdetails,\n}) {\n  const classes = useStyles();\n  const [data, setData] = React.useState({\n    Username: \"\",\n    Password: \"\",\n  });\n  function HandleData(e) {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n  const [invalid, setInvalid] = React.useState(false);\n  function HandleSave() {\n    if (data.Username == \"\" && data.Password == \"\") {\n      setInvalid(true);\n      setLoggedin(false);\n    } else {\n      fetch(Domain + \"/api/Admin/AdminLogin/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          console.log(json.Data);\n          setUserdetails(json.Data);\n          setData({\n            Username: \"\",\n            Password: \"\",\n          });\n          if (json.Success) {\n            if (json.Data.Usertype == \"Admin\") setUserType(json.Data.Usertype);\n            else setUserType(json.Data.UserType);\n            setInvalid(false);\n            setLoggedin(true);\n            setNotification(true);\n          } else {\n            setInvalid(true);\n            setLoggedin(false);\n          }\n        });\n    }\n  }\n\n  return (\n    <>\n      <GridContainer justify=\"center\">\n        <GridItem xs={12} sm={12} md={4}>\n          <Card>\n            <form>\n              <CardHeader color=\"info\">\n                <h4 className={classes.cardTitleWhite}>Admin Login</h4>\n                <p className={classes.cardCategoryWhite}>\n                  Enter the login Credentails below\n                </p>\n              </CardHeader>\n\n              <CardBody>\n                <GridContainer justify=\"center\">\n                  <GridItem xs={12} sm={12} md={8}>\n                    <GridContainer justify=\"center\">\n                      <GridItem xs={12} sm={12} md={12}>\n                        {invalid ? (\n                          <div>\n                            <CustomInput\n                              error\n                              onChange={(e) => HandleData(e)}\n                              value={data.Username}\n                              labelText=\"User Name\"\n                              id=\"Username\"\n                              formControlProps={{\n                                fullWidth: true,\n                              }}\n                            />\n                          </div>\n                        ) : (\n                          <div>\n                            <CustomInput\n                              onChange={(e) => HandleData(e)}\n                              value={data.Username}\n                              labelText=\"User Name\"\n                              id=\"Username\"\n                              formControlProps={{\n                                fullWidth: true,\n                              }}\n                            />\n                          </div>\n                        )}\n                      </GridItem>\n                      <GridItem xs={12} sm={12} md={12}>\n                        {invalid ? (\n                          <div>\n                            <CustomInput\n                              type=\"password\"\n                              error\n                              onChange={(e) => HandleData(e)}\n                              value={data.Password}\n                              labelText=\"Password\"\n                              id=\"Password\"\n                              formControlProps={{\n                                fullWidth: true,\n                              }}\n                            />\n                          </div>\n                        ) : (\n                          <div>\n                            <CustomInput\n                              type=\"password\"\n                              onChange={(e) => HandleData(e)}\n                              value={data.Password}\n                              labelText=\"Password\"\n                              id=\"Password\"\n                              formControlProps={{\n                                fullWidth: true,\n                              }}\n                            />\n                          </div>\n                        )}\n                        {invalid ? (\n                          <p className={classes.cardCategoryRed}>\n                            Invalid Admin Credentials\n                          </p>\n                        ) : (\n                          <div></div>\n                        )}\n                      </GridItem>\n\n                      <GridItem xs={12} sm={12} md={12}>\n                        <Button onClick={HandleSave} color=\"info\">\n                          Login\n                        </Button>\n                      </GridItem>\n                    </GridContainer>\n                  </GridItem>\n                </GridContainer>\n              </CardBody>\n              <CardFooter></CardFooter>\n            </form>\n          </Card>\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\nLoginPage.propTypes = {\n  setLoggedin: PropTypes.func,\n  setNotification: PropTypes.func,\n  setUserType: PropTypes.any,\n  setUserdetails: PropTypes.any,\n};\n","// @material-ui/icons\nimport Dashboard from \"@material-ui/icons/Dashboard\";\n// import Notifications from \"@material-ui/icons/Notifications\";\n// import ViewCarouselIcon from \"@material-ui/icons/ViewCarousel\";\n\n// import DateRangeIcon from \"@material-ui/icons/DateRange\";\n// import CommentIcon from \"@material-ui/icons/Comment\";\n// import PhotoLibraryIcon from \"@material-ui/icons/PhotoLibrary\";\n// import FileCopyIcon from \"@material-ui/icons/FileCopy\";\n// import ListIcon from \"@material-ui/icons/List\";\n// import MenuBookIcon from \"@material-ui/icons/MenuBook\";\nimport SupervisedUserCircleIcon from \"@material-ui/icons/SupervisedUserCircle\";\n// import CalendarViewDayIcon from \"@material-ui/icons/CalendarViewDay\";\n// import BusinessIcon from \"@material-ui/icons/Business\";\n// import BusinessCenterIcon from \"@material-ui/icons/BusinessCenter\";\n// import LibraryBooksIcon from \"@material-ui/icons/LibraryBooks\";\nimport VerticalSplitIcon from \"@material-ui/icons/VerticalSplit\";\n// import AssignmentIcon from \"@material-ui/icons/Assignment\";\n// core components/views for Admin layout\nimport DashboardPage from \"views/Dashboard/Dashboard.js\";\n// import Slideshow from \"views/Slideshow/Slideshow\";\n// import Events from \"views/Events/Events\";\n// import Gallery from \"views/Gallery/Gallery\";\n// import Courses from \"views/Courses/Courses\";\n// import Testimonials from \"views/Testimonials/Testimonials\";\nimport Students from \"views/Students/Students\";\n// import Publications from \"views/Publications/Publications\";\n// import Subjects from \"views/Subjects/Subjects\";\n// import Semester from \"views/Semester/Semester\";\nimport InternalMarks from \"views/InternalMarks/InternalMarks\";\n// import InternalsNotification from \"views/InternalsNotification/InternalsNotification\";\n// import Placements from \"views/Placements/Placements\";\n\n// import Clubs from \"views/Clubs/Clubs\";\n// import Facilities from \"views/Facilities/Facilities\";\n// import Management from \"views/Management/Management\";\n// core components/views for RTL layout\n\nconst dashboardRoutes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: Dashboard,\n    component: DashboardPage,\n    layout: \"/admin\",\n  },\n  // {\n  //   path: \"/slideshow\",\n  //   name: \"Home screen Carousel\",\n  //   icon: ViewCarouselIcon,\n  //   component: Slideshow,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   path: \"/events\",\n  //   name: \"Events\",\n  //   icon: DateRangeIcon,\n  //   component: Events,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   path: \"/testimonials\",\n  //   name: \"Testimonials\",\n  //   icon: CommentIcon,\n  //   component: Testimonials,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   path: \"/gallery\",\n  //   name: \"Gallery\",\n  //   icon: PhotoLibraryIcon,\n  //   component: Gallery,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   path: \"/courses\",\n  //   name: \"Courses\",\n  //   icon: FileCopyIcon,\n  //   component: Courses,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   path: \"/semester\",\n  //   name: \"Semester\",\n  //   icon: ListIcon,\n  //   component: Semester,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   path: \"/subjects\",\n  //   name: \"Subjects\",\n  //   icon: MenuBookIcon,\n  //   component: Subjects,\n  //   layout: \"/admin\",\n  // },\n  {\n    path: \"/students\",\n    name: \"Students\",\n    icon: SupervisedUserCircleIcon,\n    component: Students,\n    layout: \"/admin\",\n  },\n  // {\n  //   path: \"/clubs\",\n  //   name: \"Clubs\",\n  //   icon: CalendarViewDayIcon,\n  //   component: Clubs,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   path: \"/facilities\",\n  //   name: \"Facilities\",\n  //   icon: BusinessIcon,\n  //   component: Facilities,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   path: \"/management\",\n  //   name: \"Management\",\n  //   icon: BusinessCenterIcon,\n  //   component: Management,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   path: \"/publications\",\n  //   name: \"Publications\",\n  //   icon: LibraryBooksIcon,\n  //   component: Publications,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   path: \"/Internalsnotification\",\n  //   name: \"Internals Notification\",\n  //   icon: Notifications,\n  //   component: InternalsNotification,\n  //   layout: \"/admin\",\n  // },\n  {\n    path: \"/internals\",\n    name: \"Internal Marks\",\n    icon: VerticalSplitIcon,\n    component: InternalMarks,\n    layout: \"/admin\",\n  },\n  // {\n  //   path: \"/placements\",\n  //   name: \"Placements\",\n  //   icon: AssignmentIcon,\n  //   component: Placements,\n  //   layout: \"/admin\",\n  // },\n];\n\nexport default dashboardRoutes;\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n// creates a beautiful scrollbar\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Navbar from \"components/Navbars/Navbar.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\n\nimport PropTypes from \"prop-types\";\n\nimport routes from \"StaffRoutes.js\";\n\nimport styles from \"assets/jss/material-dashboard-react/layouts/adminStyle.js\";\n\nimport logo from \"assets/img/favicon.png\";\n\nlet ps;\n\nconst switchRoutes = (\n  <Switch>\n    {routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      }\n      return null;\n    })}\n    <Redirect from=\"/admin\" to=\"/admin/dashboard\" />\n  </Switch>\n);\n\nconst useStyles = makeStyles(styles);\n\nexport default function StaffsLayout({ ...rest }) {\n  // styles\n  const classes = useStyles();\n  // ref to help us initialize PerfectScrollbar on windows devices\n  const mainPanel = React.createRef();\n  // states and functions\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n  // const getRoute = () => {\n  //   return window.location.pathname !== \"/admin/user\";\n  // };\n  const resizeFunction = () => {\n    if (window.innerWidth >= 960) {\n      setMobileOpen(false);\n    }\n  };\n  // initialize and destroy the PerfectScrollbar plugin\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(mainPanel.current, {\n        suppressScrollX: true,\n        suppressScrollY: false,\n      });\n      document.body.style.overflow = \"hidden\";\n    }\n    window.addEventListener(\"resize\", resizeFunction);\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n      }\n      window.removeEventListener(\"resize\", resizeFunction);\n    };\n  }, [mainPanel]);\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.mainPanel} ref={mainPanel}>\n        {/* On the /maps route we want the map to be on full screen - this is not possible if the content and conatiner classes are present because they have some paddings which would make the map smaller */}\n\n        <Sidebar\n          routes={routes}\n          logoText={\"Marygiri\"}\n          logo={logo}\n          image=\"\"\n          handleDrawerToggle={handleDrawerToggle}\n          open={mobileOpen}\n          color=\"blue\"\n          {...rest}\n        />\n        <Navbar\n          setLoggedin={rest.setLoggedin}\n          routes={routes}\n          handleDrawerToggle={handleDrawerToggle}\n          {...rest}\n        />\n        <div className={classes.content}>\n          <div className={classes.container}>{switchRoutes}</div>\n        </div>\n\n        <Footer />\n      </div>\n    </div>\n  );\n}\nStaffsLayout.propTypes = {\n  userType: PropTypes.any,\n};\n","// @material-ui/icons\nimport Dashboard from \"@material-ui/icons/Dashboard\";\nimport Notifications from \"@material-ui/icons/Notifications\";\n// import ViewCarouselIcon from \"@material-ui/icons/ViewCarousel\";\n// import PeopleIcon from \"@material-ui/icons/People\";\n// import DateRangeIcon from \"@material-ui/icons/DateRange\";\n// import CommentIcon from \"@material-ui/icons/Comment\";\n// import PhotoLibraryIcon from \"@material-ui/icons/PhotoLibrary\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport ListIcon from \"@material-ui/icons/List\";\nimport MenuBookIcon from \"@material-ui/icons/MenuBook\";\nimport SupervisedUserCircleIcon from \"@material-ui/icons/SupervisedUserCircle\";\n// import CalendarViewDayIcon from \"@material-ui/icons/CalendarViewDay\";\n// import BusinessIcon from \"@material-ui/icons/Business\";\n// import BusinessCenterIcon from \"@material-ui/icons/BusinessCenter\";\n// import LibraryBooksIcon from \"@material-ui/icons/LibraryBooks\";\nimport VerticalSplitIcon from \"@material-ui/icons/VerticalSplit\";\n// import AssignmentIcon from \"@material-ui/icons/Assignment\";\n// import EmailIcon from \"@material-ui/icons/Email\";\n// core components/views for Admin layout\nimport DashboardPage from \"views/Dashboard/Dashboard.js\";\n// import Slideshow from \"views/Slideshow/Slideshow\";\n// import Events from \"views/Events/Events\";\n// import Gallery from \"views/Gallery/Gallery\";\nimport Courses from \"views/Courses/Courses\";\n// import Testimonials from \"views/Testimonials/Testimonials\";\nimport Students from \"views/Students/Students\";\n// import Publications from \"views/Publications/Publications\";\nimport Subjects from \"views/Subjects/Subjects\";\nimport Semester from \"views/Semester/Semester\";\nimport InternalMarks from \"views/InternalMarks/InternalMarks\";\nimport InternalsNotification from \"views/InternalsNotification/InternalsNotification\";\n// import Placements from \"views/Placements/Placements\";\n// import Enquiry from \"views/Enquiry/Enquiry\";\n\n// import Clubs from \"views/Clubs/Clubs\";\n// import Facilities from \"views/Facilities/Facilities\";\n// import Management from \"views/Management/Management\";\n// import Staffs from \"views/Sfatts/Staffs\";\n// core components/views for RTL layout\n\nconst dashboardRoutes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: Dashboard,\n    component: DashboardPage,\n    layout: \"/admin\",\n  },\n  // {\n  //   path: \"/staffs\",\n  //   name: \"Manage Staffs\",\n  //   icon: PeopleIcon,\n  //   component: Staffs,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   path: \"/slideshow\",\n  //   name: \"Home screen Carousel\",\n  //   icon: ViewCarouselIcon,\n  //   component: Slideshow,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   path: \"/events\",\n  //   name: \"Events\",\n  //   icon: DateRangeIcon,\n  //   component: Events,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   path: \"/testimonials\",\n  //   name: \"Testimonials\",\n  //   icon: CommentIcon,\n  //   component: Testimonials,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   path: \"/gallery\",\n  //   name: \"Gallery\",\n  //   icon: PhotoLibraryIcon,\n  //   component: Gallery,\n  //   layout: \"/admin\",\n  // },\n\n  {\n    path: \"/courses\",\n    name: \"Courses\",\n    icon: FileCopyIcon,\n    component: Courses,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/semester\",\n    name: \"Semester\",\n    icon: ListIcon,\n    component: Semester,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/subjects\",\n    name: \"Subjects\",\n    icon: MenuBookIcon,\n    component: Subjects,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/students\",\n    name: \"Students\",\n    icon: SupervisedUserCircleIcon,\n    component: Students,\n    layout: \"/admin\",\n  },\n  // {\n  //   path: \"/clubs\",\n  //   name: \"Clubs\",\n  //   icon: CalendarViewDayIcon,\n  //   component: Clubs,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   path: \"/facilities\",\n  //   name: \"Facilities\",\n  //   icon: BusinessIcon,\n  //   component: Facilities,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   path: \"/management\",\n  //   name: \"Management\",\n  //   icon: BusinessCenterIcon,\n  //   component: Management,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   path: \"/publications\",\n  //   name: \"Publications\",\n  //   icon: LibraryBooksIcon,\n  //   component: Publications,\n  //   layout: \"/admin\",\n  // },\n  {\n    path: \"/Internalsnotification\",\n    name: \"Internals Notification\",\n    icon: Notifications,\n    component: InternalsNotification,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/internals\",\n    name: \"Internal Marks\",\n    icon: VerticalSplitIcon,\n    component: InternalMarks,\n    layout: \"/admin\",\n  },\n  // {\n  //   path: \"/placements\",\n  //   name: \"Placements\",\n  //   icon: AssignmentIcon,\n  //   component: Placements,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   path: \"/enquiry\",\n  //   name: \"Enquiry\",\n  //   icon: EmailIcon,\n  //   component: Enquiry,\n  //   layout: \"/admin\",\n  // },\n];\n\nexport default dashboardRoutes;\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n// creates a beautiful scrollbar\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Navbar from \"components/Navbars/Navbar.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\n\nimport PropTypes from \"prop-types\";\n\nimport routes from \"HodRoutes.js\";\n\nimport styles from \"assets/jss/material-dashboard-react/layouts/adminStyle.js\";\n\nimport logo from \"assets/img/favicon.png\";\n\nlet ps;\n\nconst switchRoutes = (\n  <Switch>\n    {routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      }\n      return null;\n    })}\n    <Redirect from=\"/admin\" to=\"/admin/dashboard\" />\n  </Switch>\n);\n\nconst useStyles = makeStyles(styles);\n\nexport default function HodLayout({ ...rest }) {\n  // styles\n  const classes = useStyles();\n  // ref to help us initialize PerfectScrollbar on windows devices\n  const mainPanel = React.createRef();\n  // states and functions\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n  // const getRoute = () => {\n  //   return window.location.pathname !== \"/admin/user\";\n  // };\n  const resizeFunction = () => {\n    if (window.innerWidth >= 960) {\n      setMobileOpen(false);\n    }\n  };\n  // initialize and destroy the PerfectScrollbar plugin\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(mainPanel.current, {\n        suppressScrollX: true,\n        suppressScrollY: false,\n      });\n      document.body.style.overflow = \"hidden\";\n    }\n    window.addEventListener(\"resize\", resizeFunction);\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n      }\n      window.removeEventListener(\"resize\", resizeFunction);\n    };\n  }, [mainPanel]);\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.mainPanel} ref={mainPanel}>\n        {/* On the /maps route we want the map to be on full screen - this is not possible if the content and conatiner classes are present because they have some paddings which would make the map smaller */}\n\n        <Sidebar\n          routes={routes}\n          logoText={\"Marygiri\"}\n          logo={logo}\n          image=\"\"\n          handleDrawerToggle={handleDrawerToggle}\n          open={mobileOpen}\n          color=\"blue\"\n          {...rest}\n        />\n        <Navbar\n          setLoggedin={rest.setLoggedin}\n          routes={routes}\n          handleDrawerToggle={handleDrawerToggle}\n          {...rest}\n        />\n        <div className={classes.content}>\n          <div className={classes.container}>{switchRoutes}</div>\n        </div>\n\n        <Footer />\n      </div>\n    </div>\n  );\n}\nHodLayout.propTypes = {\n  userType: PropTypes.any,\n};\n","import { hexToRgb, blackColor } from \"assets/jss/material-dashboard-react.js\";\n\nconst cardAvatarStyle = {\n  cardAvatar: {\n    \"&$cardAvatarProfile img\": {\n      width: \"100%\",\n      height: \"auto\",\n    },\n  },\n\n  cardAvatarProfile: {\n    maxWidth: \"130px\",\n    maxHeight: \"130px\",\n    margin: \"-50px auto 0\",\n    borderRadius: \"50%\",\n    overflow: \"hidden\",\n    padding: \"0\",\n    boxShadow:\n      \"0 16px 38px -12px rgba(\" +\n      hexToRgb(blackColor) +\n      \", 0.56), 0 4px 25px 0px rgba(\" +\n      hexToRgb(blackColor) +\n      \", 0.12), 0 8px 10px -5px rgba(\" +\n      hexToRgb(blackColor) +\n      \", 0.2)\",\n    \"&$cardAvatarPlain\": {\n      marginTop: \"0\",\n    },\n  },\n  cardAvatarPlain: {},\n};\n\nexport default cardAvatarStyle;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// @material-ui/icons\n// core components\n\nimport styles from \"assets/jss/material-dashboard-react/components/cardAvatarStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CardAvatar(props) {\n  const classes = useStyles();\n  const { children, className, plain, profile, ...rest } = props;\n  const cardAvatarClasses = classNames({\n    [classes.cardAvatar]: true,\n    [classes.cardAvatarProfile]: profile,\n    [classes.cardAvatarPlain]: plain,\n    [className]: className !== undefined,\n  });\n  return (\n    <div className={cardAvatarClasses} {...rest}>\n      {children}\n    </div>\n  );\n}\n\nCardAvatar.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n  profile: PropTypes.bool,\n  plain: PropTypes.bool,\n};\n","export default __webpack_public_path__ + \"static/media/placeholder.afc96671.jpg\";","import React from \"react\";\n// @material-ui/core components\nimport PropTypes from \"prop-types\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardAvatar from \"components/Card/CardAvatar.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport { useLocation } from \"react-router-dom\";\nimport avatar from \"assets/img/placeholder.jpg\";\n\nconst styles = {\n  cardCategoryWhite: {\n    color: \"rgba(255,255,255,.62)\",\n    margin: \"0\",\n    fontSize: \"14px\",\n    marginTop: \"0\",\n    marginBottom: \"0\",\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function UserProfile({ userdetails }) {\n  const classes = useStyles();\n  let locations = useLocation();\n  console.log(\"user:\", userdetails, locations);\n  return (\n    <div>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={4}>\n          <Card profile>\n            <CardAvatar profile>\n              <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                <img src={avatar} alt=\"...\" />\n              </a>\n            </CardAvatar>\n            <CardBody profile>\n              <h6 className={classes.cardCategory}>CEO / CO-FOUNDER</h6>\n              <h4 className={classes.cardTitle}>Alec Thompson</h4>\n              <p className={classes.description}>\n                Don{\"'\"}t be scared of the truth because we need to restart the\n                human foundation in truth And I love you like Kanye loves Kanye\n                I love Rick Owens’ bed design but the back is...\n              </p>\n              <Button color=\"primary\" round>\n                Follow\n              </Button>\n            </CardBody>\n          </Card>\n        </GridItem>\n      </GridContainer>\n    </div>\n  );\n}\n\nUserProfile.propTypes = {\n  userdetails: PropTypes.any,\n};\n","import React, { useEffect } from \"react\";\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\n// core components\nimport Admin from \"layouts/Admin.js\";\n\nimport \"assets/css/material-dashboard-react.css?v=1.10.0\";\nimport LoginPage from \"layouts/LoginPage/LoginPage\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport StaffsLayout from \"layouts/StaffsLayout\";\nimport HodLayout from \"layouts/HodLayout\";\nimport UserProfile from \"views/UserProfile/UserProfile\";\nexport default function App() {\n  const [loggedIn, setLoggedin] = React.useState(false);\n  const [notify, setNotification] = React.useState(false);\n  const [bc, setBC] = React.useState(false);\n  const [userType, setUserType] = React.useState(\"\");\n\n  const [userdetails, setUserdetails] = React.useState([]);\n  const showNotification = () => {\n    if (!bc) {\n      setBC(true);\n      setTimeout(function () {\n        setBC(false);\n      }, 3000);\n    }\n  };\n  useEffect(() => {\n    console.log(userType);\n    if (notify) {\n      showNotification();\n    }\n  }, [notify, userType]);\n  return (\n    <>\n      <Snackbar\n        place=\"tr\"\n        color=\"success\"\n        icon={AddAlert}\n        message={\"Logged in as \" + userType}\n        open={bc}\n        closeNotification={() => setBC(false)}\n        close\n      />\n      <HashRouter>\n        <>\n          {loggedIn ? (\n            <div>\n              {(() => {\n                if (userType == \"Admin\") {\n                  return (\n                    <Switch>\n                      <Route path=\"/admin\">\n                        <Admin setLoggedin={setLoggedin} />\n                      </Route>\n                      <Route path=\"/user\">\n                        <UserProfile\n                          userdetails={userdetails}\n                          setLoggedin={setLoggedin}\n                        />\n                      </Route>\n                      <Redirect from=\"/\" to=\"/admin/dashboard\" />\n                    </Switch>\n                  );\n                } else if (userType == \"Staff\") {\n                  return (\n                    <Switch>\n                      <Route path=\"/admin\">\n                        <StaffsLayout setLoggedin={setLoggedin} />\n                      </Route>\n                      <Redirect from=\"/\" to=\"/admin/dashboard\" />\n                    </Switch>\n                  );\n                } else if (userType == \"HOD\") {\n                  return (\n                    <Switch>\n                      <Route path=\"/admin\">\n                        <HodLayout setLoggedin={setLoggedin} />\n                      </Route>\n                      <Redirect from=\"/\" to=\"/admin/dashboard\" />\n                    </Switch>\n                  );\n                }\n              })()}\n            </div>\n          ) : (\n            <Switch>\n              <Route path=\"/login\">\n                <LoginPage\n                  setLoggedin={setLoggedin}\n                  setNotification={setNotification}\n                  setUserType={setUserType}\n                  setUserdetails={setUserdetails}\n                />\n              </Route>\n\n              <Redirect from=\"/\" to=\"/login\" />\n            </Switch>\n          )}\n        </>\n      </HashRouter>\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// core components\n\nimport \"assets/css/material-dashboard-react.css?v=1.10.0\";\nimport App from \"App\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}
{"version":3,"sources":["assets/jss/material-dashboard-react.js","assets/jss/material-dashboard-react/components/buttonStyle.js","components/CustomButtons/Button.js","assets/jss/material-dashboard-react/dropdownStyle.js","assets/jss/material-dashboard-react/components/headerLinksStyle.js","components/Navbars/AdminNavbarLinks.js","assets/jss/material-dashboard-react/components/customInputStyle.js","components/CustomInput/CustomInput.js","assets/jss/material-dashboard-react/components/rtlHeaderLinksStyle.js","components/Navbars/RTLNavbarLinks.js","components/Grid/GridItem.js","components/Grid/GridContainer.js","assets/jss/material-dashboard-react/components/cardStyle.js","components/Card/Card.js","assets/jss/material-dashboard-react/components/cardHeaderStyle.js","components/Card/CardHeader.js","assets/jss/material-dashboard-react/components/cardIconStyle.js","components/Card/CardIcon.js","assets/jss/material-dashboard-react/components/cardBodyStyle.js","components/Card/CardBody.js","assets/jss/material-dashboard-react/components/cardFooterStyle.js","components/Card/CardFooter.js","assets/jss/material-dashboard-react/components/cardAvatarStyle.js","components/Card/CardAvatar.js","assets/jss/material-dashboard-react/views/dashboardStyle.js","Domain.js","assets/jss/material-dashboard-react/components/accordionStyle.js","components/Accordion/Accordion.js","assets/jss/material-dashboard-react/components/snackbarContentStyle.js","components/Snackbar/Snackbar.js","assets/jss/material-dashboard-react/components/typographyStyle.js","components/Typography/Danger.js","assets/jss/material-dashboard-react/components/customFileInputStyle.js","components/CustomFileInput/CustomFileInput.js","views/Admin/Admin.js","views/Dashboard/Dashboard.js","assets/jss/material-dashboard-react/components/tableStyle.js","components/Loader/Loader.js","components/Table/Table.js","assets/jss/material-dashboard-react/components/paginationStyle.js","components/Pagination/Pagination.js","views/Slideshow/Slideshow.js","views/Events/Events.js","views/Gallery/Gallery.js","components/SingleSelect.js","views/Courses/Courses.js","views/Testimonials/Testimonials.js","views/Students/Students.js","views/Publications/Publications.js","views/Subjects/Subjects.js","views/Semester/Semester.js","views/InternalMarks/InternalMarks.js","views/InternalsNotification/InternalsNotification.js","views/Placements/Placements.js","views/Enquiry/Enquiry.js","views/Departments/Departments.js","assets/jss/material-dashboard-react/components/navPillsStyle.js","components/NavPills/NavPills.js","views/Admission/Admission.js","components/EmptyTable.js","views/Clubs/Clubs.js","views/Facilities/Facilities.js","views/Management/Management.js","views/Sfatts/Staffs.js","components/Typography/Success.js","views/SendSMS/SendSMS.js","views/AdministrationPage/AdministrationPage.js","routes.js","assets/jss/material-dashboard-react/components/headerStyle.js","components/Navbars/Navbar.js","hooks/useRouteName.js","assets/jss/material-dashboard-react/components/footerStyle.js","components/Footer/Footer.js","assets/jss/material-dashboard-react/components/sidebarStyle.js","components/Sidebar/Sidebar.js","assets/jss/material-dashboard-react/layouts/adminStyle.js","layouts/Admin.js","assets/img/favicon.png","layouts/LoginPage/LoginPage.js","components/Snackbar/SnackbarContent.js","views/Students/StudentStaff.js","StaffRoutes.js","layouts/StaffsLayout.js","views/Students/StudentHOD.js","HodRoutes.js","layouts/HodLayout.js","assets/img/placeholder.jpg","views/UserProfile/UserProfile.js","App.js","index.js"],"names":["hexToRgb","input","replace","test","length","Error","first","second","last","toUpperCase","parseInt","drawerWidth","transition","container","paddingRight","paddingLeft","marginRight","marginLeft","defaultFont","fontFamily","fontWeight","lineHeight","primaryColor","warningColor","dangerColor","successColor","infoColor","roseColor","grayColor","blackColor","whiteColor","boxShadow","primaryBoxShadow","infoBoxShadow","successBoxShadow","warningBoxShadow","dangerBoxShadow","roseBoxShadow","warningCardHeader","background","successCardHeader","dangerCardHeader","infoCardHeader","primaryCardHeader","roseCardHeader","defaultBoxShadow","margin","paddingTop","borderTop","height","border","borderRadius","padding","title","color","textDecoration","marginTop","marginBottom","minHeight","buttonStyle","button","minWidth","backgroundColor","position","fontSize","textTransform","letterSpacing","willChange","textAlign","whiteSpace","verticalAlign","touchAction","cursor","display","top","width","transform","left","white","rose","primary","info","success","warning","danger","simple","transparent","disabled","opacity","pointerEvents","lg","sm","round","block","link","justIcon","useStyles","makeStyles","styles","RegularButton","props","classes","children","size","className","muiClasses","rest","btnClasses","classNames","Button","dropdownStyle","theme","buttonLink","breakpoints","down","links","zIndex","linkText","popperClose","popperResponsive","float","WebkitBoxShadow","popperNav","dropdown","listStyle","WebkitBackgroundClip","backgroundClip","dropdownItem","WebkitTransition","MozTransition","OTransition","MsTransition","clear","headerLinksStyle","search","paddingBottom","justifyContent","searchButton","searchIcon","notifications","up","right","manager","searchWrapper","AdminNavbarLinks","setLoggedin","React","useState","openNotification","setOpenNotification","openProfile","setOpenProfile","handleCloseNotification","handleCloseProfile","handleLogout","undefined","to","item","window","innerWidth","icons","Hidden","mdUp","implementation","onClick","event","contains","target","currentTarget","Popper","open","Boolean","anchorEl","disablePortal","TransitionProps","placement","Grow","id","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","role","MenuItem","customInputStyle","underline","borderColor","borderWidth","underlineError","underlineSuccess","labelRoot","labelRootError","labelRootSuccess","feedback","formControl","labelRTL","CustomInput","formControlProps","labelText","labelProps","inputProps","error","rtlActive","value","onChange","type","labelClasses","underlineClasses","newInputProps","maxLength","minLength","step","FormControl","InputLabel","htmlFor","Input","root","RTLNavbarLinks","setOpen","handleToggle","handleClose","placeholder","grid","GridItem","Grid","GridContainer","cardStyle","card","flexDirection","wordWrap","cardPlain","cardProfile","cardChart","Card","plain","profile","chart","cardClasses","cardHeaderStyle","cardHeader","borderBottom","overflow","cardHeaderPlain","cardHeaderStats","cardHeaderIcon","CardHeader","stats","icon","cardHeaderClasses","cardIconStyle","cardIcon","CardIcon","cardIconClasses","cardBodyStyle","cardBody","flex","WebkitBoxFlex","cardBodyPlain","cardBodyProfile","CardBody","cardBodyClasses","cardFooterStyle","cardFooter","alignItems","cardFooterProfile","cardFooterPlain","cardFooterStats","cardFooterChart","CardFooter","cardFooterClasses","cardAvatarStyle","cardAvatar","cardAvatarProfile","maxWidth","maxHeight","cardAvatarPlain","CardAvatar","cardAvatarClasses","dashboardStyle","proBadge","successText","upArrowCardCategory","cardCategory","cardCategoryWhite","cardTitle","cardTitleWhite","Domain","accordionStyle","flexGrow","expansionPanel","expansionPanelExpanded","expansionPanelSummary","borderTopLeftRadius","borderTopRightRadius","primaryExpansionPanelSummary","secondaryExpansionPanelSummary","warningExpansionPanelSummary","dangerExpansionPanelSummary","successExpansionPanelSummary","infoExpansionPanelSummary","roseExpansionPanelSummary","expansionPanelSummaryExpaned","primaryExpansionPanelSummaryExpaned","secondaryExpansionPanelSummaryExpaned","warningExpansionPanelSummaryExpaned","dangerExpansionPanelSummaryExpaned","successExpansionPanelSummaryExpaned","infoExpansionPanelSummaryExpaned","roseExpansionPanelSummaryExpaned","expansionPanelSummaryContent","expansionPanelSummaryExpandIcon","expansionPanelSummaryExpandIconExpanded","expansionPanelDetails","Accordion","active","setActive","single","collapses","activeColor","map","prop","key","ExpansionPanel","expanded","indexOf","panel","newArray","splice","ExpansionPanelSummary","expandIcon","content","ExpansionPanelDetails","defaultProps","snackbarContentStyle","flexWrap","top20","top40","message","close","iconButton","infoIcon","successIcon","warningIcon","dangerIcon","primaryIcon","roseIcon","iconMessage","actionRTL","Snackbar","place","action","messageClasses","IconButton","closeNotification","anchorOrigin","vertical","horizontal","ContentProps","typographyStyle","defaultFontStyle","defaultHeaderMargins","quote","borderLeft","quoteText","fontStyle","quoteAuthor","mutedText","primaryText","infoText","warningText","dangerText","Danger","customFileInputStyle","inputFile","bottom","inputFileWrapper","CustomFileInput","buttonStart","buttonEnd","fileNames","setFileNames","hiddenFile","createRef","endButton","startButton","multiple","saved","buttonProps","text","ref","e","files","i","name","setFiles","current","click","endAdornment","startAdornment","Admin","setSaved","validated","setValidated","uploaded","setUploaded","saving","setSaving","viewData","setViewData","Id","FullName","Email","Status","Image","Password","data","setData","passEdit","HandleData","newData","console","log","HandleSave","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","Success","localStorage","setItem","Data","setTimeout","useEffect","AddAlert","spinner","xs","md","fullWidth","filebutton","form_data","FormData","append","axios","post","res","catch","err","Dashboard","userData","parse","getItem","admin","setAdmin","edit","setEdit","Usertype","Icon","href","preventDefault","src","alt","CourseName","UserType","DOB","Gender","HouseName","Mobile","Qualifications","Achievements","AreaOfInterest","City","District","State","Country","PostOffice","PostalCode","DepartmentName","tableStyle","warningTableHeader","primaryTableHeader","dangerTableHeader","successTableHeader","infoTableHeader","roseTableHeader","grayTableHeader","table","borderSpacing","borderCollapse","tableHeadCell","tableCell","tableCellImage","tableResponsive","spacing","overflowX","tableHeadRow","outline","tableBodyRow","useStylesFacebook","palette","grey","animationDuration","circle","strokeLinecap","FacebookCircularProgress","CircularProgress","variant","thickness","disableShrink","Loader","CustomTable","tableHead","tableData","tableHeaderColor","setDelete","loading","justify","Table","TableHead","TableRow","TableCell","TableBody","Object","values","paginationStyle","pagination","paginationItem","paginationLink","marginleft","boxSizing","Pagination","pages","TotalCount","count","setCount","paginationClasses","HandlePrev","pageIndex","setPageIndex","HandleNext","SingleSelect","Options","setValue","noOptionMessage","selected","setSelected","noOptionsMessage","isSearchable","options","Label","label","Courses","deleted","setDeleted","deletee","events","setEvents","setLoading","deleting","setDeleting","empty","setEmpty","departments","setDepartments","DepartmentList","d","DepartmentValues","setDepartmentValues","DepartmentId","PageIndex","PageSize","Coursedata","CourseCode","CourseDuration","Description","Eligibility","Semesters","Syllabus","passData","passDelete","DeletedBy","setTotalCount","setPagination","Math","ceil","multiline","rows","textCenter","justifyContentCenter","Subjects","setCourses","semesters","setSemesters","CourseValues","setCourseValues","SemesterValues","setSemesterValues","CourseList","SemesterList","SemesterNo","Subjectdata","SubjectName","SubjectCode","CourseId","SemesterId","passData1","passCourseId","Semester","Semesterdata","SemesterDuration","InternalMarks","Date","StudentId","Note","ClassNo","StudentName","MarkList","Files","InternalsNotification","InternalNotedata","navPillsStyle","flexContainer","displayNone","fixed","horizontalDisplay","pills","pillsWithIcons","tabIcon","horizontalPills","contentWrapper","alignCenter","tabLabelContainer","NavPills","tabs","direction","flexContainerClasses","tabButtons","Tabs","indicator","centered","pillsClasses","Tab","tabButton","tabContent","axis","index","onChangeIndex","tabsGrid","contentGrid","EmptyTable","cardCategoryGrey","dashboardRoutes","path","component","DashboardPage","layout","edit1","setEdit1","edit2","setEdit2","requested","setRequested","waitingList","setWaitingList","admitted","setAdmitted","empty1","setEmpty1","empty2","setEmpty2","Setview","setStep","stepChangeData","setStepChangeData","stepChangeData1","setStepChangeData1","stepChangeData2","setStepChangeData2","HandleView","ReqData","AdmissionNo","FirstName","Course","FathersName","FatherMobile","WaitData","AdmData","Year","Step","passData2","passData3","passEdit1","passEdit2","mainPrice","StudentMobile","RegistrationNo","pullRight","LastStatus","StatusList","ClearAllIcon","Departdata","HeadName","LockIcon","PeopleIcon","scrollTo","document","scrollTop","AddStaff","setAddStaff","StaffData","departmentValues","usertype","setUsertype","departmentList","AddressType","Street","ViewCarouselIcon","Sildedata","Name","Quote","ButtonLink","ButtonText","DateRangeIcon","Eventslist","Venue","CommentIcon","Saving","insertionError","setinsertionError","Testdata","Message","PhotoLibraryIcon","Gallerydata","FileCopyIcon","ListIcon","MenuBookIcon","SupervisedUserCircleIcon","addStudent","setAddstudent","validateFilter","setValidateFilter","filterData","setFilterData","CourseValues1","setCourseValues1","Studentdata","GuardianName","GuardianMobile","GuardianRelation","AddStudent","HandleClear","PassId","HandleFilterData","MailIcon","sizeOfArray","setSizeOfArray","messageData","setMessageData","HandleFilter","HandleMessageData","CalendarViewDayIcon","Clubsdata","Link","StaffId","BusinessIcon","errors","setError","Facilitiesdata","admintypeValues","setadmintypeValues","AdminTypeId","AdminType","Position","BusinessCenterIcon","Managedata","Post","LibraryBooksIcon","Publicdata","PublishedBy","PublishedDate","Notifications","VerticalSplitIcon","AssignmentIcon","Placementdata","Company","EmailIcon","viewEnquiry","setViewEnquiry","Enquirydata","headerStyle","appBar","appResponsive","Header","routeName","routes","forEach","route","location","rtlName","useRouteName","appBarClasses","AppBar","Toolbar","smDown","handleDrawerToggle","footerStyle","footer","a","list","inlineBlock","Footer","getYear","sidebarStyle","drawerPaper","visibility","overflowY","drawerPaperRTL","logo","logoLink","logoLinkRTL","logoImage","img","backgroundSize","backgroundPosition","itemLink","itemIcon","itemIconRTL","itemText","itemTextRTL","whiteFont","purple","blue","green","orange","red","sidebarWrapper","overflowScrolling","activePro","Sidebar","useLocation","activeRoute","pathname","image","logoText","userdetails","listItemClasses","whiteFontClasses","aboutProps","activeClassName","ListItem","ListItemText","disableTypography","brand","Drawer","anchor","paper","onClose","ModalProps","keepMounted","backgroundImage","ps","appStyle","wrapper","mainPanel","switchRoutes","from","mobileOpen","setMobileOpen","resizeFunction","navigator","platform","PerfectScrollbar","suppressScrollX","suppressScrollY","addEventListener","destroy","removeEventListener","cardCategoryRed","LoginPage","setNotification","setUserType","setUserdetails","Username","invalid","setInvalid","SnackbarContent","validateEmpty","setvalidateEmpty","generating","setGenerating","classNumber","setClassNumber","alreadygenerated","setAllreadyGenerated","TotalStudents","setTotalStudents","generated","setGenerated","Warning","StaffsLayout","HodLayout","UserProfile","locations","avatar","description","App","loggedIn","notify","bc","setBC","userType","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1d79db5c.chunk.js","sourcesContent":["/*!\n\n =========================================================\n * Material Dashboard React - v1.10.0 based on Material Dashboard - v1.2.0\n =========================================================\n\n * Product Page: http://www.creative-tim.com/product/material-dashboard-react\n * Copyright 2021 Creative Tim (http://www.creative-tim.com)\n * Licensed under MIT (https://github.com/creativetimofficial/material-dashboard-react/blob/master/LICENSE.md)\n\n =========================================================\n\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n */\n\n// ##############################\n// // // Function that converts from hex color to rgb color\n// // // Example: input = #9c27b0 => output = 156, 39, 176\n// // // Example: input = 9c27b0 => output = 156, 39, 176\n// // // Example: input = #999 => output = 153, 153, 153\n// // // Example: input = 999 => output = 153, 153, 153\n// #############################\nconst hexToRgb = (input) => {\n  input = input + \"\";\n  input = input.replace(\"#\", \"\");\n  let hexRegex = /[0-9A-Fa-f]/g;\n  if (!hexRegex.test(input) || (input.length !== 3 && input.length !== 6)) {\n    throw new Error(\"input is not a valid hex color.\");\n  }\n  if (input.length === 3) {\n    let first = input[0];\n    let second = input[1];\n    let last = input[2];\n    input = first + first + second + second + last + last;\n  }\n  input = input.toUpperCase();\n  let first = input[0] + input[1];\n  let second = input[2] + input[3];\n  let last = input[4] + input[5];\n  return (\n    parseInt(first, 16) +\n    \", \" +\n    parseInt(second, 16) +\n    \", \" +\n    parseInt(last, 16)\n  );\n};\n\n// ##############################\n// // // Variables - Styles that are used on more than one component\n// #############################\n\nconst drawerWidth = 260;\n\nconst transition = {\n  transition: \"all 0.33s cubic-bezier(0.685, 0.0473, 0.346, 1)\",\n};\nconst description = {\n  color: grayColor,\n};\nconst container = {\n  paddingRight: \"15px\",\n  paddingLeft: \"15px\",\n  marginRight: \"auto\",\n  marginLeft: \"auto\",\n};\n\nconst defaultFont = {\n  fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n  fontWeight: \"300\",\n  lineHeight: \"1.5em\",\n};\n\nconst primaryColor = [\"#9c27b0\", \"#ab47bc\", \"#8e24aa\", \"#af2cc5\"];\nconst warningColor = [\"#ff9800\", \"#ffa726\", \"#fb8c00\", \"#ffa21a\"];\nconst dangerColor = [\"#f44336\", \"#ef5350\", \"#e53935\", \"#f55a4e\"];\nconst successColor = [\"#4caf50\", \"#66bb6a\", \"#43a047\", \"#5cb860\"];\nconst infoColor = [\"#00acc1\", \"#26c6da\", \"#00acc1\", \"#00d3ee\"];\nconst roseColor = [\"#e91e63\", \"#ec407a\", \"#d81b60\", \"#eb3573\"];\nconst grayColor = [\n  \"#999\",\n  \"#777\",\n  \"#3C4858\",\n  \"#AAAAAA\",\n  \"#D2D2D2\",\n  \"#DDD\",\n  \"#b4b4b4\",\n  \"#555555\",\n  \"#333\",\n  \"#a9afbb\",\n  \"#eee\",\n  \"#e7e7e7\",\n];\nconst blackColor = \"#000\";\nconst whiteColor = \"#FFF\";\n\nconst boxShadow = {\n  boxShadow:\n    \"0 10px 30px -12px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.42), 0 4px 25px 0px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.12), 0 8px 10px -5px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.2)\",\n};\n\nconst primaryBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0 rgba(\" +\n    hexToRgb(blackColor) +\n    \",.14), 0 7px 10px -5px rgba(\" +\n    hexToRgb(primaryColor[0]) +\n    \",.4)\",\n};\nconst infoBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0 rgba(\" +\n    hexToRgb(blackColor) +\n    \",.14), 0 7px 10px -5px rgba(\" +\n    hexToRgb(infoColor[0]) +\n    \",.4)\",\n};\nconst successBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0 rgba(\" +\n    hexToRgb(blackColor) +\n    \",.14), 0 7px 10px -5px rgba(\" +\n    hexToRgb(successColor[0]) +\n    \",.4)\",\n};\nconst warningBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0 rgba(\" +\n    hexToRgb(blackColor) +\n    \",.14), 0 7px 10px -5px rgba(\" +\n    hexToRgb(warningColor[0]) +\n    \",.4)\",\n};\nconst dangerBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0 rgba(\" +\n    hexToRgb(blackColor) +\n    \",.14), 0 7px 10px -5px rgba(\" +\n    hexToRgb(dangerColor[0]) +\n    \",.4)\",\n};\nconst roseBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0 rgba(\" +\n    hexToRgb(blackColor) +\n    \",.14), 0 7px 10px -5px rgba(\" +\n    hexToRgb(roseColor[0]) +\n    \",.4)\",\n};\n\nconst warningCardHeader = {\n  background:\n    \"linear-gradient(60deg, \" + warningColor[1] + \", \" + warningColor[2] + \")\",\n  ...warningBoxShadow,\n};\nconst successCardHeader = {\n  background:\n    \"linear-gradient(60deg, \" + successColor[1] + \", \" + successColor[2] + \")\",\n  ...successBoxShadow,\n};\nconst dangerCardHeader = {\n  background:\n    \"linear-gradient(60deg, \" + dangerColor[1] + \", \" + dangerColor[2] + \")\",\n  ...dangerBoxShadow,\n};\nconst infoCardHeader = {\n  background:\n    \"linear-gradient(60deg, \" + infoColor[1] + \", \" + infoColor[2] + \")\",\n  ...infoBoxShadow,\n};\nconst primaryCardHeader = {\n  background:\n    \"linear-gradient(60deg, \" + primaryColor[1] + \", \" + primaryColor[2] + \")\",\n  ...primaryBoxShadow,\n};\nconst roseCardHeader = {\n  background:\n    \"linear-gradient(60deg, \" + roseColor[1] + \", \" + roseColor[2] + \")\",\n  ...roseBoxShadow,\n};\n\nconst cardActions = {\n  margin: \"0 20px 10px\",\n  paddingTop: \"10px\",\n  borderTop: \"1px solid \" + grayColor[10],\n  height: \"auto\",\n  ...defaultFont,\n};\n\nconst cardHeader = {\n  margin: \"-20px 15px 0\",\n  borderRadius: \"3px\",\n  padding: \"15px\",\n};\n\nconst card = {\n  display: \"inline-block\",\n  position: \"relative\",\n  width: \"100%\",\n  margin: \"25px 0\",\n  boxShadow: \"0 1px 4px 0 rgba(\" + hexToRgb(blackColor) + \", 0.14)\",\n  borderRadius: \"3px\",\n  color: \"rgba(\" + hexToRgb(blackColor) + \", 0.87)\",\n  background: whiteColor,\n};\n\nconst defaultBoxShadow = {\n  border: \"0\",\n  borderRadius: \"3px\",\n  boxShadow:\n    \"0 10px 20px -12px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.42), 0 3px 20px 0px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.12), 0 8px 10px -5px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.2)\",\n  padding: \"10px 0\",\n  transition: \"all 150ms ease 0s\",\n};\n\nconst title = {\n  color: grayColor[2],\n  textDecoration: \"none\",\n  fontWeight: \"300\",\n  marginTop: \"30px\",\n  marginBottom: \"25px\",\n  minHeight: \"32px\",\n  fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n  \"& small\": {\n    color: grayColor[1],\n    fontWeight: \"400\",\n    lineHeight: \"1\",\n  },\n};\n\nconst cardTitle = {\n  ...title,\n  marginTop: \"0\",\n  marginBottom: \"3px\",\n  minHeight: \"auto\",\n  \"& a\": {\n    ...title,\n    marginTop: \".625rem\",\n    marginBottom: \"0.75rem\",\n    minHeight: \"auto\",\n  },\n};\n\nconst cardSubtitle = {\n  marginTop: \"-.375rem\",\n};\n\nconst cardLink = {\n  \"& + $cardLink\": {\n    marginLeft: \"1.25rem\",\n  },\n};\n\nexport {\n  hexToRgb,\n  //variables\n  drawerWidth,\n  transition,\n  container,\n  boxShadow,\n  card,\n  defaultFont,\n  primaryColor,\n  warningColor,\n  dangerColor,\n  successColor,\n  infoColor,\n  roseColor,\n  grayColor,\n  blackColor,\n  whiteColor,\n  primaryBoxShadow,\n  infoBoxShadow,\n  successBoxShadow,\n  warningBoxShadow,\n  dangerBoxShadow,\n  roseBoxShadow,\n  warningCardHeader,\n  successCardHeader,\n  dangerCardHeader,\n  infoCardHeader,\n  primaryCardHeader,\n  roseCardHeader,\n  cardActions,\n  cardHeader,\n  defaultBoxShadow,\n  title,\n  cardTitle,\n  cardSubtitle,\n  cardLink,\n  description,\n};\n","import {\n  grayColor,\n  primaryColor,\n  infoColor,\n  successColor,\n  warningColor,\n  dangerColor,\n  roseColor,\n  whiteColor,\n  blackColor,\n  hexToRgb,\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst buttonStyle = {\n  button: {\n    minHeight: \"auto\",\n    minWidth: \"auto\",\n    backgroundColor: grayColor[0],\n    color: whiteColor,\n    boxShadow:\n      \"0 2px 2px 0 rgba(\" +\n      hexToRgb(grayColor[0]) +\n      \", 0.14), 0 3px 1px -2px rgba(\" +\n      hexToRgb(grayColor[0]) +\n      \", 0.2), 0 1px 5px 0 rgba(\" +\n      hexToRgb(grayColor[0]) +\n      \", 0.12)\",\n    border: \"none\",\n    borderRadius: \"3px\",\n    position: \"relative\",\n    padding: \"12px 30px\",\n    margin: \".3125rem 1px\",\n    fontSize: \"12px\",\n    fontWeight: \"400\",\n    textTransform: \"uppercase\",\n    letterSpacing: \"0\",\n    willChange: \"box-shadow, transform\",\n    transition:\n      \"box-shadow 0.2s cubic-bezier(0.4, 0, 1, 1), background-color 0.2s cubic-bezier(0.4, 0, 0.2, 1)\",\n    lineHeight: \"1.42857143\",\n    textAlign: \"center\",\n    whiteSpace: \"nowrap\",\n    verticalAlign: \"middle\",\n    touchAction: \"manipulation\",\n    cursor: \"pointer\",\n    \"&:hover,&:focus\": {\n      color: whiteColor,\n      backgroundColor: grayColor[0],\n      boxShadow:\n        \"0 14px 26px -12px rgba(\" +\n        hexToRgb(grayColor[0]) +\n        \", 0.42), 0 4px 23px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.12), 0 8px 10px -5px rgba(\" +\n        hexToRgb(grayColor[0]) +\n        \", 0.2)\",\n    },\n    \"& .fab,& .fas,& .far,& .fal, &.material-icons\": {\n      position: \"relative\",\n      display: \"inline-block\",\n      top: \"0\",\n      marginTop: \"-1em\",\n      marginBottom: \"-1em\",\n      fontSize: \"1.1rem\",\n      marginRight: \"4px\",\n      verticalAlign: \"middle\",\n    },\n    \"& svg\": {\n      position: \"relative\",\n      display: \"inline-block\",\n      top: \"0\",\n      width: \"18px\",\n      height: \"18px\",\n      marginRight: \"4px\",\n      verticalAlign: \"middle\",\n    },\n    \"&$justIcon\": {\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\n        marginTop: \"0px\",\n        position: \"absolute\",\n        width: \"100%\",\n        transform: \"none\",\n        left: \"0px\",\n        top: \"0px\",\n        height: \"100%\",\n        lineHeight: \"41px\",\n        fontSize: \"20px\",\n      },\n    },\n  },\n  white: {\n    \"&,&:focus,&:hover\": {\n      backgroundColor: whiteColor,\n      color: grayColor[0],\n    },\n  },\n  rose: {\n    backgroundColor: roseColor[0],\n    boxShadow:\n      \"0 2px 2px 0 rgba(\" +\n      hexToRgb(roseColor[0]) +\n      \", 0.14), 0 3px 1px -2px rgba(\" +\n      hexToRgb(roseColor[0]) +\n      \", 0.2), 0 1px 5px 0 rgba(\" +\n      hexToRgb(roseColor[0]) +\n      \", 0.12)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: roseColor[0],\n      boxShadow:\n        \"0 14px 26px -12px rgba(\" +\n        hexToRgb(roseColor[0]) +\n        \", 0.42), 0 4px 23px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.12), 0 8px 10px -5px rgba(\" +\n        hexToRgb(roseColor[0]) +\n        \", 0.2)\",\n    },\n  },\n  primary: {\n    backgroundColor: primaryColor[0],\n    boxShadow:\n      \"0 2px 2px 0 rgba(\" +\n      hexToRgb(primaryColor[0]) +\n      \", 0.14), 0 3px 1px -2px rgba(\" +\n      hexToRgb(primaryColor[0]) +\n      \", 0.2), 0 1px 5px 0 rgba(\" +\n      hexToRgb(primaryColor[0]) +\n      \", 0.12)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: primaryColor[0],\n      boxShadow:\n        \"0 14px 26px -12px rgba(\" +\n        hexToRgb(primaryColor[0]) +\n        \", 0.42), 0 4px 23px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.12), 0 8px 10px -5px rgba(\" +\n        hexToRgb(primaryColor[0]) +\n        \", 0.2)\",\n    },\n  },\n  info: {\n    backgroundColor: infoColor[0],\n    boxShadow:\n      \"0 2px 2px 0 rgba(\" +\n      hexToRgb(infoColor[0]) +\n      \", 0.14), 0 3px 1px -2px rgba(\" +\n      hexToRgb(infoColor[0]) +\n      \", 0.2), 0 1px 5px 0 rgba(\" +\n      hexToRgb(infoColor[0]) +\n      \", 0.12)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: infoColor[0],\n      boxShadow:\n        \"0 14px 26px -12px rgba(\" +\n        hexToRgb(infoColor[0]) +\n        \", 0.42), 0 4px 23px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.12), 0 8px 10px -5px rgba(\" +\n        hexToRgb(infoColor[0]) +\n        \", 0.2)\",\n    },\n  },\n  success: {\n    backgroundColor: successColor[0],\n    boxShadow:\n      \"0 2px 2px 0 rgba(\" +\n      hexToRgb(successColor[0]) +\n      \", 0.14), 0 3px 1px -2px rgba(\" +\n      hexToRgb(successColor[0]) +\n      \", 0.2), 0 1px 5px 0 rgba(\" +\n      hexToRgb(successColor[0]) +\n      \", 0.12)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: successColor[0],\n      boxShadow:\n        \"0 14px 26px -12px rgba(\" +\n        hexToRgb(successColor[0]) +\n        \", 0.42), 0 4px 23px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.12), 0 8px 10px -5px rgba(\" +\n        hexToRgb(successColor[0]) +\n        \", 0.2)\",\n    },\n  },\n  warning: {\n    backgroundColor: warningColor[0],\n    boxShadow:\n      \"0 2px 2px 0 rgba(\" +\n      hexToRgb(warningColor[0]) +\n      \", 0.14), 0 3px 1px -2px rgba(\" +\n      hexToRgb(warningColor[0]) +\n      \", 0.2), 0 1px 5px 0 rgba(\" +\n      hexToRgb(warningColor[0]) +\n      \", 0.12)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: warningColor[0],\n      boxShadow:\n        \"0 14px 26px -12px rgba(\" +\n        hexToRgb(warningColor[0]) +\n        \", 0.42), 0 4px 23px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.12), 0 8px 10px -5px rgba(\" +\n        hexToRgb(warningColor[0]) +\n        \", 0.2)\",\n    },\n  },\n  danger: {\n    backgroundColor: dangerColor[0],\n    boxShadow:\n      \"0 2px 2px 0 rgba(\" +\n      hexToRgb(dangerColor[0]) +\n      \", 0.14), 0 3px 1px -2px rgba(\" +\n      hexToRgb(dangerColor[0]) +\n      \", 0.2), 0 1px 5px 0 rgba(\" +\n      hexToRgb(dangerColor[0]) +\n      \", 0.12)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: dangerColor[0],\n      boxShadow:\n        \"0 14px 26px -12px rgba(\" +\n        hexToRgb(dangerColor[0]) +\n        \", 0.42), 0 4px 23px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.12), 0 8px 10px -5px rgba(\" +\n        hexToRgb(dangerColor[0]) +\n        \", 0.2)\",\n    },\n  },\n  simple: {\n    \"&,&:focus,&:hover\": {\n      color: whiteColor,\n      background: \"transparent\",\n      boxShadow: \"none\",\n    },\n    \"&$rose\": {\n      \"&,&:focus,&:hover,&:visited\": {\n        color: roseColor[0],\n      },\n    },\n    \"&$primary\": {\n      \"&,&:focus,&:hover,&:visited\": {\n        color: primaryColor[0],\n      },\n    },\n    \"&$info\": {\n      \"&,&:focus,&:hover,&:visited\": {\n        color: infoColor[0],\n      },\n    },\n    \"&$success\": {\n      \"&,&:focus,&:hover,&:visited\": {\n        color: successColor[0],\n      },\n    },\n    \"&$warning\": {\n      \"&,&:focus,&:hover,&:visited\": {\n        color: warningColor[0],\n      },\n    },\n    \"&$danger\": {\n      \"&,&:focus,&:hover,&:visited\": {\n        color: dangerColor[0],\n      },\n    },\n  },\n  transparent: {\n    \"&,&:focus,&:hover\": {\n      color: \"inherit\",\n      background: \"transparent\",\n      boxShadow: \"none\",\n    },\n  },\n  disabled: {\n    opacity: \"0.65\",\n    pointerEvents: \"none\",\n  },\n  lg: {\n    padding: \"1.125rem 2.25rem\",\n    fontSize: \"0.875rem\",\n    lineHeight: \"1.333333\",\n    borderRadius: \"0.2rem\",\n  },\n  sm: {\n    padding: \"0.40625rem 1.25rem\",\n    fontSize: \"0.6875rem\",\n    lineHeight: \"1.5\",\n    borderRadius: \"0.2rem\",\n  },\n  round: {\n    borderRadius: \"30px\",\n  },\n  block: {\n    width: \"100% !important\",\n  },\n  link: {\n    \"&,&:hover,&:focus\": {\n      backgroundColor: \"transparent\",\n      color: grayColor[0],\n      boxShadow: \"none\",\n    },\n  },\n  justIcon: {\n    paddingLeft: \"12px\",\n    paddingRight: \"12px\",\n    fontSize: \"20px\",\n    height: \"41px\",\n    minWidth: \"41px\",\n    width: \"41px\",\n    \"& .fab,& .fas,& .far,& .fal,& svg,& .material-icons\": {\n      marginRight: \"0px\",\n    },\n    \"&$lg\": {\n      height: \"57px\",\n      minWidth: \"57px\",\n      width: \"57px\",\n      lineHeight: \"56px\",\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\n        fontSize: \"32px\",\n        lineHeight: \"56px\",\n      },\n      \"& svg\": {\n        width: \"32px\",\n        height: \"32px\",\n      },\n    },\n    \"&$sm\": {\n      height: \"30px\",\n      minWidth: \"30px\",\n      width: \"30px\",\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\n        fontSize: \"17px\",\n        lineHeight: \"29px\",\n      },\n      \"& svg\": {\n        width: \"17px\",\n        height: \"17px\",\n      },\n    },\n  },\n};\n\nexport default buttonStyle;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n\n// material-ui components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\nimport styles from \"assets/jss/material-dashboard-react/components/buttonStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function RegularButton(props) {\n  const classes = useStyles();\n  const {\n    color,\n    round,\n    children,\n    disabled,\n    simple,\n    size,\n    block,\n    link,\n    justIcon,\n    className,\n    muiClasses,\n    ...rest\n  } = props;\n  const btnClasses = classNames({\n    [classes.button]: true,\n    [classes[size]]: size,\n    [classes[color]]: color,\n    [classes.round]: round,\n    [classes.disabled]: disabled,\n    [classes.simple]: simple,\n    [classes.block]: block,\n    [classes.link]: link,\n    [classes.justIcon]: justIcon,\n    [className]: className,\n  });\n  return (\n    <Button {...rest} classes={muiClasses} className={btnClasses}>\n      {children}\n    </Button>\n  );\n}\n\nRegularButton.propTypes = {\n  color: PropTypes.oneOf([\n    \"primary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"danger\",\n    \"rose\",\n    \"white\",\n    \"transparent\",\n  ]),\n  size: PropTypes.oneOf([\"sm\", \"lg\"]),\n  simple: PropTypes.bool,\n  round: PropTypes.bool,\n  disabled: PropTypes.bool,\n  block: PropTypes.bool,\n  link: PropTypes.bool,\n  justIcon: PropTypes.bool,\n  className: PropTypes.string,\n  // use this to pass the classes props from Material-UI\n  muiClasses: PropTypes.object,\n  children: PropTypes.node,\n};\n","import {\n  primaryColor,\n  whiteColor,\n  primaryBoxShadow,\n  defaultFont,\n  blackColor,\n  grayColor,\n  hexToRgb,\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst dropdownStyle = (theme) => ({\n  buttonLink: {\n    [theme.breakpoints.down(\"md\")]: {\n      display: \"flex\",\n      marginLeft: \"30px\",\n      width: \"auto\",\n    },\n  },\n  links: {\n    width: \"20px\",\n    height: \"20px\",\n    zIndex: \"4\",\n    [theme.breakpoints.down(\"md\")]: {\n      display: \"block\",\n      width: \"30px\",\n      height: \"30px\",\n      color: grayColor[9],\n      marginRight: \"15px\",\n    },\n  },\n  linkText: {\n    zIndex: \"4\",\n    ...defaultFont,\n    fontSize: \"14px\",\n  },\n  popperClose: {\n    pointerEvents: \"none\",\n  },\n  popperResponsive: {\n    [theme.breakpoints.down(\"md\")]: {\n      zIndex: \"1640\",\n      position: \"static\",\n      float: \"none\",\n      width: \"auto\",\n      marginTop: \"0\",\n      backgroundColor: \"transparent\",\n      border: \"0\",\n      WebkitBoxShadow: \"none\",\n      boxShadow: \"none\",\n      color: \"black\",\n    },\n  },\n  popperNav: {\n    [theme.breakpoints.down(\"sm\")]: {\n      position: \"static !important\",\n      left: \"unset !important\",\n      top: \"unset !important\",\n      transform: \"none !important\",\n      willChange: \"unset !important\",\n      \"& > div\": {\n        boxShadow: \"none !important\",\n        marginLeft: \"0rem\",\n        marginRight: \"0rem\",\n        transition: \"none !important\",\n        marginTop: \"0px !important\",\n        marginBottom: \"0px !important\",\n        padding: \"0px !important\",\n        backgroundColor: \"transparent !important\",\n        \"& ul li\": {\n          color: whiteColor + \" !important\",\n          margin: \"10px 15px 0!important\",\n          padding: \"10px 15px !important\",\n          \"&:hover\": {\n            backgroundColor: \"hsla(0,0%,78%,.2)\",\n            boxShadow: \"none\",\n          },\n        },\n      },\n    },\n  },\n  dropdown: {\n    borderRadius: \"3px\",\n    border: \"0\",\n    boxShadow: \"0 2px 5px 0 rgba(\" + hexToRgb(blackColor) + \", 0.26)\",\n    top: \"100%\",\n    zIndex: \"1000\",\n    minWidth: \"160px\",\n    padding: \"5px 0\",\n    margin: \"2px 0 0\",\n    fontSize: \"14px\",\n    textAlign: \"left\",\n    listStyle: \"none\",\n    backgroundColor: whiteColor,\n    WebkitBackgroundClip: \"padding-box\",\n    backgroundClip: \"padding-box\",\n  },\n  dropdownItem: {\n    ...defaultFont,\n    fontSize: \"13px\",\n    padding: \"10px 20px\",\n    margin: \"0 5px\",\n    borderRadius: \"2px\",\n    WebkitTransition: \"all 150ms linear\",\n    MozTransition: \"all 150ms linear\",\n    OTransition: \"all 150ms linear\",\n    MsTransition: \"all 150ms linear\",\n    transition: \"all 150ms linear\",\n    display: \"block\",\n    clear: \"both\",\n    fontWeight: \"400\",\n    lineHeight: \"1.42857143\",\n    color: grayColor[8],\n    whiteSpace: \"nowrap\",\n    height: \"unset\",\n    minHeight: \"unset\",\n    \"&:hover\": {\n      backgroundColor: primaryColor[0],\n      color: whiteColor,\n      ...primaryBoxShadow,\n    },\n  },\n});\n\nexport default dropdownStyle;\n","import {\n  defaultFont,\n  dangerColor,\n  whiteColor,\n} from \"assets/jss/material-dashboard-react.js\";\n\nimport dropdownStyle from \"assets/jss/material-dashboard-react/dropdownStyle.js\";\n\nconst headerLinksStyle = (theme) => ({\n  ...dropdownStyle(theme),\n  search: {\n    \"& > div\": {\n      marginTop: \"0\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: \"10px 15px !important\",\n      float: \"none !important\",\n      paddingTop: \"1px\",\n      paddingBottom: \"1px\",\n      padding: \"0!important\",\n      width: \"60%\",\n      marginTop: \"40px\",\n      \"& input\": {\n        color: whiteColor,\n      },\n    },\n  },\n  linkText: {\n    zIndex: \"4\",\n    ...defaultFont,\n    fontSize: \"14px\",\n    margin: \"0px\",\n  },\n  buttonLink: {\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"flex\",\n      margin: \"10px 15px 0\",\n      width: \"-webkit-fill-available\",\n      \"& svg\": {\n        width: \"24px\",\n        height: \"30px\",\n        marginRight: \"15px\",\n        marginLeft: \"-15px\",\n      },\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\n        fontSize: \"24px\",\n        lineHeight: \"30px\",\n        width: \"24px\",\n        height: \"30px\",\n        marginRight: \"15px\",\n        marginLeft: \"-15px\",\n      },\n      \"& > span\": {\n        justifyContent: \"flex-start\",\n        width: \"100%\",\n      },\n    },\n  },\n  searchButton: {\n    [theme.breakpoints.down(\"sm\")]: {\n      top: \"-50px !important\",\n      marginRight: \"22px\",\n      float: \"right\",\n    },\n  },\n  margin: {\n    zIndex: \"4\",\n    margin: \"0\",\n  },\n  searchIcon: {\n    width: \"17px\",\n    zIndex: \"4\",\n  },\n  notifications: {\n    zIndex: \"4\",\n    [theme.breakpoints.up(\"md\")]: {\n      position: \"absolute\",\n      top: \"2px\",\n      border: \"1px solid \" + whiteColor,\n      right: \"4px\",\n      fontSize: \"9px\",\n      background: dangerColor[0],\n      color: whiteColor,\n      minWidth: \"16px\",\n      height: \"16px\",\n      borderRadius: \"10px\",\n      textAlign: \"center\",\n      lineHeight: \"16px\",\n      verticalAlign: \"middle\",\n      display: \"block\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      ...defaultFont,\n      fontSize: \"14px\",\n      marginRight: \"8px\",\n    },\n  },\n  manager: {\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n    },\n    display: \"inline-block\",\n  },\n  searchWrapper: {\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"-webkit-fill-available\",\n      margin: \"10px 15px 0\",\n    },\n    display: \"inline-block\",\n  },\n});\n\nexport default headerLinksStyle;\n","import React from \"react\";\nimport classNames from \"classnames\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Poppers from \"@material-ui/core/Popper\";\n// import Divider from \"@material-ui/core/Divider\";\n// @material-ui/icons\nimport Person from \"@material-ui/icons/Person\";\nimport Notifications from \"@material-ui/icons/Notifications\";\nimport Dashboard from \"@material-ui/icons/Dashboard\";\n// core components\nimport Button from \"components/CustomButtons/Button.js\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"assets/jss/material-dashboard-react/components/headerLinksStyle.js\";\nimport { NavLink } from \"react-router-dom\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function AdminNavbarLinks({ setLoggedin }) {\n  // console.log(\"setLoggedIn,navlinks\", setLoggedin);\n  const classes = useStyles();\n  const [openNotification, setOpenNotification] = React.useState(null);\n  const [openProfile, setOpenProfile] = React.useState(null);\n  const handleClickNotification = (event) => {\n    if (openNotification && openNotification.contains(event.target)) {\n      setOpenNotification(null);\n    } else {\n      setOpenNotification(event.currentTarget);\n    }\n  };\n  const handleCloseNotification = () => {\n    setOpenNotification(null);\n  };\n  const handleClickProfile = (event) => {\n    if (openProfile && openProfile.contains(event.target)) {\n      setOpenProfile(null);\n    } else {\n      setOpenProfile(event.currentTarget);\n    }\n  };\n  const handleCloseProfile = () => {\n    setOpenProfile(null);\n  };\n  const handleLogout = () => {\n    setLoggedin(undefined);\n    setOpenProfile(null);\n  };\n  return (\n    <div>\n      <NavLink to=\"/admin\" className={classes.item}>\n        <Button\n          color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\n          justIcon={window.innerWidth > 959}\n          simple={!(window.innerWidth > 959)}\n          aria-label=\"Dashboard\"\n          className={classes.buttonLink}\n        >\n          <Dashboard className={classes.icons} />\n          <Hidden mdUp implementation=\"css\">\n            <p className={classes.linkText}>Dashboard</p>\n          </Hidden>\n        </Button>\n      </NavLink>\n      <div className={classes.manager}>\n        <Button\n          color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\n          justIcon={window.innerWidth > 959}\n          simple={!(window.innerWidth > 959)}\n          aria-owns={openNotification ? \"notification-menu-list-grow\" : null}\n          aria-haspopup=\"true\"\n          onClick={handleClickNotification}\n          className={classes.buttonLink}\n        >\n          <Notifications className={classes.icons} />\n          <span className={classes.notifications}>1</span>\n          <Hidden mdUp implementation=\"css\">\n            <p onClick={handleCloseNotification} className={classes.linkText}>\n              Notification\n            </p>\n          </Hidden>\n        </Button>\n        <Poppers\n          open={Boolean(openNotification)}\n          anchorEl={openNotification}\n          transition\n          disablePortal\n          className={\n            classNames({ [classes.popperClose]: !openNotification }) +\n            \" \" +\n            classes.popperNav\n          }\n        >\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              id=\"notification-menu-list-grow\"\n              style={{\n                transformOrigin:\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\",\n              }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleCloseNotification}>\n                  <MenuList role=\"menu\">\n                    <MenuItem\n                      onClick={handleCloseNotification}\n                      className={classes.dropdownItem}\n                    >\n                      No notifications yet!\n                    </MenuItem>\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Poppers>\n      </div>\n      <div className={classes.manager}>\n        <Button\n          color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\n          justIcon={window.innerWidth > 959}\n          simple={!(window.innerWidth > 959)}\n          aria-owns={openProfile ? \"profile-menu-list-grow\" : null}\n          aria-haspopup=\"true\"\n          onClick={handleClickProfile}\n          className={classes.buttonLink}\n        >\n          <Person className={classes.icons} />\n          <Hidden mdUp implementation=\"css\">\n            <p className={classes.linkText}>Profile</p>\n          </Hidden>\n        </Button>\n        <Poppers\n          open={Boolean(openProfile)}\n          anchorEl={openProfile}\n          transition\n          disablePortal\n          className={\n            classNames({ [classes.popperClose]: !openProfile }) +\n            \" \" +\n            classes.popperNav\n          }\n        >\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              id=\"profile-menu-list-grow\"\n              style={{\n                transformOrigin:\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\",\n              }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleCloseProfile}>\n                  <MenuList role=\"menu\">\n                    {/* <MenuItem onClick={handleCloseProfile}>\n                      {\" \"}\n                      <NavLink to=\"/user\">Profile</NavLink>\n                    </MenuItem> */}\n                    {/* <Divider light /> */}\n                    <MenuItem onClick={handleLogout}>Logout</MenuItem>\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Poppers>\n      </div>\n    </div>\n  );\n}\n\nAdminNavbarLinks.propTypes = {\n  setLoggedin: PropTypes.any,\n};\n","import {\n  primaryColor,\n  dangerColor,\n  successColor,\n  grayColor,\n  defaultFont,\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst customInputStyle = {\n  disabled: {\n    \"&:before\": {\n      backgroundColor: \"transparent !important\",\n    },\n  },\n  underline: {\n    \"&:hover:not($disabled):before,&:before\": {\n      borderColor: grayColor[4] + \" !important\",\n      borderWidth: \"1px !important\",\n    },\n    \"&:after\": {\n      borderColor: primaryColor[0],\n    },\n  },\n  underlineError: {\n    \"&:after\": {\n      borderColor: dangerColor[0],\n    },\n  },\n  underlineSuccess: {\n    \"&:after\": {\n      borderColor: successColor[0],\n    },\n  },\n  labelRoot: {\n    ...defaultFont,\n    color: grayColor[3] + \" !important\",\n    fontWeight: \"400\",\n    fontSize: \"14px\",\n    lineHeight: \"1.42857\",\n    letterSpacing: \"unset\",\n  },\n  labelRootError: {\n    color: dangerColor[0],\n  },\n  labelRootSuccess: {\n    color: successColor[0],\n  },\n  feedback: {\n    position: \"absolute\",\n    top: \"18px\",\n    right: \"0\",\n    zIndex: \"2\",\n    display: \"block\",\n    width: \"24px\",\n    height: \"24px\",\n    textAlign: \"center\",\n    pointerEvents: \"none\",\n  },\n  marginTop: {\n    marginTop: \"16px\",\n  },\n  formControl: {\n    paddingBottom: \"10px\",\n    margin: \"27px 0 0 0\",\n    position: \"relative\",\n    verticalAlign: \"unset\",\n  },\n  labelRTL: {\n    right: 0,\n    transition: \"all 200ms cubic-bezier(0.0, 0, 0.2, 1) 0ms\",\n    \"&.MuiInputLabel-shrink\": {\n      transform: \"translate(0, 1.5px)\",\n    },\n  },\n};\n\nexport default customInputStyle;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\n// @material-ui/icons\nimport Clear from \"@material-ui/icons/Clear\";\nimport Check from \"@material-ui/icons/Check\";\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/customInputStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CustomInput(props) {\n  const classes = useStyles();\n  const {\n    formControlProps,\n    labelText,\n    id,\n    labelProps,\n    inputProps,\n    error,\n    success,\n    rtlActive,\n    value,\n    onChange,\n    disabled,\n    type,\n  } = props;\n\n  const labelClasses = classNames({\n    [\" \" + classes.labelRootError]: error,\n    [\" \" + classes.labelRootSuccess]: success && !error,\n    [\" \" + classes.labelRTL]: rtlActive,\n  });\n  const underlineClasses = classNames({\n    [classes.underlineError]: error,\n    [classes.underlineSuccess]: success && !error,\n    [classes.underline]: true,\n  });\n  const marginTop = classNames({\n    [classes.marginTop]: labelText === undefined,\n  });\n  let newInputProps = {\n    maxLength:\n      inputProps && inputProps.maxLength ? inputProps.maxLength : undefined,\n    minLength:\n      inputProps && inputProps.minLength ? inputProps.minLength : undefined,\n    step: inputProps && inputProps.step ? inputProps.step : undefined,\n  };\n  return (\n    <FormControl\n      {...formControlProps}\n      className={formControlProps.className + \" \" + classes.formControl}\n    >\n      {labelText !== undefined ? (\n        <InputLabel\n          className={classes.labelRoot + labelClasses}\n          htmlFor={id}\n          {...labelProps}\n        >\n          {labelText}\n        </InputLabel>\n      ) : null}\n      <Input\n        type={type}\n        disabled={disabled}\n        onChange={onChange}\n        value={value}\n        classes={{\n          root: marginTop,\n          disabled: classes.disabled,\n          underline: underlineClasses,\n        }}\n        id={id}\n        {...inputProps}\n        inputProps={newInputProps}\n      />\n      {error ? (\n        <Clear className={classes.feedback + \" \" + classes.labelRootError} />\n      ) : success ? (\n        <Check className={classes.feedback + \" \" + classes.labelRootSuccess} />\n      ) : null}\n    </FormControl>\n  );\n}\n\nCustomInput.propTypes = {\n  labelText: PropTypes.node,\n  labelProps: PropTypes.object,\n  id: PropTypes.string,\n  inputProps: PropTypes.object,\n  formControlProps: PropTypes.object,\n  error: PropTypes.bool,\n  success: PropTypes.bool,\n  rtlActive: PropTypes.bool,\n  value: PropTypes.string,\n  onChange: PropTypes.any,\n  disabled: PropTypes.any,\n  type: PropTypes.any,\n};\n","import {\n  defaultFont,\n  dangerColor,\n  whiteColor,\n} from \"assets/jss/material-dashboard-react.js\";\n\nimport dropdownStyle from \"assets/jss/material-dashboard-react/dropdownStyle.js\";\n\nconst headerLinksStyle = (theme) => ({\n  ...dropdownStyle(theme),\n  search: {\n    \"& > div\": {\n      marginTop: \"0\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: \"10px 15px !important\",\n      float: \"none !important\",\n      paddingTop: \"1px\",\n      paddingBottom: \"1px\",\n      padding: \"0!important\",\n      width: \"60%\",\n      marginTop: \"40px\",\n      \"& input\": {\n        color: whiteColor,\n      },\n    },\n  },\n  linkText: {\n    zIndex: \"4\",\n    ...defaultFont,\n    fontSize: \"14px\",\n    margin: \"0px\",\n  },\n  buttonLink: {\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"flex\",\n      margin: \"10px 15px 0\",\n      width: \"-webkit-fill-available\",\n      \"& svg\": {\n        width: \"24px\",\n        height: \"30px\",\n        marginRight: \"15px\",\n        marginLeft: \"-15px\",\n      },\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\n        fontSize: \"24px\",\n        lineHeight: \"30px\",\n        width: \"24px\",\n        height: \"30px\",\n        marginRight: \"15px\",\n        marginLeft: \"-15px\",\n      },\n      \"& > span\": {\n        justifyContent: \"flex-start\",\n        width: \"100%\",\n      },\n    },\n  },\n  searchButton: {\n    [theme.breakpoints.down(\"sm\")]: {\n      top: \"-50px !important\",\n      marginRight: \"22px\",\n      float: \"right\",\n    },\n  },\n  margin: {\n    zIndex: \"4\",\n    margin: \"0\",\n  },\n  searchIcon: {\n    width: \"17px\",\n    zIndex: \"4\",\n  },\n  notifications: {\n    zIndex: \"4\",\n    [theme.breakpoints.up(\"md\")]: {\n      position: \"absolute\",\n      top: \"2px\",\n      border: \"1px solid \" + whiteColor,\n      right: \"4px\",\n      fontSize: \"9px\",\n      background: dangerColor[0],\n      color: whiteColor,\n      minWidth: \"16px\",\n      height: \"16px\",\n      borderRadius: \"10px\",\n      textAlign: \"center\",\n      lineHeight: \"16px\",\n      verticalAlign: \"middle\",\n      display: \"block\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      ...defaultFont,\n      fontSize: \"14px\",\n      marginRight: \"8px\",\n    },\n  },\n  manager: {\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n    },\n    display: \"inline-block\",\n  },\n  searchWrapper: {\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"-webkit-fill-available\",\n      margin: \"10px 15px 0\",\n    },\n    display: \"inline-block\",\n  },\n});\n\nexport default headerLinksStyle;\n","import React from \"react\";\nimport classNames from \"classnames\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Poppers from \"@material-ui/core/Popper\";\n// @material-ui/icons\nimport Person from \"@material-ui/icons/Person\";\nimport Notifications from \"@material-ui/icons/Notifications\";\nimport Dashboard from \"@material-ui/icons/Dashboard\";\nimport Search from \"@material-ui/icons/Search\";\n// core components\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\n\nimport styles from \"assets/jss/material-dashboard-react/components/rtlHeaderLinksStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function RTLNavbarLinks() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(null);\n  const handleToggle = (event) => {\n    if (open && open.contains(event.target)) {\n      setOpen(null);\n    } else {\n      setOpen(event.currentTarget);\n    }\n  };\n\n  const handleClose = () => {\n    setOpen(null);\n  };\n\n  return (\n    <div>\n      <div className={classes.searchWrapper}>\n        <CustomInput\n          formControlProps={{\n            className: classes.margin + \" \" + classes.search,\n          }}\n          inputProps={{\n            placeholder: \"جستجو...\",\n            inputProps: {\n              \"aria-label\": \"Search\",\n            },\n          }}\n        />\n        <Button color=\"white\" aria-label=\"edit\" justIcon round>\n          <Search />\n        </Button>\n      </div>\n      <Button\n        color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\n        justIcon={window.innerWidth > 959}\n        simple={!(window.innerWidth > 959)}\n        aria-label=\"Dashboard\"\n        className={classes.buttonLink}\n      >\n        <Dashboard className={classes.icons} />\n        <Hidden mdUp implementation=\"css\">\n          <p className={classes.linkText}>آمارها</p>\n        </Hidden>\n      </Button>\n      <div className={classes.manager}>\n        <Button\n          color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\n          justIcon={window.innerWidth > 959}\n          simple={!(window.innerWidth > 959)}\n          aria-owns={open ? \"menu-list-grow\" : null}\n          aria-haspopup=\"true\"\n          onClick={handleToggle}\n          className={classes.buttonLink}\n        >\n          <Notifications className={classes.icons} />\n          <span className={classes.notifications}>۵</span>\n          <Hidden mdUp implementation=\"css\">\n            <p onClick={handleToggle} className={classes.linkText}>\n              اعلان‌ها\n            </p>\n          </Hidden>\n        </Button>\n        <Poppers\n          open={Boolean(open)}\n          anchorEl={open}\n          transition\n          disablePortal\n          className={\n            classNames({ [classes.popperClose]: !open }) +\n            \" \" +\n            classes.popperNav\n          }\n        >\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              id=\"menu-list-grow\"\n              style={{\n                transformOrigin:\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\",\n              }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleClose}>\n                  <MenuList role=\"menu\">\n                    <MenuItem\n                      onClick={handleClose}\n                      className={classes.dropdownItem}\n                    >\n                      محمدرضا به ایمیل شما پاسخ داد\n                    </MenuItem>\n                    <MenuItem\n                      onClick={handleClose}\n                      className={classes.dropdownItem}\n                    >\n                      شما ۵ وظیفه جدید دارید\n                    </MenuItem>\n                    <MenuItem\n                      onClick={handleClose}\n                      className={classes.dropdownItem}\n                    >\n                      از حالا شما با علیرضا دوست هستید\n                    </MenuItem>\n                    <MenuItem\n                      onClick={handleClose}\n                      className={classes.dropdownItem}\n                    >\n                      اعلان دیگر\n                    </MenuItem>\n                    <MenuItem\n                      onClick={handleClose}\n                      className={classes.dropdownItem}\n                    >\n                      اعلان دیگر\n                    </MenuItem>\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Poppers>\n      </div>\n      <Button\n        color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\n        justIcon={window.innerWidth > 959}\n        simple={!(window.innerWidth > 959)}\n        aria-label=\"Person\"\n        className={classes.buttonLink}\n      >\n        <Person className={classes.icons} />\n        <Hidden mdUp implementation=\"css\">\n          <p className={classes.linkText}>حساب کاربری</p>\n        </Hidden>\n      </Button>\n    </div>\n  );\n}\n","import React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst styles = {\n  grid: {\n    padding: \"0 15px !important\",\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function GridItem(props) {\n  const classes = useStyles();\n  const { children, ...rest } = props;\n  return (\n    <Grid item {...rest} className={classes.grid}>\n      {children}\n    </Grid>\n  );\n}\n\nGridItem.propTypes = {\n  children: PropTypes.node,\n};\n","import React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst styles = {\n  grid: {\n    margin: \"0 0px !important\",\n    width: \"unset\",\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function GridContainer(props) {\n  const classes = useStyles();\n  const { children, ...rest } = props;\n  return (\n    <Grid container {...rest} className={classes.grid}>\n      {children}\n    </Grid>\n  );\n}\n\nGridContainer.propTypes = {\n  children: PropTypes.node,\n};\n","import {\n  blackColor,\n  whiteColor,\n  hexToRgb,\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst cardStyle = {\n  card: {\n    border: \"0\",\n    marginBottom: \"30px\",\n    marginTop: \"30px\",\n    borderRadius: \"6px\",\n    color: \"rgba(\" + hexToRgb(blackColor) + \", 0.87)\",\n    background: whiteColor,\n    width: \"100%\",\n    boxShadow: \"0 1px 4px 0 rgba(\" + hexToRgb(blackColor) + \", 0.14)\",\n    position: \"relative\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    minWidth: \"0\",\n    wordWrap: \"break-word\",\n    fontSize: \".875rem\",\n  },\n  cardPlain: {\n    background: \"transparent\",\n    boxShadow: \"none\",\n  },\n  cardProfile: {\n    marginTop: \"30px\",\n    textAlign: \"center\",\n  },\n  cardChart: {\n    \"& p\": {\n      marginTop: \"0px\",\n      paddingTop: \"0px\",\n    },\n  },\n};\n\nexport default cardStyle;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// @material-ui/icons\n\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/cardStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Card(props) {\n  const classes = useStyles();\n  const { className, children, plain, profile, chart, ...rest } = props;\n  const cardClasses = classNames({\n    [classes.card]: true,\n    [classes.cardPlain]: plain,\n    [classes.cardProfile]: profile,\n    [classes.cardChart]: chart,\n    [className]: className !== undefined,\n  });\n  return (\n    <div className={cardClasses} {...rest}>\n      {children}\n    </div>\n  );\n}\n\nCard.propTypes = {\n  className: PropTypes.string,\n  plain: PropTypes.bool,\n  profile: PropTypes.bool,\n  chart: PropTypes.bool,\n  children: PropTypes.node,\n};\n","import {\n  warningCardHeader,\n  successCardHeader,\n  dangerCardHeader,\n  infoCardHeader,\n  primaryCardHeader,\n  roseCardHeader,\n  whiteColor,\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst cardHeaderStyle = {\n  cardHeader: {\n    padding: \"0.75rem 1.25rem\",\n    marginBottom: \"0\",\n    borderBottom: \"none\",\n    background: \"transparent\",\n\n    \"&$cardHeaderPlain,&$cardHeaderIcon,&$cardHeaderStats,&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\n      margin: \"0 15px\",\n      padding: \"0\",\n      position: \"relative\",\n      color: whiteColor,\n    },\n    \"&:first-child\": {\n      borderRadius: \"calc(.25rem - 1px) calc(.25rem - 1px) 0 0\",\n    },\n    \"&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\n      \"&:not($cardHeaderIcon)\": {\n        borderRadius: \"3px\",\n        marginTop: \"-20px\",\n        padding: \"15px\",\n      },\n    },\n    \"&$cardHeaderStats svg\": {\n      fontSize: \"36px\",\n      lineHeight: \"56px\",\n      textAlign: \"center\",\n      width: \"36px\",\n      height: \"36px\",\n      margin: \"10px 10px 4px\",\n    },\n    \"&$cardHeaderStats i,&$cardHeaderStats .material-icons\": {\n      fontSize: \"36px\",\n      lineHeight: \"56px\",\n      width: \"56px\",\n      height: \"56px\",\n      textAlign: \"center\",\n      overflow: \"unset\",\n      marginBottom: \"1px\",\n    },\n    \"&$cardHeaderStats$cardHeaderIcon\": {\n      textAlign: \"right\",\n    },\n  },\n  cardHeaderPlain: {\n    marginLeft: \"0px !important\",\n    marginRight: \"0px !important\",\n  },\n  cardHeaderStats: {\n    \"& $cardHeaderIcon\": {\n      textAlign: \"right\",\n    },\n    \"& h1,& h2,& h3,& h4,& h5,& h6\": {\n      margin: \"0 !important\",\n    },\n  },\n  cardHeaderIcon: {\n    \"&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\n      background: \"transparent\",\n      boxShadow: \"none\",\n    },\n    \"& i,& .material-icons\": {\n      width: \"33px\",\n      height: \"33px\",\n      textAlign: \"center\",\n      lineHeight: \"33px\",\n    },\n    \"& svg\": {\n      width: \"24px\",\n      height: \"24px\",\n      textAlign: \"center\",\n      lineHeight: \"33px\",\n      margin: \"5px 4px 0px\",\n    },\n  },\n  warningCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...warningCardHeader,\n    },\n  },\n  successCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...successCardHeader,\n    },\n  },\n  dangerCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...dangerCardHeader,\n    },\n  },\n  infoCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...infoCardHeader,\n    },\n  },\n  primaryCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...primaryCardHeader,\n    },\n  },\n  roseCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...roseCardHeader,\n    },\n  },\n};\n\nexport default cardHeaderStyle;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// @material-ui/icons\n\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/cardHeaderStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CardHeader(props) {\n  const classes = useStyles();\n  const { className, children, color, plain, stats, icon, ...rest } = props;\n  const cardHeaderClasses = classNames({\n    [classes.cardHeader]: true,\n    [classes[color + \"CardHeader\"]]: color,\n    [classes.cardHeaderPlain]: plain,\n    [classes.cardHeaderStats]: stats,\n    [classes.cardHeaderIcon]: icon,\n    [className]: className !== undefined,\n  });\n  return (\n    <div className={cardHeaderClasses} {...rest}>\n      {children}\n    </div>\n  );\n}\n\nCardHeader.propTypes = {\n  className: PropTypes.string,\n  color: PropTypes.oneOf([\n    \"warning\",\n    \"success\",\n    \"danger\",\n    \"info\",\n    \"primary\",\n    \"rose\",\n  ]),\n  plain: PropTypes.bool,\n  stats: PropTypes.bool,\n  icon: PropTypes.bool,\n  children: PropTypes.node,\n};\n","import {\n  warningCardHeader,\n  successCardHeader,\n  dangerCardHeader,\n  infoCardHeader,\n  primaryCardHeader,\n  roseCardHeader,\n  grayColor,\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst cardIconStyle = {\n  cardIcon: {\n    \"&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\n      borderRadius: \"3px\",\n      backgroundColor: grayColor[0],\n      padding: \"15px\",\n      marginTop: \"-20px\",\n      marginRight: \"15px\",\n      float: \"left\",\n    },\n  },\n  warningCardHeader,\n  successCardHeader,\n  dangerCardHeader,\n  infoCardHeader,\n  primaryCardHeader,\n  roseCardHeader,\n};\n\nexport default cardIconStyle;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// @material-ui/icons\n\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/cardIconStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CardIcon(props) {\n  const classes = useStyles();\n  const { className, children, color, ...rest } = props;\n  const cardIconClasses = classNames({\n    [classes.cardIcon]: true,\n    [classes[color + \"CardHeader\"]]: color,\n    [className]: className !== undefined,\n  });\n  return (\n    <div className={cardIconClasses} {...rest}>\n      {children}\n    </div>\n  );\n}\n\nCardIcon.propTypes = {\n  className: PropTypes.string,\n  color: PropTypes.oneOf([\n    \"warning\",\n    \"success\",\n    \"danger\",\n    \"info\",\n    \"primary\",\n    \"rose\",\n  ]),\n  children: PropTypes.node,\n};\n","const cardBodyStyle = {\n  cardBody: {\n    padding: \"0.9375rem 20px\",\n    flex: \"1 1 auto\",\n    WebkitBoxFlex: \"1\",\n    position: \"relative\",\n  },\n  cardBodyPlain: {\n    paddingLeft: \"5px\",\n    paddingRight: \"5px\",\n  },\n  cardBodyProfile: {\n    marginTop: \"15px\",\n  },\n};\n\nexport default cardBodyStyle;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// @material-ui/icons\n\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/cardBodyStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CardBody(props) {\n  const classes = useStyles();\n  const { className, children, plain, profile, ...rest } = props;\n  const cardBodyClasses = classNames({\n    [classes.cardBody]: true,\n    [classes.cardBodyPlain]: plain,\n    [classes.cardBodyProfile]: profile,\n    [className]: className !== undefined,\n  });\n  return (\n    <div className={cardBodyClasses} {...rest}>\n      {children}\n    </div>\n  );\n}\n\nCardBody.propTypes = {\n  className: PropTypes.string,\n  plain: PropTypes.bool,\n  profile: PropTypes.bool,\n  children: PropTypes.node,\n};\n","import { grayColor } from \"assets/jss/material-dashboard-react.js\";\n\nconst cardFooterStyle = {\n  cardFooter: {\n    padding: \"0\",\n    paddingTop: \"10px\",\n    margin: \"0 15px 10px\",\n    borderRadius: \"0\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    display: \"flex\",\n    backgroundColor: \"transparent\",\n    border: \"0\",\n  },\n  cardFooterProfile: {\n    marginTop: \"-15px\",\n  },\n  cardFooterPlain: {\n    paddingLeft: \"5px\",\n    paddingRight: \"5px\",\n    backgroundColor: \"transparent\",\n  },\n  cardFooterStats: {\n    borderTop: \"1px solid \" + grayColor[10],\n    marginTop: \"20px\",\n    \"& svg\": {\n      position: \"relative\",\n      top: \"4px\",\n      marginRight: \"3px\",\n      marginLeft: \"3px\",\n      width: \"16px\",\n      height: \"16px\",\n    },\n    \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\n      fontSize: \"16px\",\n      position: \"relative\",\n      top: \"4px\",\n      marginRight: \"3px\",\n      marginLeft: \"3px\",\n    },\n  },\n  cardFooterChart: {\n    borderTop: \"1px solid \" + grayColor[10],\n  },\n};\n\nexport default cardFooterStyle;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// @material-ui/icons\n\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/cardFooterStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CardFooter(props) {\n  const classes = useStyles();\n  const { className, children, plain, profile, stats, chart, ...rest } = props;\n  const cardFooterClasses = classNames({\n    [classes.cardFooter]: true,\n    [classes.cardFooterPlain]: plain,\n    [classes.cardFooterProfile]: profile,\n    [classes.cardFooterStats]: stats,\n    [classes.cardFooterChart]: chart,\n    [className]: className !== undefined,\n  });\n  return (\n    <div className={cardFooterClasses} {...rest}>\n      {children}\n    </div>\n  );\n}\n\nCardFooter.propTypes = {\n  className: PropTypes.string,\n  plain: PropTypes.bool,\n  profile: PropTypes.bool,\n  stats: PropTypes.bool,\n  chart: PropTypes.bool,\n  children: PropTypes.node,\n};\n","import { hexToRgb, blackColor } from \"assets/jss/material-dashboard-react.js\";\n\nconst cardAvatarStyle = {\n  cardAvatar: {\n    \"&$cardAvatarProfile img\": {\n      width: \"100%\",\n      height: \"auto\",\n    },\n  },\n\n  cardAvatarProfile: {\n    maxWidth: \"130px\",\n    maxHeight: \"130px\",\n    margin: \"-50px auto 0\",\n    borderRadius: \"50%\",\n    overflow: \"hidden\",\n    padding: \"0\",\n    boxShadow:\n      \"0 16px 38px -12px rgba(\" +\n      hexToRgb(blackColor) +\n      \", 0.56), 0 4px 25px 0px rgba(\" +\n      hexToRgb(blackColor) +\n      \", 0.12), 0 8px 10px -5px rgba(\" +\n      hexToRgb(blackColor) +\n      \", 0.2)\",\n    \"&$cardAvatarPlain\": {\n      marginTop: \"0\",\n    },\n  },\n  cardAvatarPlain: {},\n};\n\nexport default cardAvatarStyle;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// @material-ui/icons\n// core components\n\nimport styles from \"assets/jss/material-dashboard-react/components/cardAvatarStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CardAvatar(props) {\n  const classes = useStyles();\n  const { children, className, plain, profile, ...rest } = props;\n  const cardAvatarClasses = classNames({\n    [classes.cardAvatar]: true,\n    [classes.cardAvatarProfile]: profile,\n    [classes.cardAvatarPlain]: plain,\n    [className]: className !== undefined,\n  });\n  return (\n    <div className={cardAvatarClasses} {...rest}>\n      {children}\n    </div>\n  );\n}\n\nCardAvatar.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n  profile: PropTypes.bool,\n  plain: PropTypes.bool,\n};\n","import { infoColor } from \"assets/jss/material-dashboard-react\";\nimport {\n  successColor,\n  whiteColor,\n  grayColor,\n  hexToRgb,\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst dashboardStyle = {\n  proBadge: {\n    position: \"relative\",\n    fontSize: \"10px\",\n    textTransform: \"uppercase\",\n    fontWeight: \"700\",\n    right: \"-10px\",\n    padding: \"8px 10px\",\n    top: \"-30px\",\n    background: infoColor[0],\n    borderRadius: \"3px\",\n    color: whiteColor,\n    lineHeight: \"22px\",\n    boxShadow: \"0 5px 5px -2px rgba(\" + hexToRgb(grayColor[6]) + \",.4)\",\n  },\n  successText: {\n    color: successColor[0],\n  },\n  upArrowCardCategory: {\n    width: \"16px\",\n    height: \"16px\",\n  },\n  stats: {\n    color: grayColor[0],\n    display: \"inline-flex\",\n    fontSize: \"12px\",\n    lineHeight: \"22px\",\n    \"& svg\": {\n      top: \"4px\",\n      width: \"16px\",\n      height: \"16px\",\n      position: \"relative\",\n      marginRight: \"3px\",\n      marginLeft: \"3px\",\n    },\n    \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\n      top: \"4px\",\n      fontSize: \"16px\",\n      position: \"relative\",\n      marginRight: \"3px\",\n      marginLeft: \"3px\",\n    },\n  },\n  cardCategory: {\n    color: grayColor[0],\n    margin: \"0\",\n    fontSize: \"14px\",\n    marginTop: \"0\",\n    paddingTop: \"10px\",\n    marginBottom: \"0\",\n  },\n  cardCategoryWhite: {\n    color: \"rgba(\" + hexToRgb(whiteColor) + \",.62)\",\n    margin: \"0\",\n    fontSize: \"14px\",\n    marginTop: \"0\",\n    marginBottom: \"0\",\n  },\n\n  cardTitle: {\n    color: grayColor[2],\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: grayColor[1],\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n  cardTitleWhite: {\n    color: whiteColor,\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: grayColor[1],\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nexport default dashboardStyle;\n","const Domain = \"https://www.marygiricollegebackend.xyz\";\nexport { Domain };\n","import {\n  primaryColor,\n  warningColor,\n  dangerColor,\n  successColor,\n  infoColor,\n  roseColor,\n  grayColor,\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst accordionStyle = (theme) => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: \"20px\",\n  },\n  expansionPanel: {\n    boxShadow: \"none\",\n    \"&:before\": {\n      display: \"none !important\",\n    },\n  },\n  expansionPanelExpanded: {\n    margin: \"0 !important\",\n  },\n  expansionPanelSummary: {\n    minHeight: \"auto !important\",\n    backgroundColor: \"transparent\",\n    borderBottom: \"1px solid \" + grayColor[6],\n    padding: \"25px 10px 5px 0px\",\n    borderTopLeftRadius: \"3px\",\n    borderTopRightRadius: \"3px\",\n    color: grayColor[1],\n  },\n  primaryExpansionPanelSummary: {\n    \"&:hover\": {\n      color: primaryColor[0],\n    },\n  },\n  secondaryExpansionPanelSummary: {\n    \"&:hover\": {\n      color: primaryColor[0],\n    },\n  },\n  warningExpansionPanelSummary: {\n    \"&:hover\": {\n      color: warningColor[0],\n    },\n  },\n  dangerExpansionPanelSummary: {\n    \"&:hover\": {\n      color: dangerColor[0],\n    },\n  },\n  successExpansionPanelSummary: {\n    \"&:hover\": {\n      color: successColor[0],\n    },\n  },\n  infoExpansionPanelSummary: {\n    \"&:hover\": {\n      color: infoColor[0],\n    },\n  },\n  roseExpansionPanelSummary: {\n    \"&:hover\": {\n      color: roseColor[0],\n    },\n  },\n  expansionPanelSummaryExpaned: {\n    \"& $expansionPanelSummaryExpandIcon\": {\n      [theme.breakpoints.up(\"md\")]: {\n        top: \"auto !important\",\n      },\n      transform: \"rotate(180deg)\",\n      [theme.breakpoints.down(\"sm\")]: {\n        top: \"10px !important\",\n      },\n      // some jss/css to make the cards look a bit better on Internet Explorer\n      \"@media all and (-ms-high-contrast: none), (-ms-high-contrast: active)\": {\n        display: \"inline-block !important\",\n        top: \"10px !important\",\n      },\n    },\n  },\n  primaryExpansionPanelSummaryExpaned: {\n    color: primaryColor[0],\n  },\n  secondaryExpansionPanelSummaryExpaned: {\n    color: primaryColor[0],\n  },\n  warningExpansionPanelSummaryExpaned: {\n    color: warningColor[0],\n  },\n  dangerExpansionPanelSummaryExpaned: {\n    color: dangerColor[0],\n  },\n  successExpansionPanelSummaryExpaned: {\n    color: successColor[0],\n  },\n  infoExpansionPanelSummaryExpaned: {\n    color: infoColor[0],\n  },\n  roseExpansionPanelSummaryExpaned: {\n    color: roseColor[0],\n  },\n  expansionPanelSummaryContent: {\n    margin: \"0 !important\",\n  },\n  expansionPanelSummaryExpandIcon: {\n    [theme.breakpoints.up(\"md\")]: {\n      top: \"auto !important\",\n    },\n    transform: \"rotate(0deg)\",\n    color: \"inherit\",\n    right: \"10px\",\n    position: \"absolute\",\n    [theme.breakpoints.down(\"sm\")]: {\n      top: \"10px !important\",\n    },\n    // some jss/css to make the cards look a bit better on Internet Explorer\n    \"@media all and (-ms-high-contrast: none), (-ms-high-contrast: active)\": {\n      display: \"inline-block !important\",\n    },\n  },\n  expansionPanelSummaryExpandIconExpanded: {},\n  title: {\n    fontSize: \"15px\",\n    fontWeight: \"bolder\",\n    marginTop: \"0\",\n    marginBottom: \"0\",\n    color: \"inherit\",\n  },\n  expansionPanelDetails: {\n    display: \"block\",\n    padding: \"15px 0px 5px\",\n    fontSize: \".875rem\",\n  },\n});\n\nexport default accordionStyle;\n","import React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\n\n// @material-ui/icons\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\n\nimport styles from \"assets/jss/material-dashboard-react/components/accordionStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Accordion(props) {\n  const [active, setActive] = React.useState(\n    props.active.length === undefined ? [props.active] : props.active\n  );\n  const [single] = React.useState(\n    props.active.length === undefined ? true : false\n  );\n  const handleChange = (panel) => () => {\n    let newArray;\n\n    if (single) {\n      if (active[0] === panel) {\n        newArray = [];\n      } else {\n        newArray = [panel];\n      }\n    } else {\n      if (active.indexOf(panel) === -1) {\n        newArray = [...active, panel];\n      } else {\n        newArray = [...active];\n        newArray.splice(active.indexOf(panel), 1);\n      }\n    }\n    setActive(newArray);\n  };\n  const { collapses, activeColor } = props;\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      {collapses.map((prop, key) => {\n        return (\n          <ExpansionPanel\n            expanded={active === key || active.indexOf(key) !== -1}\n            onChange={handleChange(key)}\n            key={key}\n            classes={{\n              root: classes.expansionPanel,\n              expanded: classes.expansionPanelExpanded,\n            }}\n          >\n            <ExpansionPanelSummary\n              expandIcon={<ExpandMore />}\n              classes={{\n                root: `${classes.expansionPanelSummary} ${\n                  classes[activeColor + \"ExpansionPanelSummary\"]\n                }`,\n                expanded: `${classes.expansionPanelSummaryExpaned} ${\n                  classes[activeColor + \"ExpansionPanelSummaryExpaned\"]\n                }`,\n                content: classes.expansionPanelSummaryContent,\n                expandIcon: classes.expansionPanelSummaryExpandIcon,\n              }}\n            >\n              <h4 className={classes.title}>{prop.title}</h4>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails className={classes.expansionPanelDetails}>\n              {prop.content}\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n        );\n      })}\n    </div>\n  );\n}\n\nAccordion.defaultProps = {\n  active: -1,\n  activeColor: \"primary\",\n};\n\nAccordion.propTypes = {\n  // index of the default active collapse\n  active: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.arrayOf(PropTypes.number),\n  ]),\n  collapses: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      content: PropTypes.node,\n    })\n  ).isRequired,\n  activeColor: PropTypes.oneOf([\n    \"primary\",\n    \"secondary\",\n    \"warning\",\n    \"danger\",\n    \"success\",\n    \"info\",\n    \"rose\",\n  ]),\n};\n","import {\n  defaultFont,\n  primaryBoxShadow,\n  infoBoxShadow,\n  successBoxShadow,\n  warningBoxShadow,\n  dangerBoxShadow,\n  roseBoxShadow,\n  whiteColor,\n  blackColor,\n  grayColor,\n  infoColor,\n  successColor,\n  dangerColor,\n  roseColor,\n  primaryColor,\n  warningColor,\n  hexToRgb,\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst snackbarContentStyle = {\n  root: {\n    ...defaultFont,\n    flexWrap: \"unset\",\n    position: \"relative\",\n    padding: \"20px 15px\",\n    lineHeight: \"20px\",\n    marginBottom: \"20px\",\n    fontSize: \"14px\",\n    backgroundColor: whiteColor,\n    color: grayColor[7],\n    borderRadius: \"3px\",\n    minWidth: \"unset\",\n    maxWidth: \"unset\",\n    boxShadow:\n      \"0 12px 20px -10px rgba(\" +\n      hexToRgb(whiteColor) +\n      \", 0.28), 0 4px 20px 0px rgba(\" +\n      hexToRgb(blackColor) +\n      \", 0.12), 0 7px 8px -5px rgba(\" +\n      hexToRgb(whiteColor) +\n      \", 0.2)\",\n  },\n  top20: {\n    top: \"20px\",\n  },\n  top40: {\n    top: \"40px\",\n  },\n  info: {\n    backgroundColor: infoColor[3],\n    color: whiteColor,\n    ...infoBoxShadow,\n  },\n  success: {\n    backgroundColor: successColor[3],\n    color: whiteColor,\n    ...successBoxShadow,\n  },\n  warning: {\n    backgroundColor: warningColor[3],\n    color: whiteColor,\n    ...warningBoxShadow,\n  },\n  danger: {\n    backgroundColor: dangerColor[3],\n    color: whiteColor,\n    ...dangerBoxShadow,\n  },\n  primary: {\n    backgroundColor: primaryColor[3],\n    color: whiteColor,\n    ...primaryBoxShadow,\n  },\n  rose: {\n    backgroundColor: roseColor[3],\n    color: whiteColor,\n    ...roseBoxShadow,\n  },\n  message: {\n    padding: \"0\",\n    display: \"block\",\n    maxWidth: \"89%\",\n  },\n  close: {\n    width: \"11px\",\n    height: \"11px\",\n  },\n  iconButton: {\n    width: \"24px\",\n    height: \"24px\",\n    padding: \"0px\",\n  },\n  icon: {\n    display: \"block\",\n    left: \"15px\",\n    position: \"absolute\",\n    top: \"50%\",\n    marginTop: \"-15px\",\n    width: \"30px\",\n    height: \"30px\",\n  },\n  infoIcon: {\n    color: infoColor[3],\n  },\n  successIcon: {\n    color: successColor[3],\n  },\n  warningIcon: {\n    color: warningColor[3],\n  },\n  dangerIcon: {\n    color: dangerColor[3],\n  },\n  primaryIcon: {\n    color: primaryColor[3],\n  },\n  roseIcon: {\n    color: roseColor[3],\n  },\n  iconMessage: {\n    paddingLeft: \"50px\",\n    display: \"block\",\n  },\n  actionRTL: {\n    marginLeft: \"-8px\",\n    marginRight: \"auto\",\n  },\n};\n\nexport default snackbarContentStyle;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Snack from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\n// @material-ui/icons\nimport Close from \"@material-ui/icons/Close\";\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/snackbarContentStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Snackbar(props) {\n  const classes = useStyles();\n  const { message, color, close, icon, place, open, rtlActive } = props;\n  var action = [];\n  const messageClasses = classNames({\n    [classes.iconMessage]: icon !== undefined,\n  });\n  if (close !== undefined) {\n    action = [\n      <IconButton\n        className={classes.iconButton}\n        key=\"close\"\n        aria-label=\"Close\"\n        color=\"inherit\"\n        onClick={() => props.closeNotification()}\n      >\n        <Close className={classes.close} />\n      </IconButton>,\n    ];\n  }\n  return (\n    <Snack\n      anchorOrigin={{\n        vertical: place.indexOf(\"t\") === -1 ? \"bottom\" : \"top\",\n        horizontal:\n          place.indexOf(\"l\") !== -1\n            ? \"left\"\n            : place.indexOf(\"c\") !== -1\n            ? \"center\"\n            : \"right\",\n      }}\n      open={open}\n      message={\n        <div>\n          {icon !== undefined ? <props.icon className={classes.icon} /> : null}\n          <span className={messageClasses}>{message}</span>\n        </div>\n      }\n      action={action}\n      ContentProps={{\n        classes: {\n          root: classes.root + \" \" + classes[color],\n          message: classes.message,\n          action: classNames({ [classes.actionRTL]: rtlActive }),\n        },\n      }}\n    />\n  );\n}\n\nSnackbar.propTypes = {\n  message: PropTypes.node.isRequired,\n  color: PropTypes.oneOf([\"info\", \"success\", \"warning\", \"danger\", \"primary\"]),\n  close: PropTypes.bool,\n  icon: PropTypes.object,\n  place: PropTypes.oneOf([\"tl\", \"tr\", \"tc\", \"br\", \"bl\", \"bc\"]),\n  open: PropTypes.bool,\n  rtlActive: PropTypes.bool,\n  closeNotification: PropTypes.func,\n};\n","import {\n  defaultFont,\n  primaryColor,\n  infoColor,\n  successColor,\n  warningColor,\n  dangerColor,\n  grayColor,\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst typographyStyle = {\n  defaultFontStyle: {\n    ...defaultFont,\n    fontSize: \"14px\",\n  },\n  defaultHeaderMargins: {\n    marginTop: \"20px\",\n    marginBottom: \"10px\",\n  },\n  quote: {\n    padding: \"10px 20px\",\n    margin: \"0 0 20px\",\n    fontSize: \"17.5px\",\n    borderLeft: \"5px solid \" + grayColor[10],\n  },\n  quoteText: {\n    margin: \"0 0 10px\",\n    fontStyle: \"italic\",\n  },\n  quoteAuthor: {\n    display: \"block\",\n    fontSize: \"80%\",\n    lineHeight: \"1.42857143\",\n    color: grayColor[1],\n  },\n  mutedText: {\n    color: grayColor[1],\n  },\n  primaryText: {\n    color: primaryColor[0],\n  },\n  infoText: {\n    color: infoColor[0],\n  },\n  successText: {\n    color: successColor[0],\n  },\n  warningText: {\n    color: warningColor[0],\n  },\n  dangerText: {\n    color: dangerColor[0],\n  },\n};\n\nexport default typographyStyle;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/typographyStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Danger(props) {\n  const classes = useStyles();\n  const { children } = props;\n  return (\n    <div className={classes.defaultFontStyle + \" \" + classes.dangerText}>\n      {children}\n    </div>\n  );\n}\n\nDanger.propTypes = {\n  children: PropTypes.node,\n};\n","const customFileInputStyle = {\n  inputFile: {\n    opacity: \"0\",\n    position: \"absolute\",\n    top: \"0\",\n    right: \"0\",\n    bottom: \"0\",\n    left: \"0\",\n    width: \"100%\",\n    height: \"100%\",\n    zIndex: \"-1\",\n  },\n  inputFileWrapper: {\n    \"& button svg\": {\n      color: \"inherit\",\n    },\n  },\n};\n\nexport default customFileInputStyle;\n","import React from \"react\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\n\nimport styles from \"assets/jss/material-dashboard-react/components/customFileInputStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CustomFileInput(props) {\n  const [fileNames, setFileNames] = React.useState(\"\");\n  // eslint-disable-next-line\n  // useEffect(() => {\n  //   console.log(\"file:\" + files);\n  // }, [files]);\n\n  let hiddenFile = React.createRef();\n  const onFocus = (e) => {\n    hiddenFile.current.click(e);\n  };\n  // eslint-disable-next-line\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // files is the file/image uploaded\n    // in this function you can save the image (files) on form submit\n    // you have to call it yourself\n  };\n  const addFile = (e) => {\n    let fileNames = \"\";\n    let files = e.target.files;\n    for (let i = 0; i < e.target.files.length; i++) {\n      fileNames = fileNames + e.target.files[i].name;\n      if (props.multiple && i !== e.target.files.length - 1) {\n        fileNames = fileNames + \", \";\n      }\n    }\n\n    setFileNames(fileNames);\n    if (props.onChange) {\n      props.onChange(files, fileNames);\n    }\n    props.setFiles(files);\n  };\n\n  const {\n    id,\n    endButton,\n    startButton,\n    inputProps,\n    formControlProps,\n    multiple,\n    saved,\n  } = props;\n  const classes = useStyles();\n  if (inputProps && inputProps.type && inputProps.type === \"file\") {\n    inputProps.type = \"text\";\n  }\n  let buttonStart;\n  let buttonEnd;\n  if (saved) {\n    // console.log(\"saved: \", saved, \"filename:\", fileNames);\n  }\n  if (startButton) {\n    buttonStart = (\n      <Button {...startButton.buttonProps}>\n        {startButton.icon !== undefined ? startButton.icon : null}\n        {startButton.text !== undefined ? startButton.text : null}\n      </Button>\n    );\n  }\n  if (endButton) {\n    buttonEnd = (\n      <Button {...endButton.buttonProps}>\n        {endButton.icon !== undefined ? endButton.icon : null}\n        {endButton.text !== undefined ? endButton.text : null}\n      </Button>\n    );\n  }\n  return (\n    <div className={classes.inputFileWrapper}>\n      <input\n        type=\"file\"\n        className={classes.inputFile}\n        multiple={multiple}\n        ref={hiddenFile}\n        onChange={addFile}\n      />\n      <CustomInput\n        id={id}\n        formControlProps={{\n          ...formControlProps,\n        }}\n        inputProps={{\n          ...inputProps,\n          onClick: onFocus,\n          value: fileNames,\n          endAdornment: buttonEnd,\n          startAdornment: buttonStart,\n        }}\n      />\n    </div>\n  );\n}\n\nCustomFileInput.defaultProps = {\n  multiple: false,\n};\n\nCustomFileInput.propTypes = {\n  saved: PropTypes.bool,\n  setFiles: PropTypes.any,\n  id: PropTypes.string,\n  endButton: PropTypes.object,\n  startButton: PropTypes.object,\n  inputProps: PropTypes.object,\n  formControlProps: PropTypes.object,\n  multiple: PropTypes.bool,\n  // it is a function from which you can get the file that was uploaded\n  // more can be read here: https://github.com/creativetimofficial/ct-material-kit-pro-react/issues/64 and here: https://github.com/creativetimofficial/ct-material-kit-pro-react/issues/37\n  onChange: PropTypes.func,\n};\n","import React, { useEffect } from \"react\";\nimport { Domain } from \"Domain\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\n// import Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport axios from \"axios\";\nimport Danger from \"components/Typography/Danger\";\nimport LoadingOverlay from \"react-loading-overlay\";\n// import ImageUpload from \"components/CustomUpload/ImageUpload.js\";\nimport PropTypes from \"prop-types\";\n\nimport AttachFile from \"@material-ui/icons/AttachFile\";\nimport CustomFileInput from \"components/CustomFileInput/CustomFileInput.js\";\n// import Pagination from \"components/Pagination/Pagination\";\n\n// import { data } from \"./data.json\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function Admin({ id }) {\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  // const [deleted, setDeleted] = React.useState(false);\n  // const [deletee, setDelete] = React.useState([]);\n  // const [events, setEvents] = React.useState([]);\n  const [files, setFiles] = React.useState(null);\n  const [validated, setValidated] = React.useState(true);\n  const [uploaded, setUploaded] = React.useState(false);\n  // const [loading, setLoading] = React.useState(true);\n  // const [deleting, setDeleting] = React.useState(false);\n  // const [empty, setEmpty] = React.useState(false);\n  const [saving, setSaving] = React.useState(false);\n  const [viewData, setViewData] = React.useState(true);\n  // const Admindata = events.map((d) => ({\n  //   Id: d.Id,\n  //   FullName: d.FullName,\n  //   Email: d.Email,\n  //   Password: d.Password,\n  // }));\n\n  //Saved Notification trigger\n  const showSavedNotification = () => {\n    if (!saved) {\n      setSaved(true);\n      setTimeout(function () {\n        setSaved(false);\n      }, 3000);\n    }\n  };\n\n  //Form Data\n  const [data, setData] = React.useState({\n    Id: 0,\n    FullName: \"\",\n    Email: \"\",\n    Status: \"Created\",\n    Image: \"\",\n    Password: \"\",\n  });\n\n  //PassData for getAll API\n  // let passData = {\n  //   PageIndex: 0,\n  //   PageSize: 10,\n  // };\n\n  //PaddData for Delete a Row\n  // let passDelete = {\n  //   Id: deletee,\n  //   DeletedBy: 2,\n  // };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: id,\n  };\n  //Function to handle Data input\n  function HandleData(e) {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n  function HandleClear() {\n    setData({\n      Id: 0,\n      FullName: \"\",\n      Email: \"\",\n      Status: \"Created\",\n      Image: \"\",\n      Password: \"\",\n    });\n    setViewData(false);\n  }\n  //Function for Validating fields\n  function ValidateFields() {\n    if (data.FullName == \"\") {\n      return false;\n    } else if (data.Email == \"\") {\n      return false;\n    } else if (data.Status == \"\") {\n      return false;\n    } else if (data.Image == \"\") {\n      return false;\n    } else if (data.Password == \"\") {\n      return false;\n    } else return true;\n  }\n  //function to upload\n  function UploadImage() {\n    if (files != null) {\n      setValidated(true);\n      setSaving(true);\n      let form_data = new FormData();\n      form_data.append(\"File\", files[0]);\n      let url = Domain + \"/api/Uploads/File/\";\n      axios\n        .post(url, form_data, {\n          headers: {\n            \"content-type\": \"multipart/form-data\",\n          },\n        })\n        .then((res) => {\n          if (res.data.Success) {\n            data.Image = res.data.Data[0];\n            setUploaded(true);\n            HandleSave();\n          } else {\n            setUploaded(false);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setUploaded(false);\n        });\n    } else if (data.Image != \"\") HandleSave();\n    else setValidated(false);\n  }\n\n  //Function to save Data\n  function HandleSave() {\n    if (ValidateFields()) {\n      setValidated(true);\n      fetch(Domain + \"/api/Admin/CreateAdminDetails/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setData({\n              Id: 0,\n              FullName: \"\",\n              Email: \"\",\n              Status: \"Created\",\n              Image: \"\",\n              Password: \"\",\n            });\n            window.localStorage.setItem(\n              \"userdetails\",\n              JSON.stringify(json.Data)\n            );\n            // setEmpty(false);\n            showSavedNotification();\n            setSaving(false);\n            setViewData(false);\n          } else {\n            console.log(\"Error in insertion\");\n          }\n        });\n    } else {\n      setValidated(false);\n    }\n    setUploaded(false);\n  }\n\n  // const [TotalCount, setTotalCount] = React.useState();\n  // const [pageIndex, setPageIndex] = useState(0);\n  // const [pagination, setPagination] = useState(false);\n\n  useEffect(() => {\n    //API call to get event By ID to edit a row\n\n    fetch(Domain + \"/api/Admin/GetAdminDetailsById/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passEdit),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        if (json.Success) {\n          setViewData(true);\n          // setEdit([]);\n          setData(json.Data);\n          console.log(json.Data);\n        }\n      });\n  }, []);\n\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Admin Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n\n      {viewData ? (\n        <LoadingOverlay active={saving} spinner text=\"Saving Please Wait..\">\n          <GridContainer>\n            <GridItem xs={12} sm={12} md={12}>\n              <Card>\n                <form>\n                  <CardHeader color=\"info\">\n                    <h4 className={classes.cardTitleWhite}>Admin</h4>\n                    <p className={classes.cardCategoryWhite}>Details</p>\n                  </CardHeader>\n\n                  <CardBody>\n                    <GridContainer>\n                      <GridItem xs={12} sm={12} md={6}>\n                        <CustomInput\n                          onChange={(e) => HandleData(e)}\n                          value={data.FullName}\n                          labelText=\"FullName\"\n                          id=\"FullName\"\n                          formControlProps={{\n                            fullWidth: true,\n                          }}\n                        />\n                      </GridItem>\n                      <GridItem xs={12} sm={12} md={4}>\n                        <CustomInput\n                          onChange={(e) => HandleData(e)}\n                          value={data.Email}\n                          labelText=\"Email\"\n                          id=\"Email\"\n                          formControlProps={{\n                            fullWidth: true,\n                          }}\n                        />\n                      </GridItem>\n                    </GridContainer>\n\n                    <GridContainer>\n                      <GridItem xs={12} sm={12} md={5}>\n                        <CustomInput\n                          onChange={(e) => HandleData(e)}\n                          value={data.Password}\n                          labelText=\"Password\"\n                          id=\"Password\"\n                          formControlProps={{\n                            fullWidth: true,\n                          }}\n                        />\n                      </GridItem>\n                      <GridItem xs={12} sm={5} md={5}>\n                        {\" \"}\n                        <CustomFileInput\n                          setFiles={setFiles}\n                          saved={uploaded}\n                          formControlProps={{\n                            fullWidth: true,\n                          }}\n                          inputProps={{\n                            placeholder: \"Click here to upload an image\",\n                          }}\n                          endButton={{\n                            buttonProps: {\n                              round: true,\n                              color: \"info\",\n                              justIcon: true,\n                              filebutton: true,\n                            },\n                            icon: <AttachFile />,\n                          }}\n                        />\n                        {validated ? (\n                          <></>\n                        ) : (\n                          <Danger>Please enter all the details to save</Danger>\n                        )}\n                      </GridItem>\n                    </GridContainer>\n                  </CardBody>\n                  <CardFooter>\n                    <Button onClick={HandleClear} color=\"defualt\">\n                      Cansel\n                    </Button>\n                    <Button onClick={UploadImage} color=\"info\">\n                      Save\n                    </Button>\n                  </CardFooter>\n                </form>\n              </Card>\n            </GridItem>\n          </GridContainer>\n        </LoadingOverlay>\n      ) : (\n        <></>\n      )}\n\n      {/* <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>List Of All Admin</h4>\n              <p className={classes.cardCategoryWhite}>\n                All Admins are listed below, you can delete or edit them.\n              </p>\n            </CardHeader>\n            <CardBody>\n              {empty ? (\n                <p>empty</p>\n              ) : (\n                <Table\n                  tableHeaderColor=\"info\"\n                  tableHead={[\n                    \"\",\n                    \"Id\",\n                    \"FullName\",\n                    \"Email\",\n                    \"Password\",\n                    // \"Gender\",\n                    // \"DOB\",\n                    // \"Address\",\n                    // \"Usertype\",\n                    // \"AreaOfInterest\",\n                    // \"Status\",\n                    // \"Created By\",\n                    // \"Created Date\",\n                    // \"Modified By\",\n                    // \"Modified Date\",\n                    // \"Deteled By\",\n                    // \"Deleted Date\",\n                    \"Actions\",\n                  ]}\n                  tableData={Admindata}\n                  setEdit={setEdit}\n                  setDelete={setDelete}\n                  loading={loading}\n                />\n              )}\n            </CardBody>\n          </Card>\n          {pagination ? (\n            <Pagination\n              TotalCount={TotalCount}\n              setPageIndex={setPageIndex}\n              pageIndex={pageIndex}\n              className={\n                classes.textCenter + \" \" + classes.justifyContentCenter\n              }\n              pages={[\n                { text: \"Previous\" },\n                { active: true, text: \"1\" },\n\n                { text: \"Next\" },\n              ]}\n              color=\"info\"\n            />\n          ) : (\n            <></>\n          )}\n        </GridItem>\n      </GridContainer> */}\n    </>\n  );\n}\n\nAdmin.propTypes = {\n  id: PropTypes.any,\n};\n","import React, { useEffect } from \"react\";\n// react plugin for creating charts\n// import ChartistGraph from \"react-chartist\";\n// @material-ui/core\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Icon from \"@material-ui/core/Icon\";\n// @material-ui/icons\nimport Store from \"@material-ui/icons/Store\";\n// import Warning from \"@material-ui/icons/Warning\";\nimport DateRange from \"@material-ui/icons/DateRange\";\nimport LocalOffer from \"@material-ui/icons/LocalOffer\";\nimport Update from \"@material-ui/icons/Update\";\n// import ArrowUpward from \"@material-ui/icons/ArrowUpward\";\n// import AccessTime from \"@material-ui/icons/AccessTime\";\nimport Accessibility from \"@material-ui/icons/Accessibility\";\n// import BugReport from \"@material-ui/icons/BugReport\";\n// import Code from \"@material-ui/icons/Code\";\n// import Cloud from \"@material-ui/icons/Cloud\";\n// core components\nimport Button from \"components/CustomButtons/Button.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\n// import Table from \"components/Table/Table.js\";\n// import Tasks from \"components/Tasks/Tasks.js\";\n// import CustomTabs from \"components/CustomTabs/CustomTabs.js\";\n// import Danger from \"components/Typography/Danger.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardIcon from \"components/Card/CardIcon.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport CardAvatar from \"components/Card/CardAvatar.js\";\n// import avatar from \"assets/img/placeholder.jpg\";\n\n// import { bugs, website, server } from \"variables/general.js\";\n\n// import {\n//   dailySalesChart,\n//   emailsSubscriptionChart,\n//   completedTasksChart,\n// } from \"variables/charts.js\";\n\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport { Domain } from \"Domain\";\nimport Accordion from \"components/Accordion/Accordion\";\nimport Admin from \"views/Admin/Admin\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const userData = JSON.parse(window.localStorage.getItem(\"userdetails\"));\n  const [admin, setAdmin] = React.useState(false);\n  const [edit, setEdit] = React.useState(false);\n  console.log(\"userDetails:\", userData);\n  useEffect(() => {\n    if (userData.Usertype == \"Admin\") {\n      setAdmin(true);\n    }\n  }, []);\n\n  return (\n    <div>\n      <GridContainer>\n        <GridItem xs={12} sm={6} md={3}>\n          <Card>\n            <CardHeader color=\"warning\" stats icon>\n              <CardIcon color=\"warning\">\n                <Icon>content_copy</Icon>\n              </CardIcon>\n              <p className={classes.cardCategory}>Admitions Count</p>\n              <h3 className={classes.cardTitle}>0</h3>\n            </CardHeader>\n            <CardFooter stats>\n              <div className={classes.stats}>\n                <DateRange />\n                Last 24 Hours\n              </div>\n            </CardFooter>\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={6} md={3}>\n          <Card>\n            <CardHeader color=\"success\" stats icon>\n              <CardIcon color=\"success\">\n                <Store />\n              </CardIcon>\n              <p className={classes.cardCategory}>Upcoming Events</p>\n              <h3 className={classes.cardTitle}>0</h3>\n            </CardHeader>\n            <CardFooter stats>\n              <div className={classes.stats}>\n                <DateRange />\n                Last 24 Hours\n              </div>\n            </CardFooter>\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={6} md={3}>\n          <Card>\n            <CardHeader color=\"danger\" stats icon>\n              <CardIcon color=\"danger\">\n                <Icon>info_outline</Icon>\n              </CardIcon>\n              <p className={classes.cardCategory}>Enquiries</p>\n              <h3 className={classes.cardTitle}>0</h3>\n            </CardHeader>\n            <CardFooter stats>\n              <div className={classes.stats}>\n                <LocalOffer />\n                See them in Enquiry Tab\n              </div>\n            </CardFooter>\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={6} md={3}>\n          <Card>\n            <CardHeader color=\"info\" stats icon>\n              <CardIcon color=\"info\">\n                <Accessibility />\n              </CardIcon>\n              <p className={classes.cardCategory}>Total Students</p>\n              <h3 className={classes.cardTitle}>0</h3>\n            </CardHeader>\n            <CardFooter stats>\n              <div className={classes.stats}>\n                <Update />\n                Just Updated\n              </div>\n            </CardFooter>\n          </Card>\n        </GridItem>\n      </GridContainer>\n\n      {/* profile============================================================================================= */}\n      {admin ? (\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={6}>\n            {edit ? <Admin id={userData.Id} /> : <></>}\n          </GridItem>\n          <GridItem xs={12} sm={12} md={6}>\n            <Card>\n              <CardAvatar profile>\n                <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                  <img src={Domain + userData.Image} alt=\"...\" />\n                </a>\n              </CardAvatar>\n              <CardBody>\n                <span style={{ textAlign: \"center\" }}>\n                  <h3 className={classes.title}>\n                    {userData.FullName}{\" \"}\n                    <span className={classes.proBadge}>\n                      {userData.Usertype}\n                    </span>\n                  </h3>\n                  <h6 className={classes.cardCategory}>\n                    {userData.CourseName}\n                  </h6>\n                </span>\n\n                <Accordion\n                  active={0}\n                  activeColor=\"info\"\n                  collapses={[\n                    {\n                      title: \"Login Details\",\n                      content: (\n                        <p>\n                          <b>Username :</b> {userData.Email}\n                          <br />\n                          <b>Password:</b> {userData.Password}\n                        </p>\n                      ),\n                    },\n                  ]}\n                />\n                <Button\n                  color=\"info\"\n                  onClick={() => {\n                    setEdit(true);\n                  }}\n                >\n                  Edit Profile\n                </Button>\n              </CardBody>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      ) : (\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={6}></GridItem>\n          <GridItem xs={12} sm={12} md={6}>\n            <Card>\n              <CardAvatar profile>\n                <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                  <img src={Domain + userData.Image} alt=\"...\" />\n                </a>\n              </CardAvatar>\n              <CardBody>\n                <span style={{ textAlign: \"center\" }}>\n                  <h3 className={classes.title}>\n                    {userData.FullName}{\" \"}\n                    <span className={classes.proBadge}>\n                      {userData.UserType}\n                    </span>\n                  </h3>\n                  <h6 className={classes.cardCategory}>\n                    {userData.CourseName}\n                  </h6>\n                </span>\n\n                <Accordion\n                  active={0}\n                  activeColor=\"info\"\n                  collapses={[\n                    {\n                      title: \"Personel Info\",\n                      content: (\n                        <span>\n                          <b>Date Of Birth :</b> {userData.DOB}\n                          <br />\n                          <b>Gender : </b>\n                          {userData.Gender}\n                          <br />\n                          <b>House Name:</b> {userData.HouseName}\n                          <br />\n                          <b>Contact :</b> {userData.Mobile}\n                          <br />\n                          <b>Email :</b> {userData.Email}\n                          <br />\n                        </span>\n                      ),\n                    },\n                    {\n                      title: \"Other Details\",\n                      content: (\n                        <>\n                          <b>Qualifications:</b> {userData.Qualifications}\n                          <br />\n                          <b>Achievements :</b> {userData.Achievements}\n                          <br />\n                          <b>Area Of Interest :</b> {userData.AreaOfInterest}\n                          <br />\n                          <b>Address :</b> {userData.HouseName},{userData.City},\n                          {userData.District},{userData.State},\n                          {userData.Country},{userData.PostOffice},\n                          {userData.PostalCode}\n                          <br />\n                          <b>Department Name :</b> {userData.DepartmentName}\n                          <br />\n                        </>\n                      ),\n                    },\n                    {\n                      title: \"Login Details\",\n                      content: (\n                        <p>\n                          <b>Username :</b> {userData.Email}\n                          <br />\n                          <b>Password:</b> {userData.Password}\n                        </p>\n                      ),\n                    },\n                  ]}\n                />\n                <Button color=\"info\" round>\n                  Edit Profile\n                </Button>\n              </CardBody>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      )}\n      {/* End Profile========================================================================================= */}\n      {/* \n      <GridContainer>\n        <GridItem xs={12} sm={12} md={4}>\n          <Card chart>\n            <CardHeader color=\"success\">\n              <ChartistGraph\n                className=\"ct-chart\"\n                data={dailySalesChart.data}\n                type=\"Line\"\n                options={dailySalesChart.options}\n                listener={dailySalesChart.animation}\n              />\n            </CardHeader>\n            <CardBody>\n              <h4 className={classes.cardTitle}>Daily Admissions</h4>\n              <p className={classes.cardCategory}>\n                <span className={classes.successText}>\n                  <ArrowUpward className={classes.upArrowCardCategory} /> 55%\n                </span>{\" \"}\n                increase in today Admissions.\n              </p>\n            </CardBody>\n            <CardFooter chart>\n              <div className={classes.stats}>\n                <AccessTime /> updated 4 minutes ago\n              </div>\n            </CardFooter>\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={4}>\n          <Card chart>\n            <CardHeader color=\"warning\">\n              <ChartistGraph\n                className=\"ct-chart\"\n                data={emailsSubscriptionChart.data}\n                type=\"Bar\"\n                options={emailsSubscriptionChart.options}\n                responsiveOptions={emailsSubscriptionChart.responsiveOptions}\n                listener={emailsSubscriptionChart.animation}\n              />\n            </CardHeader>\n            <CardBody>\n              <h4 className={classes.cardTitle}>Email Subscriptions</h4>\n              <p className={classes.cardCategory}>Last Campaign Performance</p>\n            </CardBody>\n            <CardFooter chart>\n              <div className={classes.stats}>\n                <AccessTime /> campaign sent 2 days ago\n              </div>\n            </CardFooter>\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={4}>\n          <Card chart>\n            <CardHeader color=\"danger\">\n              <ChartistGraph\n                className=\"ct-chart\"\n                data={completedTasksChart.data}\n                type=\"Line\"\n                options={completedTasksChart.options}\n                listener={completedTasksChart.animation}\n              />\n            </CardHeader>\n            <CardBody>\n              <h4 className={classes.cardTitle}>Completed Tasks</h4>\n              <p className={classes.cardCategory}>Last Campaign Performance</p>\n            </CardBody>\n            <CardFooter chart>\n              <div className={classes.stats}>\n                <AccessTime /> campaign sent 2 days ago\n              </div>\n            </CardFooter>\n          </Card>\n        </GridItem>\n      </GridContainer>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={6}>\n          <CustomTabs\n            title=\"Tasks:\"\n            headerColor=\"primary\"\n            tabs={[\n              {\n                tabName: \"Bugs\",\n                tabIcon: BugReport,\n                tabContent: (\n                  <Tasks\n                    checkedIndexes={[0, 3]}\n                    tasksIndexes={[0, 1, 2, 3]}\n                    tasks={bugs}\n                  />\n                ),\n              },\n              {\n                tabName: \"Website\",\n                tabIcon: Code,\n                tabContent: (\n                  <Tasks\n                    checkedIndexes={[0]}\n                    tasksIndexes={[0, 1]}\n                    tasks={website}\n                  />\n                ),\n              },\n              {\n                tabName: \"Server\",\n                tabIcon: Cloud,\n                tabContent: (\n                  <Tasks\n                    checkedIndexes={[1]}\n                    tasksIndexes={[0, 1, 2]}\n                    tasks={server}\n                  />\n                ),\n              },\n            ]}\n          />\n        </GridItem>\n        <GridItem xs={12} sm={12} md={6}>\n          <Card>\n            <CardHeader color=\"warning\">\n              <h4 className={classes.cardTitleWhite}>Staffs Stats</h4>\n              <p className={classes.cardCategoryWhite}>\n                New Staffs on 15th September, 2016\n              </p>\n            </CardHeader>\n            <CardBody>\n              <Table\n                tableHeaderColor=\"warning\"\n                tableHead={[\n\"\",\"ID\", \"Name\", \"Salary\", \"Country\"]}\n                tableData={[\n                  [\"1\", \"Dakota Rice\", \"$36,738\", \"Niger\"],\n                  [\"2\", \"Minerva Hooper\", \"$23,789\", \"Curaçao\"],\n                  [\"3\", \"Sage Rodriguez\", \"$56,142\", \"Netherlands\"],\n                  [\"4\", \"Philip Chaney\", \"$38,735\", \"Korea, South\"],\n                ]}\n              />\n            </CardBody>\n          </Card>\n        </GridItem>\n      </GridContainer> */}\n    </div>\n  );\n}\n","import {\n  warningColor,\n  primaryColor,\n  dangerColor,\n  successColor,\n  infoColor,\n  roseColor,\n  grayColor,\n  defaultFont,\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst tableStyle = (theme) => ({\n  warningTableHeader: {\n    color: warningColor[0],\n  },\n  primaryTableHeader: {\n    color: primaryColor[0],\n  },\n  dangerTableHeader: {\n    color: dangerColor[0],\n  },\n  successTableHeader: {\n    color: successColor[0],\n  },\n  infoTableHeader: {\n    backgroundColor: grayColor[10],\n    color: infoColor[0],\n  },\n  roseTableHeader: {\n    color: roseColor[0],\n  },\n  grayTableHeader: {\n    color: grayColor[0],\n  },\n  table: {\n    marginBottom: \"0\",\n    width: \"100%\",\n    maxWidth: \"100%\",\n    backgroundColor: \"transparent\",\n    borderSpacing: \"0\",\n    borderCollapse: \"collapse\",\n  },\n  tableHeadCell: {\n    color: \"inherit\",\n    ...defaultFont,\n    \"&, &$tableCell\": {\n      fontSize: \"1em\",\n    },\n  },\n  tableCell: {\n    ...defaultFont,\n    lineHeight: \"1.42857143\",\n    padding: \"12px 8px\",\n    verticalAlign: \"middle\",\n    fontSize: \"0.8125rem\",\n    maxWidth: \"100%\",\n  },\n  tableCellImage: {\n    ...defaultFont,\n    lineHeight: \"1.42857143\",\n    padding: \"12px 8px\",\n    verticalAlign: \"middle\",\n    fontSize: \"0.8125rem\",\n    maxWidth: \"150px\",\n  },\n  tableResponsive: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n    overflowX: \"auto\",\n  },\n  tableHeadRow: {\n    height: \"56px\",\n    color: \"inherit\",\n    display: \"table-row\",\n    outline: \"none\",\n    verticalAlign: \"middle\",\n  },\n  tableBodyRow: {\n    height: \"48px\",\n    color: \"inherit\",\n    display: \"table-row\",\n    outline: \"none\",\n    verticalAlign: \"middle\",\n  },\n});\n\nexport default tableStyle;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\n// Inspired by the former Facebook spinners.\nconst useStylesFacebook = makeStyles((theme) => ({\n  root: {\n    position: \"relative\",\n  },\n  bottom: {\n    color: theme.palette.grey[theme.palette.type === \"light\" ? 200 : 700],\n  },\n  top: {\n    color: \"#18bdd1\",\n    animationDuration: \"750ms\",\n    position: \"absolute\",\n    left: 0,\n  },\n  circle: {\n    strokeLinecap: \"round\",\n  },\n}));\n\nfunction FacebookCircularProgress(props) {\n  const classes = useStylesFacebook();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress\n        variant=\"determinate\"\n        className={classes.bottom}\n        size={40}\n        thickness={4}\n        {...props}\n        value={100}\n      />\n      <CircularProgress\n        variant=\"indeterminate\"\n        disableShrink\n        className={classes.top}\n        classes={{\n          circle: classes.circle,\n        }}\n        size={40}\n        thickness={4}\n        {...props}\n      />\n    </div>\n  );\n}\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n  },\n});\n\nexport default function Loader() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <FacebookCircularProgress />\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport Edit from \"@material-ui/icons/Edit\";\nimport Close from \"@material-ui/icons/Close\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\nimport Loader from \"components/Loader/Loader\";\nimport { Domain } from \"Domain\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CustomTable({\n  tableHead,\n  tableData,\n  tableHeaderColor,\n  setEdit,\n  setDelete,\n  loading,\n}) {\n  const classes = useStyles();\n  return (\n    <div className={classes.tableResponsive}>\n      {loading ? (\n        <GridContainer justify=\"center\">\n          <GridItem xs={12} sm={12} md={1}>\n            <Loader />\n          </GridItem>\n        </GridContainer>\n      ) : (\n        <Table className={classes.table}>\n          {tableHead !== undefined ? (\n            <TableHead className={classes[tableHeaderColor + \"TableHeader\"]}>\n              <TableRow className={classes.tableHeadRow}>\n                {tableHead.map((prop, key) => {\n                  return (\n                    <TableCell\n                      className={\n                        classes.tableCell + \" \" + classes.tableHeadCell\n                      }\n                      key={key}\n                    >\n                      {prop}\n                    </TableCell>\n                  );\n                })}\n              </TableRow>\n            </TableHead>\n          ) : null}\n\n          <TableBody>\n            {tableData.map((prop, key) => {\n              return (\n                <TableRow key={key} className={classes.tableBodyRow}>\n                  <img\n                    className={classes.tableCellImage}\n                    src={Domain + prop.Image}\n                    alt=\"..\"\n                  />\n                  {Object.values(prop).map((props, key) => {\n                    return (\n                      <TableCell className={classes.tableCell} key={key}>\n                        {props}\n                      </TableCell>\n                    );\n                  })}\n                  <Button\n                    onClick={() => setEdit(prop.Id)}\n                    simple\n                    justIcon\n                    size=\"lg\"\n                    color=\"success\"\n                  >\n                    <Edit />\n                  </Button>\n                  <Button\n                    onClick={() => setDelete(prop.Id)}\n                    simple\n                    justIcon\n                    size=\"lg\"\n                    color=\"danger\"\n                  >\n                    <Close />\n                  </Button>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      )}\n    </div>\n  );\n}\n\nCustomTable.defaultProps = {\n  tableHeaderColor: \"gray\",\n};\n\nCustomTable.propTypes = {\n  tableHeaderColor: PropTypes.oneOf([\n    \"warning\",\n    \"primary\",\n    \"danger\",\n    \"success\",\n    \"info\",\n    \"rose\",\n    \"gray\",\n  ]),\n  tableHead: PropTypes.arrayOf(PropTypes.string),\n  tableData: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string)),\n  setEdit: PropTypes.any,\n  setDelete: PropTypes.any,\n  loading: PropTypes.bool,\n};\n","import {\n  grayColor,\n  primaryColor,\n  infoColor,\n  successColor,\n  warningColor,\n  whiteColor,\n  dangerColor,\n  hexToRgb,\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst paginationStyle = {\n  pagination: {\n    display: \"flex\",\n    paddingLeft: \"0\",\n    listStyle: \"none\",\n    borderRadius: \"0.25rem\",\n  },\n  paginationItem: {\n    display: \"inline\",\n  },\n  paginationLink: {\n    \":first-of-type\": {\n      marginleft: \"0\",\n    },\n    letterSpacing: \"unset\",\n    border: \"0\",\n    borderRadius: \"30px !important\",\n    transition: \"all .3s\",\n    padding: \"0px 11px\",\n    margin: \"0 3px\",\n    minWidth: \"30px\",\n    height: \"30px\",\n    minHeight: \"auto\",\n    lineHeight: \"30px\",\n    fontWeight: \"400\",\n    fontSize: \"12px\",\n    textTransform: \"uppercase\",\n    background: \"transparent\",\n    position: \"relative\",\n    float: \"left\",\n    textDecoration: \"none\",\n    boxSizing: \"border-box\",\n    \"&,&:hover,&:focus\": {\n      color: grayColor[0],\n    },\n    \"&:hover,&:focus\": {\n      zIndex: \"3\",\n      backgroundColor: grayColor[2],\n      borderColor: grayColor[6],\n    },\n    \"&:hover\": {\n      cursor: \"pointer\",\n    },\n  },\n  primary: {\n    \"&,&:hover,&:focus\": {\n      backgroundColor: primaryColor[0],\n      borderColor: primaryColor[0],\n      color: whiteColor,\n      boxShadow:\n        \"0 4px 5px 0 rgba(\" +\n        hexToRgb(primaryColor[0]) +\n        \", 0.14), 0 1px 10px 0 rgba(\" +\n        hexToRgb(primaryColor[0]) +\n        \", 0.12), 0 2px 4px -1px rgba(\" +\n        hexToRgb(primaryColor[0]) +\n        \", 0.2)\",\n    },\n    \"&:hover,&:focus\": {\n      zIndex: \"2\",\n      cursor: \"default\",\n    },\n  },\n  info: {\n    \"&,&:hover,&:focus\": {\n      backgroundColor: infoColor[0],\n      borderColor: infoColor[0],\n      color: whiteColor,\n      boxShadow:\n        \"0 4px 5px 0 rgba(\" +\n        hexToRgb(infoColor[0]) +\n        \", 0.14), 0 1px 10px 0 rgba(\" +\n        hexToRgb(infoColor[0]) +\n        \", 0.12), 0 2px 4px -1px rgba(\" +\n        hexToRgb(infoColor[0]) +\n        \", 0.2)\",\n    },\n    \"&:hover,&:focus\": {\n      zIndex: \"2\",\n      cursor: \"default\",\n    },\n  },\n  success: {\n    \"&,&:hover,&:focus\": {\n      backgroundColor: successColor[0],\n      borderColor: successColor[0],\n      color: whiteColor,\n      boxShadow:\n        \"0 4px 5px 0 rgba(\" +\n        hexToRgb(successColor[0]) +\n        \", 0.14), 0 1px 10px 0 rgba(\" +\n        hexToRgb(successColor[0]) +\n        \", 0.12), 0 2px 4px -1px rgba(\" +\n        hexToRgb(successColor[0]) +\n        \", 0.2)\",\n    },\n    \"&:hover,&:focus\": {\n      zIndex: \"2\",\n      cursor: \"default\",\n    },\n  },\n  warning: {\n    \"&,&:hover,&:focus\": {\n      backgroundColor: warningColor[0],\n      borderColor: warningColor[0],\n      color: whiteColor,\n      boxShadow:\n        \"0 4px 5px 0 rgba(\" +\n        hexToRgb(warningColor[0]) +\n        \", 0.14), 0 1px 10px 0 rgba(\" +\n        hexToRgb(warningColor[0]) +\n        \", 0.12), 0 2px 4px -1px rgba(\" +\n        hexToRgb(warningColor[0]) +\n        \", 0.2)\",\n    },\n    \"&:hover,&:focus\": {\n      zIndex: \"2\",\n      cursor: \"default\",\n    },\n  },\n  danger: {\n    \"&,&:hover,&:focus\": {\n      backgroundColor: dangerColor[0],\n      borderColor: dangerColor[0],\n      color: whiteColor,\n      boxShadow:\n        \"0 4px 5px 0 rgba(\" +\n        hexToRgb(dangerColor[0]) +\n        \", 0.14), 0 1px 10px 0 rgba(\" +\n        hexToRgb(dangerColor[0]) +\n        \", 0.12), 0 2px 4px -1px rgba(\" +\n        hexToRgb(dangerColor[0]) +\n        \", 0.2)\",\n    },\n    \"&:hover,&:focus\": {\n      zIndex: \"2\",\n      cursor: \"default\",\n    },\n  },\n  disabled: {\n    \"&,&:hover,&:focus\": {\n      color: grayColor[10],\n      cursor: \"not-allowed\",\n      backgroundColor: whiteColor,\n      borderColor: grayColor[6],\n    },\n  },\n};\n\nexport default paginationStyle;\n","import React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\nimport styles from \"assets/jss/material-dashboard-react/components/paginationStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Pagination(props) {\n  const { pages, color, className } = props;\n  const classes = useStyles();\n  const [count, setCount] = React.useState(props.TotalCount);\n  const paginationClasses = classNames(classes.pagination, className);\n  function HandlePrev() {\n    if (props.pageIndex !== 0) {\n      setCount(count + 1);\n      props.setPageIndex(props.pageIndex - 1);\n    }\n  }\n  function HandleNext() {\n    if (count > 1) {\n      setCount(count - 1);\n      props.setPageIndex(props.pageIndex + 1);\n    }\n  }\n\n  return (\n    <ul className={paginationClasses}>\n      {pages.map((prop, key) => {\n        const paginationLink = classNames({\n          [classes.paginationLink]: true,\n          [classes[color]]: prop.active,\n          [classes.disabled]: prop.disabled,\n        });\n        return (\n          <li className={classes.paginationItem} key={key}>\n            {prop.text === \"Previous\" ? (\n              <Button\n                onClick={HandlePrev}\n                className={paginationLink}\n                disabled={prop.disabled}\n              >\n                {prop.text}\n              </Button>\n            ) : (\n              <>\n                {prop.text === \"Next\" ? (\n                  <Button\n                    onClick={HandleNext}\n                    className={paginationLink}\n                    disabled={prop.disabled}\n                  >\n                    {prop.text}\n                  </Button>\n                ) : (\n                  <Button className={paginationLink} disabled={prop.disabled}>\n                    {props.pageIndex + 1}\n                  </Button>\n                )}\n              </>\n            )}\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nPagination.defaultProps = {\n  color: \"primary\",\n};\n\nPagination.propTypes = {\n  TotalCount: PropTypes.any,\n  setPageIndex: PropTypes.any,\n  pageIndex: PropTypes.any,\n  pages: PropTypes.arrayOf(\n    PropTypes.shape({\n      active: PropTypes.bool,\n      disabled: PropTypes.bool,\n      text: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n        .isRequired,\n      onClick: PropTypes.func,\n    })\n  ).isRequired,\n  color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\"]),\n  className: PropTypes.string,\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Domain } from \"Domain\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport axios from \"axios\";\nimport Danger from \"components/Typography/Danger\";\nimport LoadingOverlay from \"react-loading-overlay\";\n// import ImageUpload from \"components/CustomUpload/ImageUpload.js\";\n\nimport AttachFile from \"@material-ui/icons/AttachFile\";\nimport CustomFileInput from \"components/CustomFileInput/CustomFileInput.js\";\nimport Pagination from \"components/Pagination/Pagination\";\n// import { data } from \"./data.json\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function Slideshow() {\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [events, setEvents] = React.useState([]);\n  const [files, setFiles] = React.useState(null);\n  const [validated, setValidated] = React.useState(true);\n  const [uploaded, setUploaded] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  const [saving, setSaving] = React.useState(false);\n\n  const Sildedata = events.map((d) => ({\n    Id: d.Id,\n    Name: d.Name,\n    Quote: d.Quote,\n    ButtonLink: d.ButtonLink,\n    ButtonText: d.ButtonText,\n    Image: d.Image,\n  }));\n\n  //Saved Notification trigger\n  const showSavedNotification = () => {\n    if (!saved) {\n      setSaved(true);\n      setTimeout(function () {\n        setSaved(false);\n      }, 3000);\n    }\n  };\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n  //Form Data\n  const [data, setData] = React.useState({\n    Id: 0,\n    Name: \"\",\n    Quote: \"\",\n    Status: \"Created\",\n    Image: \"\",\n    ButtonLink: \"\",\n    ButtonText: \"\",\n  });\n\n  //PassData for getAll API\n  let passData = {\n    PageIndex: 0,\n    PageSize: 10,\n  };\n\n  //PaddData for Delete a Row\n  let passDelete = {\n    Id: deletee,\n    DeletedBy: 2,\n  };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n  //Function to handle Data input\n  function HandleData(e) {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n  function HandleClear() {\n    setData({\n      Id: 0,\n      Name: \"\",\n      Quote: \"\",\n      Status: \"Created\",\n      Image: \"\",\n      ButtonLink: \"\",\n      ButtonText: \"\",\n    });\n  }\n  //Function for Validating fields\n  function ValidateFields() {\n    if (data.Name == \"\") {\n      return false;\n    } else if (data.Quote == \"\") {\n      return false;\n    } else if (data.Image == \"\") {\n      return false;\n    } else if (data.ButtonLink == \"\") {\n      return false;\n    } else if (data.ButtonText == \"\") {\n      return false;\n    } else return true;\n  }\n  //function to upload\n  function UploadImage() {\n    if (files != null) {\n      setValidated(true);\n      setSaving(true);\n      let form_data = new FormData();\n      form_data.append(\"File\", files[0]);\n      let url = Domain + \"/api/Uploads/File/\";\n      axios\n        .post(url, form_data, {\n          headers: {\n            \"content-type\": \"multipart/form-data\",\n          },\n        })\n        .then((res) => {\n          if (res.data.Success) {\n            data.Image = res.data.Data[0];\n            setUploaded(true);\n            HandleSave();\n          } else {\n            setUploaded(false);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setUploaded(false);\n        });\n    } else if (data.Image != \"\") HandleSave();\n    else setValidated(false);\n  }\n\n  //Function to save Data\n  function HandleSave() {\n    if (ValidateFields()) {\n      setValidated(true);\n      fetch(Domain + \"/api/Master/CreateCorousal/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setData({\n              Id: 0,\n              Name: \"\",\n              Quote: \"\",\n              Status: \"Created\",\n              Image: \"\",\n              ButtonLink: \"\",\n              ButtonText: \"\",\n            });\n            setEmpty(false);\n            showSavedNotification();\n            setSaving(false);\n          } else {\n            console.log(\"Error in insertion\");\n          }\n        });\n    } else {\n      setValidated(false);\n    }\n    setUploaded(false);\n  }\n\n  const [TotalCount, setTotalCount] = React.useState();\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n    fetch(Domain + \"/api/Master/GetAllCorousal/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.TotalCount > 10) {\n          console.log(\"pages\", Math.ceil(json.TotalCount / 10));\n          setTotalCount(Math.ceil(json.TotalCount / 10));\n\n          setPagination(true);\n        }\n      });\n  }, [pageIndex]);\n\n  useEffect(() => {\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Master/GetAllCorousal/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n      });\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      setDeleting(true);\n      fetch(Domain + \"/api/Master/DeleteCorousal/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passDelete),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setDelete([]);\n            showDeletedNotification();\n            setDeleting(false);\n          }\n        });\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Master/GetCorousalById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit([]);\n            setData(json.Data);\n            console.log(json.Data);\n          }\n        });\n    }\n  }, [deletee, edit, saved]);\n\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Slideshow Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Slideshow Deleted Successfully\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n      <LoadingOverlay active={saving} spinner text=\"Saving Please Wait..\">\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <Card>\n              <form>\n                <CardHeader color=\"info\">\n                  <h4 className={classes.cardTitleWhite}>Add New Slideshow</h4>\n                  <p className={classes.cardCategoryWhite}>\n                    Enter the slideshow details below and hit Save\n                  </p>\n                </CardHeader>\n\n                <CardBody>\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Name}\n                        labelText=\"Name\"\n                        id=\"Name\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Quote}\n                        labelText=\"Quote\"\n                        id=\"Quote\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                  </GridContainer>\n\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={3}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.ButtonLink}\n                        labelText=\"ButtonLink\"\n                        id=\"ButtonLink\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={3}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.ButtonText}\n                        labelText=\"ButtonText\"\n                        id=\"ButtonText\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={5} md={4}>\n                      {\" \"}\n                      <CustomFileInput\n                        setFiles={setFiles}\n                        saved={uploaded}\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          placeholder: \"Click here to upload an image\",\n                        }}\n                        endButton={{\n                          buttonProps: {\n                            round: true,\n                            color: \"info\",\n                            justIcon: true,\n                            filebutton: true,\n                          },\n                          icon: <AttachFile />,\n                        }}\n                      />\n                      {validated ? (\n                        <></>\n                      ) : (\n                        <Danger>Please enter all the details to save</Danger>\n                      )}\n                    </GridItem>\n                  </GridContainer>\n                </CardBody>\n                <CardFooter>\n                  <Button onClick={HandleClear} color=\"defualt\">\n                    Clear\n                  </Button>\n                  <Button onClick={UploadImage} color=\"info\">\n                    Save\n                  </Button>\n                </CardFooter>\n              </form>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      </LoadingOverlay>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>List Of All Slideshows</h4>\n              <p className={classes.cardCategoryWhite}>\n                All slideshow are listed below, you can delete or edit them.\n              </p>\n            </CardHeader>\n            <CardBody>\n              <LoadingOverlay active={deleting} spinner text=\"Please Wait..\">\n                {empty ? (\n                  <p>empty</p>\n                ) : (\n                  <Table\n                    tableHeaderColor=\"info\"\n                    tableHead={[\n                      \"\",\n                      \"ID\",\n                      \"Name\",\n                      \"Quote\",\n                      // \"Status\",\n                      \"ButtonLink\",\n                      \"ButtonText\",\n                      \"Image\",\n                      // \"Created By\",\n                      // \"Created Date\",\n                      // \"Modified By\",\n                      // \"Modified Date\",\n                      // \"Deteled By\",\n                      // \"Deleted Date\",\n                      \"Actions\",\n                    ]}\n                    tableData={Sildedata}\n                    setEdit={setEdit}\n                    setDelete={setDelete}\n                    loading={loading}\n                  />\n                )}\n              </LoadingOverlay>\n            </CardBody>\n          </Card>\n          {pagination ? (\n            <Pagination\n              TotalCount={TotalCount}\n              setPageIndex={setPageIndex}\n              pageIndex={pageIndex}\n              className={\n                classes.textCenter + \" \" + classes.justifyContentCenter\n              }\n              pages={[\n                { text: \"Previous\" },\n                { active: true, text: \"1\" },\n\n                { text: \"Next\" },\n              ]}\n              color=\"info\"\n            />\n          ) : (\n            <></>\n          )}\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Domain } from \"Domain\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport axios from \"axios\";\nimport Danger from \"components/Typography/Danger\";\nimport LoadingOverlay from \"react-loading-overlay\";\n// import ImageUpload from \"components/CustomUpload/ImageUpload.js\";\n\nimport AttachFile from \"@material-ui/icons/AttachFile\";\nimport CustomFileInput from \"components/CustomFileInput/CustomFileInput.js\";\nimport Pagination from \"components/Pagination/Pagination\";\n\n// import { data } from \"./data.json\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function Events() {\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [events, setEvents] = React.useState([]);\n  const [files, setFiles] = React.useState(null);\n  const [validated, setValidated] = React.useState(true);\n  const [uploaded, setUploaded] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  const [saving, setSaving] = React.useState(false);\n\n  const Eventslist = events.map((d) => ({\n    Id: d.Id,\n    Name: d.Name,\n    Venue: d.Venue,\n    Date: d.Date,\n    Description: d.Description,\n    Image: d.Image,\n  }));\n  console.log(Eventslist);\n  //Saved Notification trigger\n  const showSavedNotification = () => {\n    if (!saved) {\n      setSaved(true);\n      setTimeout(function () {\n        setSaved(false);\n      }, 3000);\n    }\n  };\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n  //Form Data\n  const [data, setData] = React.useState({\n    Id: 0,\n    Name: \"\",\n    Venue: \"\",\n    Date: \"\",\n    Status: \"Created\",\n    Image: \"\",\n    Description: \"\",\n  });\n\n  //PassData for getAll API\n  let passData = {\n    PageIndex: 0,\n    PageSize: 10,\n  };\n\n  //PaddData for Delete a Row\n  let passDelete = {\n    Id: deletee,\n    DeletedBy: 2,\n  };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n  //Function to handle Data input\n  function HandleData(e) {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n  function HandleClear() {\n    setData({\n      Id: 0,\n      Name: \"\",\n      Venue: \"\",\n      Date: \"\",\n      Status: \"Created\",\n      Image: \"\",\n      Description: \"\",\n    });\n  }\n  //Function for Validating fields\n  function ValidateFields() {\n    if (data.Name == \"\") {\n      return false;\n    } else if (data.Venue == \"\") {\n      return false;\n    } else if (data.Date == \"\") {\n      return false;\n    } else if (data.Image == \"\") {\n      return false;\n    } else if (data.Description == \"\") {\n      return false;\n    } else return true;\n  }\n  //function to upload\n  function UploadImage() {\n    if (files != null) {\n      setValidated(true);\n      setSaving(true);\n      let form_data = new FormData();\n      form_data.append(\"File\", files[0]);\n      let url = Domain + \"/api/Uploads/File/\";\n      axios\n        .post(url, form_data, {\n          headers: {\n            \"content-type\": \"multipart/form-data\",\n          },\n        })\n        .then((res) => {\n          if (res.data.Success) {\n            data.Image = res.data.Data[0];\n            setUploaded(true);\n            HandleSave();\n          } else {\n            setUploaded(false);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setUploaded(false);\n        });\n    } else if (data.Image != \"\") HandleSave();\n    else setValidated(false);\n  }\n\n  //Function to save Data\n  function HandleSave() {\n    if (ValidateFields()) {\n      setValidated(true);\n      fetch(Domain + \"/api/Admin/CreateEvents/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setData({\n              Id: 0,\n              Name: \"\",\n              Venue: \"\",\n              Date: \"\",\n              Status: \"Created\",\n              Image: \"\",\n              Description: \"\",\n            });\n            setEmpty(false);\n            showSavedNotification();\n            setSaving(false);\n          } else {\n            console.log(\"Error in insertion\");\n          }\n        });\n    } else {\n      setValidated(false);\n    }\n    setUploaded(false);\n  }\n\n  const [TotalCount, setTotalCount] = React.useState();\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n    fetch(Domain + \"/api/Admin/GetAllEvents/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.TotalCount > 10) {\n          console.log(\"pages\", Math.ceil(json.TotalCount / 10));\n          setTotalCount(Math.ceil(json.TotalCount / 10));\n\n          setPagination(true);\n        }\n      });\n  }, [pageIndex]);\n\n  useEffect(() => {\n    console.log(\"componentDidMount\");\n    console.log(\"Detele\" + deletee + \" edit\" + edit);\n\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Admin/GetAllEvents/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n      });\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      setDeleting(true);\n      fetch(Domain + \"/api/Admin/DeleteEvents/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passDelete),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setDelete([]);\n            showDeletedNotification();\n            setDeleting(false);\n          }\n        });\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Admin/GetEventsById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit([]);\n            setData(json.Data);\n            console.log(json.Data);\n          }\n        });\n    }\n  }, [deletee, edit, saved]);\n\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Event Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Event Deleted Successfully\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n      <LoadingOverlay active={saving} spinner text=\"Saving Please Wait..\">\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <Card>\n              <form>\n                <CardHeader color=\"info\">\n                  <h4 className={classes.cardTitleWhite}>Add New Event</h4>\n                  <p className={classes.cardCategoryWhite}>\n                    Enter the Event details below and hit Save\n                  </p>\n                </CardHeader>\n\n                <CardBody>\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={5}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Name}\n                        labelText=\"Event Name\"\n                        id=\"Name\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={3}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Venue}\n                        labelText=\"Venue\"\n                        id=\"Venue\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={3}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Date}\n                        labelText=\"Date\"\n                        id=\"Date\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                  </GridContainer>\n\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Description}\n                        labelText=\"Enter a description about the event..\"\n                        id=\"Description\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          multiline: true,\n                          rows: 5,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={5} md={5}>\n                      {\" \"}\n                      <CustomFileInput\n                        setFiles={setFiles}\n                        saved={uploaded}\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          placeholder: \"Click here to upload an image\",\n                        }}\n                        endButton={{\n                          buttonProps: {\n                            round: true,\n                            color: \"info\",\n                            justIcon: true,\n                            filebutton: true,\n                          },\n                          icon: <AttachFile />,\n                        }}\n                      />\n                      {validated ? (\n                        <></>\n                      ) : (\n                        <Danger>Please enter all the details to save</Danger>\n                      )}\n                    </GridItem>\n                  </GridContainer>\n                </CardBody>\n                <CardFooter>\n                  <Button onClick={HandleClear} color=\"defualt\">\n                    Clear\n                  </Button>\n                  <Button onClick={UploadImage} color=\"info\">\n                    Save\n                  </Button>\n                </CardFooter>\n              </form>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      </LoadingOverlay>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>List Of All Events</h4>\n              <p className={classes.cardCategoryWhite}>\n                All events are listed below, you can delete or edit them.\n              </p>\n            </CardHeader>\n            <CardBody>\n              <LoadingOverlay active={deleting} spinner text=\"Please Wait..\">\n                {empty ? (\n                  <p>empty</p>\n                ) : (\n                  <Table\n                    tableHeaderColor=\"info\"\n                    tableHead={[\n                      \"\",\n                      \"ID\",\n                      \"Name\",\n                      \"Venue\",\n                      \"Date\",\n                      \"Description\",\n                      \"Image Url\",\n                      \"Actions\",\n                    ]}\n                    tableData={Eventslist}\n                    setEdit={setEdit}\n                    setDelete={setDelete}\n                    loading={loading}\n                  />\n                )}\n              </LoadingOverlay>\n            </CardBody>\n          </Card>\n          {pagination ? (\n            <Pagination\n              TotalCount={TotalCount}\n              setPageIndex={setPageIndex}\n              pageIndex={pageIndex}\n              className={\n                classes.textCenter + \" \" + classes.justifyContentCenter\n              }\n              pages={[\n                { text: \"Previous\" },\n                { active: true, text: \"1\" },\n\n                { text: \"Next\" },\n              ]}\n              color=\"info\"\n            />\n          ) : (\n            <></>\n          )}\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Domain } from \"Domain\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport axios from \"axios\";\nimport Danger from \"components/Typography/Danger\";\nimport LoadingOverlay from \"react-loading-overlay\";\n// import ImageUpload from \"components/CustomUpload/ImageUpload.js\";\n\nimport AttachFile from \"@material-ui/icons/AttachFile\";\nimport CustomFileInput from \"components/CustomFileInput/CustomFileInput.js\";\nimport Pagination from \"components/Pagination/Pagination\";\n\n// import { data } from \"./data.json\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function Gallery() {\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [events, setEvents] = React.useState([]);\n  const [files, setFiles] = React.useState(null);\n  const [validated, setValidated] = React.useState(true);\n  const [uploaded, setUploaded] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  const [saving, setSaving] = React.useState(false);\n\n  const Gallerydata = events.map((d) => ({\n    Id: d.Id,\n    Name: d.Name,\n    Image: d.Image,\n  }));\n\n  //Saved Notification trigger\n  const showSavedNotification = () => {\n    if (!saved) {\n      setSaved(true);\n      setTimeout(function () {\n        setSaved(false);\n      }, 3000);\n    }\n  };\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n  //Form Data\n  const [data, setData] = React.useState({\n    Id: 0,\n    Name: \"\",\n    Status: \"Created\",\n    Image: \"\",\n  });\n\n  //PassData for getAll API\n  let passData = {\n    PageIndex: 0,\n    PageSize: 10,\n  };\n\n  //PaddData for Delete a Row\n  let passDelete = {\n    Id: deletee,\n    DeletedBy: 2,\n  };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n  //Function to handle Data input\n  function HandleData(e) {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n  function HandleClear() {\n    setData({\n      Id: 0,\n      Name: \"\",\n      Status: \"Created\",\n      Image: \"\",\n    });\n  }\n  //Function for Validating fields\n  function ValidateFields() {\n    if (data.Name == \"\") {\n      return false;\n    } else if (data.Image == \"\") {\n      return false;\n    } else return true;\n  }\n  //function to upload\n  function UploadImage() {\n    if (files != null) {\n      setValidated(true);\n      setSaving(true);\n      let form_data = new FormData();\n      form_data.append(\"File\", files[0]);\n      let url = Domain + \"/api/Uploads/File/\";\n      axios\n        .post(url, form_data, {\n          headers: {\n            \"content-type\": \"multipart/form-data\",\n          },\n        })\n        .then((res) => {\n          if (res.data.Success) {\n            data.Image = res.data.Data[0];\n            setUploaded(true);\n            HandleSave();\n          } else {\n            setUploaded(false);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setUploaded(false);\n        });\n    } else if (data.Image != \"\") HandleSave();\n    else setValidated(false);\n  }\n\n  //Function to save Data\n  function HandleSave() {\n    if (ValidateFields()) {\n      setValidated(true);\n      fetch(Domain + \"/api/Master/CreateGallery/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setData({\n              Id: 0,\n              Name: \"\",\n              Status: \"Created\",\n              Image: \"\",\n            });\n            setEmpty(false);\n            showSavedNotification();\n            setSaving(false);\n          } else {\n            console.log(\"Error in insertion\");\n          }\n        });\n    } else {\n      setValidated(false);\n    }\n    setUploaded(false);\n  }\n\n  const [TotalCount, setTotalCount] = React.useState();\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n    fetch(Domain + \"/api/Master/GetAllGallery/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.TotalCount > 10) {\n          console.log(\"pages\", Math.ceil(json.TotalCount / 10));\n          setTotalCount(Math.ceil(json.TotalCount / 10));\n\n          setPagination(true);\n        }\n      });\n  }, [pageIndex]);\n\n  useEffect(() => {\n    console.log(\"componentDidMount\");\n    console.log(\"Detele\" + deletee + \" edit\" + edit);\n\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Master/GetAllGallery/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n      });\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      setDeleting(true);\n      fetch(Domain + \"/api/Master/DeleteGallery/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passDelete),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setDelete([]);\n            showDeletedNotification();\n            setDeleting(false);\n          }\n        });\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Master/GetGalleryById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit([]);\n            setData(json.Data);\n            console.log(json.Data);\n          }\n        });\n    }\n  }, [deletee, edit, saved]);\n\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Gallery Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Gallery Deleted Successfully\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n      <LoadingOverlay active={saving} spinner text=\"Saving Please Wait..\">\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <Card>\n              <form>\n                <CardHeader color=\"info\">\n                  <h4 className={classes.cardTitleWhite}>Add New Gallery</h4>\n                  <p className={classes.cardCategoryWhite}>\n                    Enter the Gallery details below and hit Save\n                  </p>\n                </CardHeader>\n\n                <CardBody>\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Name}\n                        labelText=\"Name\"\n                        id=\"Name\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n\n                    <GridItem xs={12} sm={5} md={5}>\n                      {\" \"}\n                      <CustomFileInput\n                        setFiles={setFiles}\n                        saved={uploaded}\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          placeholder: \"Click here to upload an image\",\n                        }}\n                        endButton={{\n                          buttonProps: {\n                            round: true,\n                            color: \"info\",\n                            justIcon: true,\n                            filebutton: true,\n                          },\n                          icon: <AttachFile />,\n                        }}\n                      />\n                      {validated ? (\n                        <></>\n                      ) : (\n                        <Danger>Please enter all the details to save</Danger>\n                      )}\n                    </GridItem>\n                  </GridContainer>\n                </CardBody>\n                <CardFooter>\n                  <Button onClick={HandleClear} color=\"defualt\">\n                    Clear\n                  </Button>\n                  <Button onClick={UploadImage} color=\"info\">\n                    Save\n                  </Button>\n                </CardFooter>\n              </form>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      </LoadingOverlay>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>List Of All Gallery</h4>\n              <p className={classes.cardCategoryWhite}>\n                All Gallery are listed below, you can delete or edit them.\n              </p>\n            </CardHeader>\n            <CardBody>\n              <LoadingOverlay active={deleting} spinner text=\"Please Wait..\">\n                {empty ? (\n                  <p>empty</p>\n                ) : (\n                  <Table\n                    tableHeaderColor=\"info\"\n                    tableHead={[\n                      \"\",\n                      \"ID\",\n                      \"Name\",\n                      // \"Status\",\n                      \"Image\",\n                      // \"Created By\",\n                      // \"Created Date\",\n                      // \"Modified By\",\n                      // \"Modified Date\",\n                      // \"Deteled By\",\n                      // \"Deleted Date\",\n                      \"Actions\",\n                    ]}\n                    tableData={Gallerydata}\n                    setEdit={setEdit}\n                    setDelete={setDelete}\n                    loading={loading}\n                  />\n                )}\n              </LoadingOverlay>\n            </CardBody>\n          </Card>\n          {pagination ? (\n            <Pagination\n              TotalCount={TotalCount}\n              setPageIndex={setPageIndex}\n              pageIndex={pageIndex}\n              className={\n                classes.textCenter + \" \" + classes.justifyContentCenter\n              }\n              pages={[\n                { text: \"Previous\" },\n                { active: true, text: \"1\" },\n\n                { text: \"Next\" },\n              ]}\n              color=\"info\"\n            />\n          ) : (\n            <></>\n          )}\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\n","import React from \"react\";\nimport Select from \"react-select\";\nimport PropTypes from \"prop-types\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nimport styles from \"assets/jss/material-dashboard-react/components/customInputStyle.js\";\nimport { makeStyles } from \"@material-ui/core\";\nconst useStyles = makeStyles(styles);\nexport default function SingleSelect({\n  placeholder,\n  Options,\n  setValue,\n  noOptionMessage,\n  formControlProps,\n}) {\n  const classes = useStyles();\n  const [selected, setSelected] = React.useState(null);\n  const handleChange = (e) => {\n    setValue({\n      Id: e.value,\n      Label: e.label,\n    });\n    setSelected(e);\n  };\n\n  return (\n    <FormControl\n      {...formControlProps}\n      className={formControlProps.className + \" \" + classes.formControl}\n    >\n      <Select\n        value={selected}\n        noOptionsMessage={() => noOptionMessage}\n        isSearchable\n        placeholder={placeholder}\n        options={Options}\n        onChange={handleChange}\n      />\n    </FormControl>\n  );\n}\nSingleSelect.propTypes = {\n  placeholder: PropTypes.string,\n  Options: PropTypes.array,\n  setValue: PropTypes.any,\n  data: PropTypes.any,\n  noOptionMessage: PropTypes.any,\n  formControlProps: PropTypes.any,\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Domain } from \"Domain\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport axios from \"axios\";\nimport Danger from \"components/Typography/Danger\";\nimport LoadingOverlay from \"react-loading-overlay\";\n// import ImageUpload from \"components/CustomUpload/ImageUpload.js\";\n\nimport AttachFile from \"@material-ui/icons/AttachFile\";\nimport CustomFileInput from \"components/CustomFileInput/CustomFileInput.js\";\nimport Pagination from \"components/Pagination/Pagination\";\nimport SingleSelect from \"components/SingleSelect\";\n// import { data } from \"./data.json\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function Courses() {\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [events, setEvents] = React.useState([]);\n  const [files, setFiles] = React.useState(null);\n  const [validated, setValidated] = React.useState(true);\n  const [uploaded, setUploaded] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  const [saving, setSaving] = React.useState(false);\n  const [departments, setDepartments] = React.useState([]);\n  const DepartmentList = departments.map((d) => ({\n    value: d.Id,\n    label: d.DepartmentName,\n  }));\n  const [DepartmentValues, setDepartmentValues] = React.useState({\n    Id: null,\n    label: \"\",\n  });\n  useEffect(() => {\n    setData((data) => ({\n      ...data,\n      DepartmentId: DepartmentValues.Id,\n      DepartmentName: DepartmentValues.Label,\n    }));\n    console.log(DepartmentValues);\n  }, [DepartmentValues.Id]);\n\n  useEffect(() => {\n    let passData = {\n      PageIndex: 0,\n      PageSize: 0,\n    };\n    fetch(Domain + \"/api/Admin/GetAllDepartments/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setDepartments(json.Data);\n      });\n  });\n  const Coursedata = events.map((d) => ({\n    Id: d.Id,\n    CourseCode: d.CourseCode,\n    CourseDuration: d.CourseDuration,\n    CourseName: d.CourseName,\n    DepartmentName: d.DepartmentName,\n    Description: d.Description,\n    Eligibility: d.Eligibility,\n    Image: d.Image,\n    Semesters: d.Semesters,\n    Syllabus: d.Syllabus,\n  }));\n\n  //Saved Notification trigger\n  const showSavedNotification = () => {\n    if (!saved) {\n      setSaved(true);\n      setTimeout(function () {\n        setSaved(false);\n      }, 3000);\n    }\n  };\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n  //Form Data\n  const [data, setData] = React.useState({\n    Id: 0,\n    CourseName: \"\",\n    DepartmentId: \"\",\n    DepartmentName: \"\",\n    Description: \"\",\n    CourseDuration: \"\",\n    Image: \"\",\n    Semesters: \"\",\n    Eligibility: \"\",\n    Syllabus: \"\",\n    CourseCode: \"\",\n    Status: \"Created\",\n  });\n\n  //PassData for getAll API\n  let passData = {\n    PageIndex: 0,\n    PageSize: 10,\n  };\n\n  //PaddData for Delete a Row\n  let passDelete = {\n    Id: deletee,\n    DeletedBy: 2,\n  };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n  //Function to handle Data input\n  function HandleData(e) {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n  function HandleClear() {\n    setData({\n      Id: 0,\n      CourseName: \"\",\n      DepartmentId: \"\",\n      DepartmentName: \"\",\n      Description: \"\",\n      CourseDuration: \"\",\n      Image: \"\",\n      Semesters: \"\",\n      Eligibility: \"\",\n      Syllabus: \"\",\n      CourseCode: \"\",\n      Status: \"Created\",\n    });\n  }\n  //Function for Validating fields\n  function ValidateFields() {\n    if (data.CourseName == \"\") {\n      return false;\n    } else if (data.CourseDuration == \"\") {\n      return false;\n    } else if (data.DepartmentId == \"\") {\n      return false;\n    } else if (data.Image == \"\") {\n      return false;\n    } else if (data.DepartmentName == \"\") {\n      return false;\n    } else if (data.Eligibility == \"\") {\n      return false;\n    } else if (data.Semesters == \"\") {\n      return false;\n    } else if (data.Syllabus == \"\") {\n      return false;\n    } else if (data.CourseCode == \"\") {\n      return false;\n    } else if (data.Description == \"\") {\n      return false;\n    } else return true;\n  }\n  //function to upload\n  function UploadImage() {\n    if (files != null) {\n      setValidated(true);\n      setSaving(true);\n      let form_data = new FormData();\n      form_data.append(\"File\", files[0]);\n      let url = Domain + \"/api/Uploads/File/\";\n      axios\n        .post(url, form_data, {\n          headers: {\n            \"content-type\": \"multipart/form-data\",\n          },\n        })\n        .then((res) => {\n          if (res.data.Success) {\n            data.Image = res.data.Data[0];\n            setUploaded(true);\n            HandleSave();\n          } else {\n            setUploaded(false);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setUploaded(false);\n        });\n    } else if (data.Image != \"\") HandleSave();\n    else setValidated(false);\n  }\n\n  //Function to save Data\n  function HandleSave() {\n    if (ValidateFields()) {\n      setValidated(true);\n      fetch(Domain + \"/api/Admin/CreateCourses/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          console.log(json);\n          if (json.Success) {\n            setData({\n              Id: 0,\n              CourseName: \"\",\n              Description: \"\",\n              DepartmentId: \"\",\n              DepartmentName: \"\",\n              CourseDuration: \"\",\n              Image: \"\",\n              Semesters: \"\",\n              Eligibility: \"\",\n              Syllabus: \"\",\n              CourseCode: \"\",\n              Status: \"Created\",\n            });\n            setEmpty(false);\n            showSavedNotification();\n            setSaving(false);\n          } else {\n            console.log(\"Error in insertion\");\n          }\n        });\n    } else {\n      setValidated(false);\n    }\n    setUploaded(false);\n  }\n\n  const [TotalCount, setTotalCount] = React.useState();\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n    fetch(Domain + \"/api/Admin/GetAllCourses/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.TotalCount > 10) {\n          console.log(\"pages\", Math.ceil(json.TotalCount / 10));\n          setTotalCount(Math.ceil(json.TotalCount / 10));\n\n          setPagination(true);\n        }\n      });\n  }, [pageIndex]);\n\n  useEffect(() => {\n    // console.log(\"componentDidMount\");\n    // console.log(\"Detele\" + deletee + \" edit\" + edit);\n\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Admin/GetAllCourses/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n      });\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      setDeleting(true);\n      fetch(Domain + \"/api/Admin/DeleteCourses/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passDelete),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setDelete([]);\n            showDeletedNotification();\n            setDeleting(false);\n          }\n        });\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Admin/GetCoursesById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit([]);\n            setData(json.Data);\n            console.log(json.Data);\n          }\n        });\n    }\n  }, [deletee, edit, saved]);\n\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Event Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Event Deleted Successfully\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n      <LoadingOverlay active={saving} spinner text=\"Saving Please Wait..\">\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <Card>\n              <form>\n                <CardHeader color=\"info\">\n                  <h4 className={classes.cardTitleWhite}>Add New Course</h4>\n                  <p className={classes.cardCategoryWhite}>\n                    Enter the Courses details below and hit Save\n                  </p>\n                </CardHeader>\n\n                <CardBody>\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <SingleSelect\n                        noOptionsMessage=\"Create Departments first\"\n                        placeholder=\"Select Department\"\n                        Options={DepartmentList}\n                        setValue={setDepartmentValues}\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.CourseName}\n                        labelText=\"Course Name\"\n                        id=\"CourseName\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.CourseDuration}\n                        labelText=\"CourseDuration\"\n                        id=\"CourseDuration\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={3}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Semesters}\n                        labelText=\"Semesters\"\n                        id=\"Semesters\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n\n                    <GridItem xs={12} sm={12} md={3}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Syllabus}\n                        labelText=\"Syllabus\"\n                        id=\"Syllabus\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={3}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Eligibility}\n                        labelText=\"Eligibility\"\n                        id=\"Eligibility\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={3}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.CourseCode}\n                        labelText=\"Course code\"\n                        id=\"CourseCode\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Description}\n                        labelText=\"Enter a description about the Course..\"\n                        id=\"Description\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          multiline: true,\n                          rows: 5,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={5} md={6}>\n                      {\" \"}\n                      <CustomFileInput\n                        setFiles={setFiles}\n                        saved={uploaded}\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          placeholder: \"Click here to upload an image\",\n                        }}\n                        endButton={{\n                          buttonProps: {\n                            round: true,\n                            color: \"info\",\n                            justIcon: true,\n                            filebutton: true,\n                          },\n                          icon: <AttachFile />,\n                        }}\n                      />\n                      {validated ? (\n                        <></>\n                      ) : (\n                        <Danger>Please enter all the details to save</Danger>\n                      )}\n                    </GridItem>\n                  </GridContainer>\n                </CardBody>\n                <CardFooter>\n                  <Button onClick={HandleClear} color=\"defualt\">\n                    Clear\n                  </Button>\n                  <Button onClick={UploadImage} color=\"info\">\n                    Save\n                  </Button>\n                </CardFooter>\n              </form>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      </LoadingOverlay>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>List Of All Courses</h4>\n              <p className={classes.cardCategoryWhite}>\n                All courses are listed below, you can delete or edit them.\n              </p>\n            </CardHeader>\n            <CardBody>\n              <LoadingOverlay active={deleting} spinner text=\"Please Wait..\">\n                {empty ? (\n                  <p>empty</p>\n                ) : (\n                  <Table\n                    tableHeaderColor=\"info\"\n                    tableHead={[\n                      \"\",\n                      \"ID\",\n                      \"CourseCode\",\n                      \"CourseDuration\",\n                      \"CourseName\",\n                      \"Department\",\n                      \"Description\",\n                      \"Eligibility\",\n                      \"Image\",\n                      \"Semesters\",\n                      \"Syllabus\",\n                      // \"Status\",\n                      // \"Created By\",\n                      // \"Created Date\",\n                      // \"Modified By\",\n                      // \"Modified Date\",\n                      // \"Deteled By\",\n                      // \"Deleted Date\",\n                      \"Actions\",\n                    ]}\n                    tableData={Coursedata}\n                    setEdit={setEdit}\n                    setDelete={setDelete}\n                    loading={loading}\n                  />\n                )}\n              </LoadingOverlay>\n            </CardBody>\n          </Card>\n          {pagination ? (\n            <Pagination\n              TotalCount={TotalCount}\n              setPageIndex={setPageIndex}\n              pageIndex={pageIndex}\n              className={\n                classes.textCenter + \" \" + classes.justifyContentCenter\n              }\n              pages={[\n                { text: \"Previous\" },\n                { active: true, text: \"1\" },\n\n                { text: \"Next\" },\n              ]}\n              color=\"info\"\n            />\n          ) : (\n            <></>\n          )}\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Domain } from \"Domain\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport axios from \"axios\";\nimport Danger from \"components/Typography/Danger\";\nimport LoadingOverlay from \"react-loading-overlay\";\n// import ImageUpload from \"components/CustomUpload/ImageUpload.js\";\n\nimport AttachFile from \"@material-ui/icons/AttachFile\";\nimport CustomFileInput from \"components/CustomFileInput/CustomFileInput.js\";\nimport Pagination from \"components/Pagination/Pagination\";\n// import { data } from \"./data.json\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function Events() {\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [events, setEvents] = React.useState([]);\n  const [files, setFiles] = React.useState(null);\n  const [validated, setValidated] = React.useState(true);\n  const [uploaded, setUploaded] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  const [Saving, setSaving] = React.useState(false);\n  const [insertionError, setinsertionError] = React.useState(false);\n  const [TotalCount, setTotalCount] = React.useState();\n\n  const Testdata = events.map((d) => ({\n    Id: d.Id,\n    Name: d.Name,\n    Message: d.Message,\n    Date: d.Date,\n    Description: d.Description,\n    Image: d.Image,\n  }));\n\n  //Saved Notification trigger\n  const showSavedNotification = () => {\n    if (!saved) {\n      setSaved(true);\n      setTimeout(function () {\n        setSaved(false);\n      }, 3000);\n    }\n  };\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n  //Error Notification Trigger\n  const showErrorNotification = () => {\n    if (!deleted) {\n      setinsertionError(true);\n      setTimeout(function () {\n        setinsertionError(false);\n      }, 3000);\n    }\n  };\n  //Form Data\n  const [data, setData] = React.useState({\n    Id: 0,\n    Name: \"\",\n    Message: \"\",\n    Date: \"\",\n    Status: \"Created\",\n    Image: \"\",\n    Description: \"\",\n  });\n\n  //PassData for getAll API\n  let passData = {\n    PageIndex: 0,\n    PageSize: 10,\n  };\n\n  //PaddData for Delete a Row\n  let passDelete = {\n    Id: deletee,\n    DeletedBy: 2,\n  };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n  //Function to handle Data input\n  function HandleData(e) {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n  function HandleClear() {\n    setData({\n      Id: 0,\n      Name: \"\",\n      Message: \"\",\n      Date: \"\",\n      Status: \"Created\",\n      Image: \"\",\n      Description: \"\",\n    });\n  }\n  //Function for Validating fields\n  function ValidateFields() {\n    if (data.Name == \"\") {\n      return false;\n    } else if (data.Date == \"\") {\n      return false;\n    } else if (data.Image == \"\") {\n      return false;\n    } else if (data.Description == \"\") {\n      return false;\n    } else return true;\n  }\n  //function to upload\n  function UploadImage() {\n    if (files != null) {\n      setValidated(true);\n      setSaving(true);\n      let form_data = new FormData();\n      form_data.append(\"File\", files[0]);\n      let url = Domain + \"/api/Uploads/File/\";\n      axios\n        .post(url, form_data, {\n          headers: {\n            \"content-type\": \"multipart/form-data\",\n          },\n        })\n        .then((res) => {\n          if (res.data.Success) {\n            data.Image = res.data.Data[0];\n            setUploaded(true);\n            HandleSave();\n          } else {\n            setUploaded(false);\n          }\n        });\n    } else if (data.Image != \"\") HandleSave();\n    else setValidated(false);\n  }\n\n  //Function to save Data\n  function HandleSave() {\n    if (ValidateFields()) {\n      setValidated(true);\n      fetch(Domain + \"/api/Admin/CreateTestimonials/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setData({\n              Id: 0,\n              Name: \"\",\n              Message: \"\",\n              Date: \"\",\n              Status: \"Created\",\n              Image: \"\",\n              Description: \"\",\n            });\n            setEmpty(false);\n            showSavedNotification();\n            setSaving(false);\n          } else {\n            setData({\n              Id: 0,\n              Name: \"\",\n              Message: \"\",\n              Date: \"\",\n              Status: \"Created\",\n              Image: \"\",\n              Description: \"\",\n            });\n            setSaving(false);\n            showErrorNotification();\n            console.log(\"Error in insertion\", json);\n          }\n        });\n    } else {\n      setValidated(false);\n    }\n    setUploaded(false);\n  }\n\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n    fetch(Domain + \"/api/Admin/GetAllTestimonials/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.TotalCount > 10) {\n          console.log(\"not multiple of 10:\", Math.ceil(json.TotalCount / 10));\n          setTotalCount(Math.ceil(json.TotalCount / 10));\n          setPagination(true);\n        }\n      });\n  }, [pageIndex]);\n\n  useEffect(() => {\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Admin/GetAllTestimonials/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n      });\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      setDeleting(true);\n      fetch(Domain + \"/api/Admin/DeleteTestimonials/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passDelete),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setDelete([]);\n            showDeletedNotification();\n            setDeleting(false);\n          }\n        });\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Admin/GetTestimonialsById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit([]);\n            setData(json.Data);\n            console.log(json.Data);\n          }\n        });\n    }\n  }, [deletee, edit, saved]);\n\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Testimonials Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Testimonials Deleted Successfully\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Something went wrong! Try again.\"\n        open={insertionError}\n        closeNotification={() => setinsertionError(false)}\n        close\n      />\n      <LoadingOverlay active={Saving} spinner text=\"Saving Please wait...\">\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <Card>\n              <form>\n                <CardHeader color=\"info\">\n                  <h4 className={classes.cardTitleWhite}>\n                    Add New Testimonials\n                  </h4>\n                  <p className={classes.cardCategoryWhite}>\n                    Enter the Testimonials details below and hit Save\n                  </p>\n                </CardHeader>\n\n                <CardBody>\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={5}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Name}\n                        labelText=\"Student Name\"\n                        id=\"Name\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={3}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Message}\n                        labelText=\"Branch/Company\"\n                        id=\"Message\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Date}\n                        labelText=\"Date\"\n                        id=\"Date\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                  </GridContainer>\n\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Description}\n                        labelText=\"Message\"\n                        id=\"Description\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          multiline: true,\n                          rows: 5,\n                        }}\n                      />\n                    </GridItem>\n\n                    <GridItem xs={12} sm={5} md={5}>\n                      {\" \"}\n                      <CustomFileInput\n                        setFiles={setFiles}\n                        saved={uploaded}\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          placeholder: \"Click here to upload an image\",\n                        }}\n                        endButton={{\n                          buttonProps: {\n                            round: true,\n                            color: \"info\",\n                            justIcon: true,\n                            filebutton: true,\n                          },\n                          icon: <AttachFile />,\n                        }}\n                      />\n                      {validated ? (\n                        <></>\n                      ) : (\n                        <Danger>Please enter all the details to save</Danger>\n                      )}\n                    </GridItem>\n                  </GridContainer>\n                </CardBody>\n                <CardFooter>\n                  <Button onClick={HandleClear} color=\"defualt\">\n                    Clear\n                  </Button>\n                  <Button onClick={UploadImage} color=\"info\">\n                    Save\n                  </Button>\n                </CardFooter>\n              </form>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      </LoadingOverlay>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>\n                List Of All Testimonials\n              </h4>\n              <p className={classes.cardCategoryWhite}>\n                All Testimonials are listed below, you can delete or edit them.\n              </p>\n            </CardHeader>\n            <CardBody>\n              <LoadingOverlay active={deleting} spinner text=\"Please Wait..\">\n                {empty ? (\n                  <p>empty</p>\n                ) : (\n                  <Table\n                    tableHeaderColor=\"info\"\n                    tableHead={[\n                      \"\",\n                      \"ID\",\n                      \"Name\",\n                      \"Branch/Company\",\n                      \"Date\",\n                      \"Message\",\n                      \"Image\",\n                      \"Actions\",\n                    ]}\n                    tableData={Testdata}\n                    setEdit={setEdit}\n                    setDelete={setDelete}\n                    loading={loading}\n                  />\n                )}\n              </LoadingOverlay>\n            </CardBody>\n          </Card>\n          {pagination ? (\n            <Pagination\n              TotalCount={TotalCount}\n              setPageIndex={setPageIndex}\n              pageIndex={pageIndex}\n              className={\n                classes.textCenter + \" \" + classes.justifyContentCenter\n              }\n              pages={[\n                { text: \"Previous\" },\n                { active: true, text: \"1\" },\n\n                { text: \"Next\" },\n              ]}\n              color=\"info\"\n            />\n          ) : (\n            <></>\n          )}\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Domain } from \"Domain\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\n\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport axios from \"axios\";\nimport Danger from \"components/Typography/Danger\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport SingleSelect from \"components/SingleSelect\";\nimport AttachFile from \"@material-ui/icons/AttachFile\";\nimport CustomFileInput from \"components/CustomFileInput/CustomFileInput.js\";\nimport Pagination from \"components/Pagination/Pagination\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function Students() {\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [events, setEvents] = React.useState([]);\n  const [files, setFiles] = React.useState(null);\n  const [validated, setValidated] = React.useState(true);\n  const [uploaded, setUploaded] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  const [saving, setSaving] = React.useState(false);\n  const [addStudent, setAddstudent] = React.useState(false);\n  const [validateFilter, setValidateFilter] = React.useState(true);\n  const [Courses, setCourses] = React.useState([]);\n  const [TotalCount, setTotalCount] = React.useState();\n\n  // const [startDate, setStartDate] = useState(new Date());\n  const CourseList = Courses.map((d) => ({\n    value: d.Id,\n    label: d.CourseName,\n  }));\n  //Filter Data\n  const [filterData, setFilterData] = React.useState({\n    PageIndex: 0,\n    PageSize: 10,\n    Year: \"\",\n    CourseId: \"\",\n  });\n  const [CourseValues, setCourseValues] = React.useState({\n    Id: null,\n    label: \"\",\n  });\n  const [CourseValues1, setCourseValues1] = React.useState({\n    Id: null,\n    label: \"\",\n  });\n  const Studentdata = events.map((d) => ({\n    Id: d.Id,\n    FullName: d.FullName,\n    RegistrationNo: d.RegistrationNo,\n    ClassNo: d.ClassNo,\n    AdmissionNo: d.AdmissionNo,\n    Mobile: d.Mobile,\n    Email: d.Email,\n    Course: d.Course,\n    CourseCode: d.CourseCode,\n    Gender: d.Gender,\n    DOB: d.DOB,\n    Password: d.Password,\n    GuardianName: d.GuardianName,\n    GuardianMobile: d.GuardianMobile,\n    GuardianRelation: d.GuardianRelation,\n    Image: d.Image,\n    CourseId: d.CourseId,\n  }));\n\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n    fetch(Domain + \"/api/Student/GetAllStudents/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.TotalCount > 10) {\n          console.log(\"pages\", Math.ceil(json.TotalCount / 10));\n          setTotalCount(Math.ceil(json.TotalCount / 10));\n\n          setPagination(true);\n        }\n      });\n  }, [pageIndex]);\n\n  //PassData for get all semesters and courses for dropdown\n  let passData1 = {\n    PageIndex: 0,\n    PageSize: 0,\n  };\n\n  function AddStudent() {\n    if (addStudent) {\n      setAddstudent(false);\n      HandleClear();\n    } else setAddstudent(true);\n  }\n  //Saved Notification trigger\n  const showSavedNotification = () => {\n    if (!saved) {\n      setSaved(true);\n      setTimeout(function () {\n        setSaved(false);\n      }, 3000);\n    }\n  };\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n\n  //Form Data\n  const [data, setData] = React.useState({\n    Id: 0,\n    FullName: \"\",\n    Mobile: \"\",\n    Email: \"\",\n    Gender: \"\",\n    DOB: \"\",\n    Password: \"\",\n    GuardianName: \"\",\n    GuardianMobile: \"\",\n    RegistrationNo: \"\",\n    AdmissionNo: \"\",\n    CourseId: null,\n    Course: \"\",\n    CourseCode: \"\",\n    GuardianRelation: \"\",\n    Status: \"Created\",\n    Image: \"\",\n  });\n\n  //PassData for getAll API\n  let passData = {\n    PageIndex: 0,\n    PageSize: 10,\n  };\n\n  //PaddData for Delete a Row\n  let passDelete = {\n    Id: deletee,\n    DeletedBy: 2,\n  };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n  //Function to handle Data input\n  function HandleData(e) {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n  function HandleFilterData(e) {\n    const newData = { ...filterData };\n    newData[e.target.id] = e.target.value;\n    setFilterData(newData);\n    console.log(newData);\n  }\n  function HandleClear() {\n    setData({\n      Id: 0,\n      FullName: \"\",\n      Mobile: \"\",\n      Email: \"\",\n      Gender: \"\",\n      DOB: \"\",\n      Password: \"\",\n      GuardianName: \"\",\n      GuardianMobile: \"\",\n      RegistrationNo: \"\",\n      AdmissionNo: \"\",\n      CourseId: \"\",\n      Course: \"\",\n      CourseCode: \"\",\n      GuardianRelation: \"\",\n      Status: \"Created\",\n      Image: \"\",\n    });\n  }\n  //Function for Validating fields\n  function ValidateFields() {\n    if (data.FullName == \"\") {\n      return false;\n    } else if (data.Mobile == \"\") {\n      return false;\n    } else if (data.Email == \"\") {\n      return false;\n    } else if (data.Gender == \"\") {\n      return false;\n    } else if (data.DOB == \"\") {\n      return false;\n    } else if (data.GuardianName == \"\") {\n      return false;\n    } else if (data.GuardianMobile == \"\") {\n      return false;\n    } else if (data.RegistrationNo == \"\") {\n      return false;\n    } else if (data.CourseId == \"\") {\n      return false;\n    } else if (data.AdmissionNo == \"\") {\n      return false;\n    } else if (data.GuardianRelation == \"\") {\n      return false;\n    } else if (data.Image == \"\") {\n      return false;\n    } else return true;\n  }\n  //function to upload\n  function UploadImage() {\n    if (files != null) {\n      setValidated(true);\n      setSaving(true);\n      let form_data = new FormData();\n      form_data.append(\"File\", files[0]);\n      let url = Domain + \"/api/Uploads/File/\";\n      axios\n        .post(url, form_data, {\n          headers: {\n            \"content-type\": \"multipart/form-data\",\n          },\n        })\n        .then((res) => {\n          if (res.data.Success) {\n            data.Image = res.data.Data[0];\n            setUploaded(true);\n            HandleSave();\n          } else {\n            setUploaded(false);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setUploaded(false);\n        });\n    } else if (data.Image != \"\") HandleSave();\n    else setValidated(false);\n  }\n\n  //Function to save Data\n  function HandleSave() {\n    if (ValidateFields()) {\n      setValidated(true);\n      fetch(Domain + \"/api/Student/CreateStudent/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          console.log(json);\n          if (json.Success) {\n            setData({\n              Id: 0,\n              FullName: \"\",\n              Mobile: \"\",\n              Email: \"\",\n              Gender: \"\",\n              DOB: \"\",\n              Password: \"\",\n              GuardianName: \"\",\n              GuardianMobile: \"\",\n              RegistrationNo: \"\",\n              AdmissionNo: \"\",\n              CourseId: \"\",\n              Course: \"\",\n              CourseCode: \"\",\n              GuardianRelation: \"\",\n              Status: \"Created\",\n              Image: \"\",\n            });\n            setEmpty(false);\n            showSavedNotification();\n            setSaving(false);\n            setAddstudent(false);\n          } else {\n            console.log(\"Error in insertion\");\n          }\n        });\n    } else {\n      setValidated(false);\n      setSaving(false);\n    }\n    setUploaded(false);\n  }\n  useEffect(() => {\n    console.log(CourseValues);\n    setFilterData((data) => ({\n      ...data,\n      CourseId: CourseValues.Id,\n    }));\n  }, [CourseValues.Id]);\n\n  useEffect(() => {\n    let PassId = {\n      Id: CourseValues1.Id,\n    };\n    //API call to get event By ID to edit a row\n\n    fetch(Domain + \"/api/Admin/GetCoursesById/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(PassId),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        console.log(json);\n\n        if (json.Success) {\n          setData((data) => ({\n            ...data,\n            CourseCode: json.Data.CourseCode,\n            CourseId: CourseValues1.Id,\n            Course: CourseValues1.Label,\n          }));\n          // console.log(json.Data);\n        }\n      });\n\n    // console.log(\"CourseValues1: \", data, CourseValues1.Id);\n  }, [CourseValues1.Id]);\n\n  useEffect(() => {\n    //API call for get all course names to dropedown\n    fetch(Domain + \"/api/Admin/GetAllCourses/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData1),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        if (json.Data.length != 0) setCourses(json.Data);\n      });\n\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Student/GetAllStudents/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n      });\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      setDeleting(true);\n      fetch(Domain + \"/api/Student/DeleteStudent/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passDelete),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setDelete([]);\n            showDeletedNotification();\n            setDeleting(false);\n          }\n        });\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Student/GetStudentById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit([]);\n            setData(json.Data);\n            setAddstudent(true);\n            console.log(json.Data);\n          }\n        });\n    }\n  }, [deletee, edit, saved]);\n\n  function HandleFilter() {\n    console.log(filterData);\n    if (\n      filterData.CourseId == null ||\n      filterData.CourseId == \"\" ||\n      filterData.Year == \"\"\n    )\n      setValidateFilter(false);\n    else {\n      setDeleting(true);\n      setValidateFilter(true);\n\n      //API call for get latest 10 elements\n      fetch(Domain + \"/api/Student/GetStudentsByCourseIdandDate/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(filterData),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          console.log(json);\n          setEmpty(false);\n          setEvents(json.Data);\n          setFilterData({\n            PageIndex: 0,\n            PageSize: 10,\n            Year: \"\",\n            CourseId: \"\",\n          });\n          setDeleting(false);\n          if (json.Data.length == 0) setEmpty(true);\n          setLoading(false);\n        });\n    }\n  }\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Student Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Student Deleted Successfully\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n      <LoadingOverlay active={saving} spinner text=\"Saving Please Wait..\">\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <Card>\n              <form>\n                <CardHeader color=\"info\">\n                  <h4 className={classes.cardTitleWhite}>\n                    Filter Students Data\n                  </h4>\n                  <p className={classes.cardCategoryWhite}>\n                    Select the Year and Course then click search\n                  </p>\n                </CardHeader>\n\n                <CardBody>\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={3}>\n                      <CustomInput\n                        onChange={(e) => HandleFilterData(e)}\n                        value={filterData.Year}\n                        labelText=\"Year\"\n                        id=\"Year\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={3}>\n                      <SingleSelect\n                        noOptionsMessage=\"Create any course first\"\n                        placeholder=\"Select Course\"\n                        Options={CourseList}\n                        setValue={setCourseValues}\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                  </GridContainer>\n                  {validateFilter ? (\n                    <></>\n                  ) : (\n                    <Danger>Please select Year and Course</Danger>\n                  )}\n                </CardBody>\n                <CardFooter>\n                  <Button onClick={HandleFilter} color=\"info\">\n                    Search\n                  </Button>\n                </CardFooter>\n              </form>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      </LoadingOverlay>\n      {addStudent ? (\n        <div>\n          <LoadingOverlay active={saving} spinner text=\"Saving Please Wait..\">\n            <GridContainer>\n              <GridItem xs={12} sm={12} md={12}>\n                <Card>\n                  <form>\n                    <CardHeader color=\"info\">\n                      <h4 className={classes.cardTitleWhite}>\n                        Add New Students\n                      </h4>\n                      <p className={classes.cardCategoryWhite}>\n                        Enter the Student details below and hit Save\n                      </p>\n                    </CardHeader>\n\n                    <CardBody>\n                      <GridContainer>\n                        <GridItem xs={12} sm={12} md={4}>\n                          <CustomInput\n                            onChange={(e) => HandleData(e)}\n                            value={data.FullName}\n                            labelText=\"Full Name\"\n                            id=\"FullName\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n                        <GridItem xs={12} sm={12} md={4}>\n                          <CustomInput\n                            onChange={(e) => HandleData(e)}\n                            value={data.RegistrationNo}\n                            labelText=\"Registration No\"\n                            id=\"RegistrationNo\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n                        <GridItem xs={12} sm={12} md={4}>\n                          <SingleSelect\n                            noOptionsMessage=\"Create any course first\"\n                            placeholder=\"Select Course\"\n                            Options={CourseList}\n                            setValue={setCourseValues1}\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n                        <GridItem xs={12} sm={12} md={4}>\n                          <CustomInput\n                            disabled\n                            onChange={(e) => HandleData(e)}\n                            value={data.CourseCode}\n                            labelText=\"Course Code\"\n                            id=\"CourseCode\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n                        <GridItem xs={12} sm={12} md={4}>\n                          <CustomInput\n                            onChange={(e) => HandleData(e)}\n                            value={data.AdmissionNo}\n                            labelText=\"Admission No\"\n                            id=\"AdmissionNo\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n\n                        <GridItem xs={12} sm={12} md={4}>\n                          <CustomInput\n                            onChange={(e) => HandleData(e)}\n                            value={data.Mobile}\n                            labelText=\"Mobile\"\n                            id=\"Mobile\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n\n                        <GridItem xs={12} sm={12} md={4}>\n                          <CustomInput\n                            onChange={(e) => HandleData(e)}\n                            value={data.Email}\n                            labelText=\"Email ID\"\n                            id=\"Email\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n                        <GridItem xs={12} sm={12} md={4}>\n                          <CustomInput\n                            onChange={(e) => HandleData(e)}\n                            value={data.Gender}\n                            labelText=\"Gender\"\n                            id=\"Gender\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n                        <GridItem xs={12} sm={12} md={4}>\n                          <CustomInput\n                            onChange={(e) => HandleData(e)}\n                            value={data.DOB}\n                            labelText=\"Date Of Birth (dd/mm/yyyy)\"\n                            id=\"DOB\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n\n                        <GridItem xs={12} sm={12} md={4}>\n                          <CustomInput\n                            onChange={(e) => HandleData(e)}\n                            value={data.GuardianName}\n                            labelText=\"Guardian Name\"\n                            id=\"GuardianName\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n\n                        <GridItem xs={12} sm={12} md={4}>\n                          <CustomInput\n                            onChange={(e) => HandleData(e)}\n                            value={data.GuardianMobile}\n                            labelText=\"Guardian Mobile\"\n                            id=\"GuardianMobile\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n                        <GridItem xs={12} sm={12} md={4}>\n                          <CustomInput\n                            onChange={(e) => HandleData(e)}\n                            value={data.GuardianRelation}\n                            labelText=\"Gurdian Relation\"\n                            id=\"GuardianRelation\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n                        <GridItem xs={12} sm={5} md={4}>\n                          {\" \"}\n                          <CustomFileInput\n                            setFiles={setFiles}\n                            saved={uploaded}\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                            inputProps={{\n                              placeholder: \"Click here to upload an image\",\n                            }}\n                            endButton={{\n                              buttonProps: {\n                                round: true,\n                                color: \"info\",\n                                justIcon: true,\n                                filebutton: true,\n                              },\n                              icon: <AttachFile />,\n                            }}\n                          />\n                          {validated ? (\n                            <></>\n                          ) : (\n                            <Danger>\n                              Please enter all the details to save\n                            </Danger>\n                          )}\n                        </GridItem>\n                      </GridContainer>\n                    </CardBody>\n                    <CardFooter>\n                      <Button onClick={AddStudent} color=\"danger\">\n                        Cancel\n                      </Button>\n                      <Button onClick={HandleClear} color=\"defualt\">\n                        Clear\n                      </Button>\n                      <Button onClick={UploadImage} color=\"info\">\n                        Save\n                      </Button>\n                    </CardFooter>\n                  </form>\n                </Card>\n              </GridItem>\n            </GridContainer>\n          </LoadingOverlay>\n        </div>\n      ) : (\n        <Button onClick={AddStudent} color=\"info\">\n          Add Student\n        </Button>\n      )}\n\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>List Of All Students</h4>\n              <p className={classes.cardCategoryWhite}>\n                All students are listed below, you can delete or edit them.\n              </p>\n            </CardHeader>\n            <CardBody>\n              <LoadingOverlay active={deleting} spinner text=\"Please Wait..\">\n                {empty ? (\n                  <p>empty</p>\n                ) : (\n                  <Table\n                    tableHeaderColor=\"info\"\n                    tableHead={[\n                      \"\",\n                      \"Id\",\n                      \"Full Name\",\n                      \"Registration No\",\n                      \"Class Number\",\n                      \"Admission Number\",\n                      \"Mobile\",\n                      \"Email\",\n                      \"Course\",\n                      \"Course code\",\n                      \"Gender\",\n                      \"DOB\",\n                      \"Password\",\n                      \"Gur_Name\",\n                      \"Gur_Mobile\",\n                      \"Gur_Relation\",\n                      \"Image\",\n                      \"CourseId\",\n                      \"Actions\",\n                      // \"Created By\",\n                      // \"Created Date\",\n                      // \"Modified By\",\n                      // \"Modified Date\",\n                      // \"Deteled By\",\n                      // \"Deleted Date\",\n                    ]}\n                    tableData={Studentdata}\n                    setEdit={setEdit}\n                    setDelete={setDelete}\n                    loading={loading}\n                  />\n                )}\n              </LoadingOverlay>\n            </CardBody>\n          </Card>\n          {pagination ? (\n            <Pagination\n              TotalCount={TotalCount}\n              setPageIndex={setPageIndex}\n              pageIndex={pageIndex}\n              className={\n                classes.textCenter + \" \" + classes.justifyContentCenter\n              }\n              pages={[\n                { text: \"Previous\" },\n                { active: true, text: \"1\" },\n\n                { text: \"Next\" },\n              ]}\n              color=\"info\"\n            />\n          ) : (\n            <></>\n          )}\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Domain } from \"Domain\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport axios from \"axios\";\nimport Danger from \"components/Typography/Danger\";\nimport LoadingOverlay from \"react-loading-overlay\";\n// import ImageUpload from \"components/CustomUpload/ImageUpload.js\";\nimport Pagination from \"components/Pagination/Pagination\";\n\nimport AttachFile from \"@material-ui/icons/AttachFile\";\nimport CustomFileInput from \"components/CustomFileInput/CustomFileInput.js\";\n\n// import { data } from \"./data.json\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function Publications() {\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [events, setEvents] = React.useState([]);\n  const [files, setFiles] = React.useState(null);\n  const [validated, setValidated] = React.useState(true);\n  const [uploaded, setUploaded] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  const [saving, setSaving] = React.useState(false);\n\n  const Publicdata = events.map((d) => ({\n    Id: d.Id,\n    Name: d.Name,\n    PublishedBy: d.PublishedBy,\n    PublishedDate: d.PublishedDate,\n    Image: d.Image,\n    Description: d.Description,\n  }));\n\n  //Saved Notification trigger\n  const showSavedNotification = () => {\n    if (!saved) {\n      setSaved(true);\n      setTimeout(function () {\n        setSaved(false);\n      }, 3000);\n    }\n  };\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n  //Form Data\n  const [data, setData] = React.useState({\n    Id: 0,\n    Name: \"\",\n    PublishedBy: \"\",\n    PublishedDate: \"\",\n    Status: \"Created\",\n    Image: \"\",\n    Description: \"\",\n  });\n\n  //PaddData for Delete a Row\n  let passDelete = {\n    Id: deletee,\n    DeletedBy: 2,\n  };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n\n  //Function to handle Data input\n  function HandleData(e) {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n  function HandleClear() {\n    setData({\n      Id: 0,\n      Name: \"\",\n      PublishedBy: \"\",\n      PublishedDate: \"\",\n      Status: \"Created\",\n      Image: \"\",\n      Description: \"\",\n    });\n  }\n\n  //Function for Validating fields\n  function ValidateFields() {\n    if (data.Name == \"\") {\n      return false;\n    } else if (data.PublishedBy == \"\") {\n      return false;\n    } else if (data.PublishedDate == \"\") {\n      return false;\n    } else if (data.Image == \"\") {\n      return false;\n    } else if (data.Description == \"\") {\n      return false;\n    } else return true;\n  }\n  //function to upload\n  function UploadImage() {\n    if (files != null) {\n      setValidated(true);\n      setSaving(true);\n      let form_data = new FormData();\n      form_data.append(\"File\", files[0]);\n      let url = Domain + \"/api/Uploads/File/\";\n      axios\n        .post(url, form_data, {\n          headers: {\n            \"content-type\": \"multipart/form-data\",\n          },\n        })\n        .then((res) => {\n          if (res.data.Success) {\n            data.Image = res.data.Data[0];\n            setUploaded(true);\n            HandleSave();\n          } else {\n            setUploaded(false);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setUploaded(false);\n        });\n    } else if (data.Image != \"\") HandleSave();\n    else setValidated(false);\n  }\n\n  //Function to save Data\n  function HandleSave() {\n    if (ValidateFields()) {\n      setValidated(true);\n      fetch(Domain + \"/api/Admin/CreatePublications/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setData({\n              Id: 0,\n              Name: \"\",\n              PublishedBy: \"\",\n              PublishedDate: \"\",\n              Status: \"Created\",\n              Image: \"\",\n              Description: \"\",\n            });\n            setEmpty(false);\n            showSavedNotification();\n            setSaving(false);\n          } else {\n            console.log(\"Error in insertion\");\n          }\n        });\n    } else {\n      setValidated(false);\n    }\n    setUploaded(false);\n  }\n\n  const [TotalCount, setTotalCount] = React.useState();\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n    fetch(Domain + \"/api/Admin/GetAllPublications/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.TotalCount > 10) {\n          console.log(\"pages\", Math.ceil(json.TotalCount / 10));\n          setTotalCount(Math.ceil(json.TotalCount / 10));\n\n          setPagination(true);\n        }\n      });\n  }, [pageIndex]);\n\n  useEffect(() => {\n    console.log(\"componentDidMount\");\n    console.log(\"Detele\" + deletee + \" edit\" + edit);\n\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Admin/GetAllPublications/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      // body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n        // if (json.Data.length > 10) setPagination(true);\n      });\n    // }, [pageIndex]);\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      setDeleting(true);\n      fetch(Domain + \"/api/Admin/DeletePublications/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passDelete),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setDelete([]);\n            showDeletedNotification();\n            setDeleting(false);\n          }\n        });\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Admin/GetPublicationsById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit([]);\n            setData(json.Data);\n            console.log(json.Data);\n          }\n        });\n    }\n  }, [deletee, edit, saved]);\n\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Publications Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Publications Deleted Successfully\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n      <LoadingOverlay active={saving} spinner text=\"Saving Please Wait..\">\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <Card>\n              <form>\n                <CardHeader color=\"info\">\n                  <h4 className={classes.cardTitleWhite}>\n                    Add New Publications\n                  </h4>\n                  <p className={classes.cardCategoryWhite}>\n                    Enter the Publication details below and hit Save\n                  </p>\n                </CardHeader>\n\n                <CardBody>\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={5}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Name}\n                        labelText=\"Name\"\n                        id=\"Name\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={3}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.PublishedBy}\n                        labelText=\"Published By\"\n                        id=\"PublishedBy\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={3}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.PublishedDate}\n                        labelText=\"Published Date\"\n                        id=\"PublishedDate\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                  </GridContainer>\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Description}\n                        labelText=\"Enter a description about the publication..\"\n                        id=\"Description\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          multiline: true,\n                          rows: 5,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={5} md={6}>\n                      {\" \"}\n                      <CustomFileInput\n                        setFiles={setFiles}\n                        saved={uploaded}\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          placeholder: \"Click here to upload an image\",\n                        }}\n                        endButton={{\n                          buttonProps: {\n                            round: true,\n                            color: \"info\",\n                            justIcon: true,\n                            filebutton: true,\n                          },\n                          icon: <AttachFile />,\n                        }}\n                      />\n                      {validated ? (\n                        <></>\n                      ) : (\n                        <Danger>Please enter all the details to save</Danger>\n                      )}\n                    </GridItem>\n                  </GridContainer>\n                </CardBody>\n                <CardFooter>\n                  <Button onClick={HandleClear} color=\"defualt\">\n                    Clear\n                  </Button>\n                  <Button onClick={UploadImage} color=\"info\">\n                    Save\n                  </Button>\n                </CardFooter>\n              </form>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      </LoadingOverlay>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>\n                List Of All Publications\n              </h4>\n              <p className={classes.cardCategoryWhite}>\n                All Publications are listed below, you can delete or edit them.\n              </p>\n            </CardHeader>\n            <CardBody>\n              <LoadingOverlay active={deleting} spinner text=\"Please Wait..\">\n                {empty ? (\n                  <p>empty</p>\n                ) : (\n                  <Table\n                    tableHeaderColor=\"info\"\n                    tableHead={[\n                      \"\",\n                      \"ID\",\n                      \"Name\",\n                      \"Published By\",\n                      \"Published Date\",\n                      \"Image\",\n                      \"Description\",\n                      // \"Created By\",\n                      // \"Created Date\",\n                      // \"Modified By\",\n                      // \"Modified Date\",\n                      // \"Deteled By\",\n                      // \"Deleted Date\",\n                      \"Actions\",\n                    ]}\n                    tableData={Publicdata}\n                    setEdit={setEdit}\n                    setDelete={setDelete}\n                    loading={loading}\n                  />\n                )}\n              </LoadingOverlay>\n            </CardBody>\n          </Card>\n          {pagination ? (\n            <Pagination\n              TotalCount={TotalCount}\n              setPageIndex={setPageIndex}\n              pageIndex={pageIndex}\n              className={\n                classes.textCenter + \" \" + classes.justifyContentCenter\n              }\n              pages={[\n                { text: \"Previous\" },\n                { active: true, text: \"1\" },\n\n                { text: \"Next\" },\n              ]}\n              color=\"info\"\n            />\n          ) : (\n            <></>\n          )}\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Domain } from \"Domain\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport Danger from \"components/Typography/Danger\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport SingleSelect from \"components/SingleSelect\";\nimport Pagination from \"components/Pagination/Pagination\";\n\n// import { data } from \"./data.json\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function Subjects() {\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [events, setEvents] = React.useState([]);\n  const [validated, setValidated] = React.useState(true);\n  const [loading, setLoading] = React.useState(true);\n  const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  const [Courses, setCourses] = React.useState([]);\n  const [semesters, setSemesters] = React.useState([]);\n  const [saving, setSaving] = React.useState(false);\n  // const [TotalCount, setTotalCount] = React.useState();\n  const [CourseValues, setCourseValues] = React.useState({\n    Id: null,\n    label: \"\",\n  });\n  const [SemesterValues, setSemesterValues] = React.useState({\n    Id: null,\n    label: \"\",\n  });\n  //Converting json response to passdata for react select\n  const CourseList = Courses.map((d) => ({\n    value: d.Id,\n    label: d.CourseName,\n  }));\n  const SemesterList = semesters.map((d) => ({\n    value: d.Id,\n    label: d.SemesterNo,\n  }));\n  const Subjectdata = events.map((d) => ({\n    Id: d.Id,\n    CourseName: d.CourseName,\n    SemesterNo: d.SemesterNo,\n    SubjectName: d.SubjectName,\n    SubjectCode: d.SubjectCode,\n    Description: d.Description,\n  }));\n  const [TotalCount, setTotalCount] = React.useState();\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n    fetch(Domain + \"/api/Admin/GetAllSubjects/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.TotalCount > 10) {\n          console.log(\"pages\", Math.ceil(json.TotalCount / 10));\n          setTotalCount(Math.ceil(json.TotalCount / 10));\n\n          setPagination(true);\n        }\n      });\n  }, [pageIndex]);\n  //Saved Notification trigger\n  const showSavedNotification = () => {\n    if (!saved) {\n      setSaved(true);\n      setTimeout(function () {\n        setSaved(false);\n      }, 3000);\n    }\n  };\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n  //Form Data\n  const [data, setData] = React.useState({\n    Id: 0,\n    CourseId: null,\n    SemesterId: null,\n    CourseName: \"\",\n    SemesterNo: \"\",\n    SubjectName: \"\",\n    SubjectCode: \"\",\n    Status: \"Created\",\n    Image: \"\",\n    Description: \"\",\n  });\n\n  //PassData for getAll API\n  let passData = {\n    PageIndex: 0,\n    PageSize: 10,\n  };\n  //PassData for get all semesters and courses for dropdown\n  let passData1 = {\n    PageIndex: 0,\n    PageSize: 0,\n  };\n  let passCourseId = {\n    CourseId: data.CourseId,\n  };\n  //PaddData for Delete a Row\n  let passDelete = {\n    Id: deletee,\n    DeletedBy: 2,\n  };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n  //Function to handle Data input\n  function HandleData(e) {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n  function HandleClear() {\n    setValidated(true);\n    setData({\n      Id: 0,\n      CourseId: \"\",\n      SemesterId: \"\",\n      CourseName: \"\",\n      SemesterNo: \"\",\n      SubjectName: \"\",\n      SubjectCode: \"\",\n      Status: \"Created\",\n      Description: \"\",\n    });\n  }\n  //Function for Validating fields\n  function ValidateFields() {\n    if (data.CourseId == \"\" || data.CourseId == null) {\n      return false;\n    } else if (data.SemesterId == \"\" || data.SemesterId == null) {\n      return false;\n    } else if (data.CourseName == \"\") {\n      return false;\n    } else if (data.SemesterNo == \"\") {\n      return false;\n    } else if (data.SubjectName == \"\") {\n      return false;\n    } else if (data.SubjectCode == \"\") {\n      return false;\n    } else if (data.Description == \"\") {\n      return false;\n    } else return true;\n  }\n\n  //API call to get all semesters from the database to dropdown list\n  fetch(Domain + \"/api/Admin/GetSemesterByCourseId/\", {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(passCourseId),\n  })\n    .then((response) => response.json())\n\n    .then((json) => {\n      if (json.Data.length != 0) setSemesters(json.Data);\n      else setSemesters([]);\n    });\n  //Function to save Data\n  function HandleSave() {\n    if (ValidateFields()) {\n      setValidated(true);\n      fetch(Domain + \"/api/Admin/CreateSubjects/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setData({\n              Id: 0,\n              CourseId: \"\",\n              SemesterId: \"\",\n              CourseName: \"\",\n              SemesterNo: \"\",\n              SubjectName: \"\",\n              SubjectCode: \"\",\n              Status: \"Created\",\n              Image: \"\",\n              Description: \"\",\n            });\n            setEmpty(false);\n            showSavedNotification();\n            setSaving(false);\n          } else {\n            console.log(json, \"Error in insertion\");\n          }\n        });\n    } else {\n      setValidated(false);\n    }\n  }\n  //==============================UseEffect======================================\n  useEffect(() => {\n    setData((data) => ({\n      ...data,\n      CourseId: CourseValues.Id,\n      CourseName: CourseValues.Label,\n      SemesterId: SemesterValues.Id,\n      SemesterNo: SemesterValues.Label,\n    }));\n    //API call for get all course names to dropedown\n    fetch(Domain + \"/api/Admin/GetAllCourses/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData1),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        if (json.Data.length != 0) setCourses(json.Data);\n      });\n\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Admin/GetAllSubjects/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n      });\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      setDeleting(true);\n      fetch(Domain + \"/api/Admin/DeleteSubjects/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passDelete),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setDelete([]);\n            showDeletedNotification();\n            setDeleting(false);\n          }\n        });\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Admin/GetSubjectsById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit([]);\n            setData(json.Data);\n            console.log(json.Data);\n          }\n        });\n    }\n  }, [deletee, edit, saved, CourseValues.Id, SemesterValues.Id]);\n\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Subject Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Subject Deleted Successfully\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n      <LoadingOverlay active={saving} spinner text=\"Saving Please Wait..\">\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <Card>\n              <form>\n                <CardHeader color=\"info\">\n                  <h4 className={classes.cardTitleWhite}>Add New Subject</h4>\n                  <p className={classes.cardCategoryWhite}>\n                    Enter the Subject details below and hit Save\n                  </p>\n                </CardHeader>\n\n                <CardBody>\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <SingleSelect\n                        noOptionMessage=\"Create any Course first\"\n                        placeholder=\"Select Course\"\n                        Options={CourseList}\n                        setValue={setCourseValues}\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <SingleSelect\n                        noOptionMessage=\"Select Course First\"\n                        placeholder=\"Select Semester\"\n                        Options={SemesterList}\n                        setValue={setSemesterValues}\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.SubjectName}\n                        labelText=\"Subject Name\"\n                        id=\"SubjectName\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.SubjectCode}\n                        labelText=\"Subject Code\"\n                        id=\"SubjectCode\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                  </GridContainer>\n\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Description}\n                        labelText=\"Enter a description about the Subject..\"\n                        id=\"Description\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          multiline: true,\n                          rows: 5,\n                        }}\n                      />\n                    </GridItem>\n\n                    <GridItem xs={12} sm={5} md={5}>\n                      {validated ? (\n                        <></>\n                      ) : (\n                        <Danger>Please enter all the details to save</Danger>\n                      )}\n                    </GridItem>\n                  </GridContainer>\n                </CardBody>\n                <CardFooter>\n                  <Button onClick={HandleClear} color=\"defualt\">\n                    Clear\n                  </Button>\n                  <Button onClick={HandleSave} color=\"info\">\n                    Save\n                  </Button>\n                </CardFooter>\n              </form>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      </LoadingOverlay>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>List Of All Subjects</h4>\n              <p className={classes.cardCategoryWhite}>\n                All subjects are listed below, you can delete or edit them.\n              </p>\n            </CardHeader>\n            <CardBody>\n              <LoadingOverlay active={deleting} spinner text=\"Please Wait..\">\n                {empty ? (\n                  <p>empty</p>\n                ) : (\n                  <Table\n                    tableHeaderColor=\"info\"\n                    tableHead={[\n                      \"\",\n                      \"ID\",\n                      \"Course name\",\n                      \"Semester Number\",\n                      \"Subject Name\",\n                      \"Course Code\",\n                      \"Description\",\n                      \"Actions\",\n                    ]}\n                    tableData={Subjectdata}\n                    setEdit={setEdit}\n                    setDelete={setDelete}\n                    loading={loading}\n                  />\n                )}\n              </LoadingOverlay>\n            </CardBody>\n          </Card>\n          {pagination ? (\n            <Pagination\n              TotalCount={TotalCount}\n              setPageIndex={setPageIndex}\n              pageIndex={pageIndex}\n              className={\n                classes.textCenter + \" \" + classes.justifyContentCenter\n              }\n              pages={[\n                { text: \"Previous\" },\n                { active: true, text: \"1\" },\n\n                { text: \"Next\" },\n              ]}\n              color=\"info\"\n            />\n          ) : (\n            <></>\n          )}\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Domain } from \"Domain\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport Danger from \"components/Typography/Danger\";\nimport LoadingOverlay from \"react-loading-overlay\";\n// import ImageUpload from \"components/CustomUpload/ImageUpload.js\";\n\nimport SingleSelect from \"components/SingleSelect\";\nimport Pagination from \"components/Pagination/Pagination\";\n// import { data } from \"./data.json\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function Semester() {\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [events, setEvents] = React.useState([]);\n  const [validated, setValidated] = React.useState(true);\n  const [loading, setLoading] = React.useState(true);\n  const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  const [Courses, setCourses] = React.useState([]);\n  const [saving, setSaving] = React.useState(false);\n  const [TotalCount, setTotalCount] = React.useState();\n\n  // const [courseName, setCourseName] = React.useState(\"\");\n  // const [courseId, setCourseId] = React.useState(null);\n\n  //Converting json response to passdata for react select\n  const CourseList = Courses.map((d) => ({\n    value: d.Id,\n    label: d.CourseName,\n  }));\n  const [CourseValues, setCourseValues] = React.useState({\n    Id: null,\n    label: \"\",\n  });\n  const Semesterdata = events.map((d) => ({\n    Id: d.Id,\n    CourseName: d.CourseName,\n    SemesterDuration: d.SemesterDuration,\n    SemesterNo: d.SemesterNo,\n  }));\n  //Saved Notification trigger\n  const showSavedNotification = () => {\n    if (!saved) {\n      setSaved(true);\n      setTimeout(function () {\n        setSaved(false);\n      }, 3000);\n    }\n  };\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n  //Form Data\n  const [data, setData] = React.useState({\n    Id: 0,\n    SemesterNo: \"\",\n    CourseId: null,\n    CourseName: \"\",\n    SemesterDuration: \"\",\n    Status: \"Created\",\n    Image: \"\",\n  });\n\n  // console.log(data.CourseName, data.CourseId);\n\n  //PassData for getAll API\n  let passData = {\n    PageIndex: 0,\n    PageSize: 10,\n  };\n  //PassData for get all semesters and courses for dropdown\n  let passData1 = {\n    PageIndex: 0,\n    PageSize: 0,\n  };\n  //PaddData for Delete a Row\n  let passDelete = {\n    Id: deletee,\n    DeletedBy: 2,\n  };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n  //Function to handle Data input\n  function HandleData(e) {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n  function HandleClear() {\n    setData({\n      Id: 0,\n      SemesterNo: \"\",\n      CourseName: \"\",\n      SemesterDuration: \"\",\n      Status: \"Created\",\n    });\n  }\n  //Function for Validating fields\n  function ValidateFields() {\n    if (data.SemesterNo == \"\") {\n      return false;\n    } else if (data.CourseDuration == \"\") {\n      return false;\n    } else if (data.CourseName == \"\") {\n      return false;\n    } else return true;\n  }\n\n  //Function to save Data\n  function HandleSave() {\n    if (ValidateFields()) {\n      setValidated(true);\n      fetch(Domain + \"/api/Admin/CreateSemester/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          console.log(json);\n          console.log(\"data:\", data);\n          if (json.Success) {\n            setData({\n              Id: 0,\n              SemesterNo: \"\",\n              CourseId: \"\",\n              CourseName: \"\",\n              SemesterDuration: \"\",\n              Status: \"Created\",\n            });\n            setEmpty(false);\n            showSavedNotification();\n            setSaving(false);\n          } else {\n            console.log(\"Error in insertion\");\n          }\n        });\n    } else {\n      setValidated(false);\n    }\n  }\n\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n    fetch(Domain + \"/api/Admin/GetAllSemester/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.TotalCount > 10) {\n          console.log(\"pages\", Math.ceil(json.TotalCount / 10));\n          setTotalCount(Math.ceil(json.TotalCount / 10));\n\n          setPagination(true);\n        }\n      });\n  }, [pageIndex]);\n\n  useEffect(() => {\n    setData((data) => ({\n      ...data,\n      CourseId: CourseValues.Id,\n      CourseName: CourseValues.Label,\n    }));\n    //API call for get all course names to dropedown\n    fetch(Domain + \"/api/Admin/GetAllCourses/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData1),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        if (json.Data.length != 0) setCourses(json.Data);\n      });\n\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Admin/GetAllSemester/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n      });\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      setDeleting(true);\n      fetch(Domain + \"/api/Admin/DeleteSemester/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passDelete),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setDelete([]);\n            showDeletedNotification();\n            setDeleting(false);\n          }\n        });\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Admin/GetSemesterById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit([]);\n            setData(json.Data);\n            console.log(json.Data);\n          }\n        });\n    }\n  }, [deletee, edit, saved, CourseValues.Id]);\n\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Semester Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Semester Deleted Successfully\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n\n      <LoadingOverlay active={saving} spinner text=\"Saving Please Wait..\">\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <Card>\n              <form>\n                <CardHeader color=\"info\">\n                  <h4 className={classes.cardTitleWhite}>Add New Semester</h4>\n                  <p className={classes.cardCategoryWhite}>\n                    Enter the Semester details below and hit Save\n                  </p>\n                </CardHeader>\n\n                <CardBody>\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.SemesterNo}\n                        labelText=\"Semester Number\"\n                        id=\"SemesterNo\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <SingleSelect\n                        noOptionsMessage=\"Create any course first\"\n                        placeholder=\"Select Course\"\n                        Options={CourseList}\n                        setValue={setCourseValues}\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.SemesterDuration}\n                        labelText=\"Semester Duration\"\n                        id=\"SemesterDuration\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n\n                    <GridItem xs={12} sm={5} md={5}>\n                      {validated ? (\n                        <></>\n                      ) : (\n                        <Danger>Please enter all the details to save</Danger>\n                      )}\n                    </GridItem>\n                  </GridContainer>\n                </CardBody>\n                <CardFooter>\n                  <Button onClick={HandleClear} color=\"defualt\">\n                    Clear\n                  </Button>\n                  <Button onClick={HandleSave} color=\"info\">\n                    Save\n                  </Button>\n                </CardFooter>\n              </form>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      </LoadingOverlay>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>List Of All semester</h4>\n              <p className={classes.cardCategoryWhite}>\n                All Semester are listed below, you can delete or edit them.\n              </p>\n            </CardHeader>\n            <CardBody>\n              <LoadingOverlay active={deleting} spinner text=\"Please Wait..\">\n                {empty ? (\n                  <p>empty</p>\n                ) : (\n                  <Table\n                    tableHeaderColor=\"info\"\n                    tableHead={[\n                      \"\",\n                      \"ID\",\n                      \"CourseName\",\n                      \"SemesterDuration\",\n                      \"Semester Number\",\n                      \"Actions\",\n                    ]}\n                    tableData={Semesterdata}\n                    setEdit={setEdit}\n                    setDelete={setDelete}\n                    loading={loading}\n                  />\n                )}\n              </LoadingOverlay>\n            </CardBody>\n          </Card>\n          {pagination ? (\n            <Pagination\n              TotalCount={TotalCount}\n              setPageIndex={setPageIndex}\n              pageIndex={pageIndex}\n              className={\n                classes.textCenter + \" \" + classes.justifyContentCenter\n              }\n              pages={[\n                { text: \"Previous\" },\n                { active: true, text: \"1\" },\n\n                { text: \"Next\" },\n              ]}\n              color=\"info\"\n            />\n          ) : (\n            <></>\n          )}\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Domain } from \"Domain\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\n// import axios from \"axios\";\nimport Danger from \"components/Typography/Danger\";\nimport LoadingOverlay from \"react-loading-overlay\";\n// import ImageUpload from \"components/CustomUpload/ImageUpload.js\";\n\n// import AttachFile from \"@material-ui/icons/AttachFile\";\n// import CustomFileInput from \"components/CustomFileInput/CustomFileInput.js\";\nimport Pagination from \"components/Pagination/Pagination\";\n// import { data } from \"./data.json\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function InternalMarks() {\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [events, setEvents] = React.useState([]);\n  // const [files, setFiles] = React.useState(null);\n  const [validated, setValidated] = React.useState(true);\n  // const [uploaded, setUploaded] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  const [saving, setSaving] = React.useState(false);\n\n  //Saved Notification trigger\n  const showSavedNotification = () => {\n    if (!saved) {\n      setSaved(true);\n      setTimeout(function () {\n        setSaved(false);\n      }, 3000);\n    }\n  };\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n  //Form Data\n  const [data, setData] = React.useState({\n    Id: 0,\n    CourseId: null,\n    Date: \"\",\n    StudentId: \"\",\n    SemesterId: null,\n    CourseCode: \"\",\n    SemesterNo: null,\n    Note: \"\",\n    ClassNo: null,\n    StudentName: \"\",\n    MarkList: \"\",\n    Status: \"Created\",\n    Files: \"\",\n    Description: \"\",\n  });\n\n  //PassData for getAll API\n  let passData = {\n    PageIndex: 0,\n    PageSize: 10,\n  };\n\n  //PaddData for Delete a Row\n  let passDelete = {\n    Id: deletee,\n    DeletedBy: 2,\n  };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n  //Function to handle Data input\n  function HandleData(e) {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n  function HandleClear() {\n    setValidated(true);\n    setData({\n      Id: 0,\n      CourseId: \"\",\n      Date: \"\",\n      StudentId: \"\",\n      SemesterId: \"\",\n      CourseCode: \"\",\n      SemesterNo: \"\",\n      Note: \"\",\n      ClassNo: \"\",\n      StudentName: \"\",\n      MarkList: \"\",\n      Status: \"Created\",\n      Files: \"\",\n      Description: \"\",\n    });\n  }\n  //Function for Validating fields\n  function ValidateFields() {\n    if (data.CourseId == \"\") {\n      return false;\n    } else if (data.Date == \"\") {\n      return false;\n    } else if (data.Description == \"\") {\n      return false;\n    } else if (data.StudentId == \"\") {\n      return false;\n    } else if (data.SemesterId == \"\") {\n      return false;\n    } else if (data.CourseCode == \"\") {\n      return false;\n    } else if (data.SemesterNo == \"\") {\n      return false;\n    } else if (data.Note == \"\") {\n      return false;\n    } else if (data.ClassNo == \"\") {\n      return false;\n    } else if (data.StudentName == \"\") {\n      return false;\n    } else if (data.MarkList == \"\") {\n      return false;\n    } else return true;\n  }\n  // //function to upload\n  // function UploadImage() {\n  //   if (files != null) {\n  //     setValidated(true);\n  //     setSaving(true);\n  //     let form_data = new FormData();\n  //     form_data.append(\"File\", files[0]);\n  //     let url = Domain + \"/api/Uploads/File/\";\n  //     axios\n  //       .post(url, form_data, {\n  //         headers: {\n  //           \"content-type\": \"multipart/form-data\",\n  //         },\n  //       })\n  //       .then((res) => {\n  //         if (res.data.Success) {\n  //           data.Files = res.data.Data[0];\n  //           setUploaded(true);\n  //           HandleSave();\n  //         } else {\n  //           setUploaded(false);\n  //         }\n  //       })\n  //       .catch((err) => {\n  //         console.log(err);\n  //         setUploaded(false);\n  //       });\n  //   } else {\n  //     setValidated(false);\n  //   }\n  // }\n\n  //Function to save Data\n  function HandleSave() {\n    if (ValidateFields()) {\n      fetch(Domain + \"/api/Student/CreateInternal/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setData({\n              Id: 0,\n              CourseId: \"\",\n              Date: \"\",\n              StudentId: \"\",\n              SemesterId: \"\",\n              CourseCode: \"\",\n              SemesterNo: \"\",\n              Note: \"\",\n              ClassNo: \"\",\n              StudentName: \"\",\n              MarkList: \"\",\n              Status: \"Created\",\n              Files: \"\",\n              Description: \"\",\n            });\n            setEmpty(false);\n            showSavedNotification();\n            setSaving(false);\n          } else {\n            console.log(\"Error in insertion\");\n          }\n        });\n    } else {\n      setValidated(false);\n    }\n  }\n\n  const [TotalCount, setTotalCount] = React.useState();\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n    fetch(Domain + \"/api/Student/GetAllInternal/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.TotalCount > 10) {\n          console.log(\"pages\", Math.ceil(json.TotalCount / 10));\n          setTotalCount(Math.ceil(json.TotalCount / 10));\n\n          setPagination(true);\n        }\n      });\n  }, [pageIndex]);\n\n  useEffect(() => {\n    console.log(\"componentDidMount\");\n    console.log(\"Detele\" + deletee + \" edit\" + edit);\n\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Student/GetAllInternal/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n      });\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      setDeleting(true);\n      fetch(Domain + \"/api/Student/DeleteInternal/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passDelete),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setDelete([]);\n            showDeletedNotification();\n            setDeleting(false);\n          }\n        });\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Student/GetInternalById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit([]);\n            setData(json.Data);\n            console.log(json.Data);\n          }\n        });\n    }\n  }, [deletee, edit, saved]);\n\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Internal Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Internal Deleted Successfully\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n      <LoadingOverlay active={saving} spinner text=\"Saving Please Wait..\">\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <Card>\n              <form>\n                <CardHeader color=\"info\">\n                  <h4 className={classes.cardTitleWhite}>\n                    Add New InternalMarks\n                  </h4>\n                  <p className={classes.cardCategoryWhite}>\n                    Enter the InternalMarks details below and hit Save\n                  </p>\n                </CardHeader>\n\n                <CardBody>\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Date}\n                        labelText=\"Select Exam Date\"\n                        id=\"Date\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.CourseId}\n                        labelText=\"Select Course\"\n                        id=\"CourseId\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.StudentId}\n                        labelText=\"Student ID\"\n                        id=\"StudentId\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.SemesterId}\n                        labelText=\"Select Semester\"\n                        id=\"SemesterId\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.CourseCode}\n                        labelText=\"CourseCode\"\n                        id=\"CourseCode\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.SemesterNo}\n                        labelText=\"Semester Number\"\n                        id=\"SemesterNo\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Note}\n                        labelText=\"Notes\"\n                        id=\"Note\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.ClassNo}\n                        labelText=\"Class Number\"\n                        id=\"ClassNo\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.StudentName}\n                        labelText=\"StudentName\"\n                        id=\"StudentName\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.MarkList}\n                        labelText=\"MarkList\"\n                        id=\"MarkList\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n\n                    <GridItem xs={12} sm={12} md={8}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Description}\n                        labelText=\"Enter Marks seperated by comma\"\n                        id=\"Description\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          multiline: true,\n                          rows: 5,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={5} md={5}>\n                      {validated ? (\n                        <></>\n                      ) : (\n                        <Danger>Please enter all the details to save</Danger>\n                      )}\n                    </GridItem>\n                  </GridContainer>\n                </CardBody>\n                <CardFooter>\n                  <Button onClick={HandleClear} color=\"defualt\">\n                    Clear\n                  </Button>\n                  <Button onClick={HandleSave} color=\"info\">\n                    Save\n                  </Button>\n                </CardFooter>\n              </form>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      </LoadingOverlay>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>\n                List Of All InternalMarks\n              </h4>\n              <p className={classes.cardCategoryWhite}>\n                All InternalMarks are listed below, you can delete or edit them.\n              </p>\n            </CardHeader>\n            <CardBody>\n              <LoadingOverlay active={deleting} spinner text=\"Please Wait..\">\n                {empty ? (\n                  <p>empty</p>\n                ) : (\n                  <Table\n                    tableHeaderColor=\"info\"\n                    tableHead={[\n                      \"\",\n                      \"ID\",\n                      \"Date\",\n                      \"CourseName\",\n                      \"SemesterNo\",\n                      \"ClassNo\",\n                      \"Note\",\n                      \"Status\",\n                      \"Files\",\n                      \"StudentName\",\n                      \"Description\",\n                      \"Marklist\",\n                      \"Created By\",\n                      \"Created Date\",\n                      \"Modified By\",\n                      \"Modified Date\",\n                      \"Deteled By\",\n                      \"Deleted Date\",\n                      \"CourseId\",\n                      \"SemesterId\",\n                      \"StudentId\",\n                      \"Actions\",\n                    ]}\n                    tableData={events}\n                    setEdit={setEdit}\n                    setDelete={setDelete}\n                    loading={loading}\n                  />\n                )}\n              </LoadingOverlay>\n            </CardBody>\n          </Card>\n          {pagination ? (\n            <Pagination\n              TotalCount={TotalCount}\n              setPageIndex={setPageIndex}\n              pageIndex={pageIndex}\n              className={\n                classes.textCenter + \" \" + classes.justifyContentCenter\n              }\n              pages={[\n                { text: \"Previous\" },\n                { active: true, text: \"1\" },\n\n                { text: \"Next\" },\n              ]}\n              color=\"info\"\n            />\n          ) : (\n            <></>\n          )}\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Domain } from \"Domain\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport axios from \"axios\";\nimport Danger from \"components/Typography/Danger\";\nimport LoadingOverlay from \"react-loading-overlay\";\n// import ImageUpload from \"components/CustomUpload/ImageUpload.js\";\n\nimport AttachFile from \"@material-ui/icons/AttachFile\";\nimport CustomFileInput from \"components/CustomFileInput/CustomFileInput.js\";\nimport Pagination from \"components/Pagination/Pagination\";\n// import { data } from \"./data.json\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function InternalsNotification() {\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [events, setEvents] = React.useState([]);\n  const [files, setFiles] = React.useState(null);\n  const [validated, setValidated] = React.useState(true);\n  const [uploaded, setUploaded] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  const [saving, setSaving] = React.useState(false);\n\n  const InternalNotedata = events.map((d) => ({\n    Id: d.Id,\n    CourseCode: d.CourseId,\n    CourseId: d.CourseId,\n    Date: d.Date,\n    Description: d.Description,\n    Files: d.Files,\n    Note: d.Note,\n    SemesterId: d.SemesterId,\n    SemesterNo: d.SemesterNo,\n  }));\n\n  //Saved Notification trigger\n  const showSavedNotification = () => {\n    if (!saved) {\n      setSaved(true);\n      setTimeout(function () {\n        setSaved(false);\n      }, 3000);\n    }\n  };\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n  //Form Data\n  const [data, setData] = React.useState({\n    Id: 0,\n    Date: \"\",\n    CourseId: null,\n    SemesterId: null,\n    CourseCode: \"\",\n    SemesterNo: null,\n    Note: \"\",\n    Status: \"Active\",\n    Files: \"\",\n    Description: \"\",\n  });\n\n  //PassData for getAll API\n  let passData = {\n    PageIndex: 0,\n    PageSize: 10,\n  };\n\n  //PaddData for Delete a Row\n  let passDelete = {\n    Id: deletee,\n    DeletedBy: 2,\n  };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n  //Function to handle Data input\n  function HandleData(e) {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n  function HandleClear() {\n    setData({\n      Id: 0,\n      Date: \"\",\n      CourseId: \"\",\n      SemesterId: \"\",\n      CourseCode: \"\",\n      SemesterNo: \"\",\n      Note: \"\",\n      Status: \"Active\",\n      Files: \"\",\n      Description: \"\",\n    });\n  }\n  //Function for Validating fields\n  function ValidateFields() {\n    if (data.CourseId == null) {\n      return false;\n    } else if (data.Date == \"\") {\n      return false;\n    } else if (data.SemesterId == null) {\n      return false;\n    } else if (data.CourseCode == \"\") {\n      return false;\n    } else if (data.SemesterNo == null) {\n      return false;\n    } else if (data.Note == \"\") {\n      return false;\n    } else if (data.Files == \"\") {\n      return false;\n    } else if (data.Description == \"\") {\n      return false;\n    } else return true;\n  }\n  //function to upload\n  function UploadImage() {\n    if (files != null) {\n      setValidated(true);\n      setSaving(true);\n      let form_data = new FormData();\n      form_data.append(\"File\", files[0]);\n      let url = Domain + \"/api/Uploads/File/\";\n      axios\n        .post(url, form_data, {\n          headers: {\n            \"content-type\": \"multipart/form-data\",\n          },\n        })\n        .then((res) => {\n          if (res.data.Success) {\n            data.Image = res.data.Data[0];\n            setUploaded(true);\n            HandleSave();\n          } else {\n            setUploaded(false);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setUploaded(false);\n        });\n    } else if (data.Image != \"\") HandleSave();\n    else setValidated(false);\n  }\n\n  //Function to save Data\n  function HandleSave() {\n    if (ValidateFields()) {\n      setValidated(true);\n      fetch(Domain + \"/api/Student/CreateInternalNotification/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setData({\n              Id: 0,\n              Date: \"\",\n              CourseId: \"\",\n              SemesterId: \"\",\n              CourseCode: \"\",\n              SemesterNo: \"\",\n              Note: \"\",\n              Status: \"Active\",\n              Files: \"\",\n              Description: \"\",\n            });\n            setEmpty(false);\n            showSavedNotification();\n            setSaving(false);\n          } else {\n            console.log(json);\n          }\n        });\n    } else {\n      setValidated(false);\n    }\n    setUploaded(false);\n  }\n\n  const [TotalCount, setTotalCount] = React.useState();\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n    fetch(Domain + \"/api/Student/GetAllInternalNotification/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.TotalCount > 10) {\n          console.log(\"pages\", Math.ceil(json.TotalCount / 10));\n          setTotalCount(Math.ceil(json.TotalCount / 10));\n\n          setPagination(true);\n        }\n      });\n  }, [pageIndex]);\n\n  useEffect(() => {\n    console.log(\"componentDidMount\");\n    console.log(\"Detele\" + deletee + \" edit\" + edit);\n\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Student/GetAllInternalNotification/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n      });\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      setDeleting(true);\n      fetch(Domain + \"/api/Student/DeleteInternalNotification/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passDelete),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setDelete([]);\n            showDeletedNotification();\n            setDeleting(false);\n          }\n        });\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Student/GetInternalNotificationById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit([]);\n            setData(json.Data);\n            console.log(json.Data);\n          }\n        });\n    }\n  }, [deletee, edit, saved]);\n\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"InternalNotification Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"InternalNotification Deleted Successfully\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n      <LoadingOverlay active={saving} spinner text=\"Saving Please Wait..\">\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <Card>\n              <form>\n                <CardHeader color=\"info\">\n                  <h4 className={classes.cardTitleWhite}>\n                    Add New InternalNotification\n                  </h4>\n                  <p className={classes.cardCategoryWhite}>\n                    Enter the InternalNotification details below and hit Save\n                  </p>\n                </CardHeader>\n\n                <CardBody>\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.CourseId}\n                        labelText=\"Course Id\"\n                        id=\"CourseId\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.SemesterId}\n                        labelText=\"Semester Id\"\n                        id=\"SemesterId\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.CourseCode}\n                        labelText=\"Course Code\"\n                        id=\"CourseCode\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.SemesterNo}\n                        labelText=\"Semester No\"\n                        id=\"SemesterNo\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Note}\n                        labelText=\"Note\"\n                        id=\"Note\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Date}\n                        labelText=\"Date\"\n                        id=\"Date\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                  </GridContainer>\n\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Description}\n                        labelText=\"Enter a description about the event..\"\n                        id=\"Description\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          multiline: true,\n                          rows: 5,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={5} md={6}>\n                      {\" \"}\n                      <CustomFileInput\n                        setFiles={setFiles}\n                        saved={uploaded}\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          placeholder: \"Click here to upload an image\",\n                        }}\n                        endButton={{\n                          buttonProps: {\n                            round: true,\n                            color: \"info\",\n                            justIcon: true,\n                            filebutton: true,\n                          },\n                          icon: <AttachFile />,\n                        }}\n                      />\n                      {validated ? (\n                        <></>\n                      ) : (\n                        <Danger>Please enter all the details to save</Danger>\n                      )}\n                    </GridItem>\n                  </GridContainer>\n                </CardBody>\n                <CardFooter>\n                  <Button onClick={HandleClear} color=\"defualt\">\n                    Clear\n                  </Button>\n                  <Button onClick={UploadImage} color=\"info\">\n                    Save\n                  </Button>\n                </CardFooter>\n              </form>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      </LoadingOverlay>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>\n                List Of All InternalNotification\n              </h4>\n              <p className={classes.cardCategoryWhite}>\n                All InternalNotification are listed below, you can delete or\n                edit them.\n              </p>\n            </CardHeader>\n            <CardBody>\n              <LoadingOverlay active={deleting} spinner text=\"Please Wait..\">\n                {empty ? (\n                  <p>empty</p>\n                ) : (\n                  <Table\n                    tableHeaderColor=\"info\"\n                    tableHead={[\n                      \"\",\n                      \"ID\",\n                      \"Date\",\n                      \"Coursecode\",\n                      \"SemesterNo\",\n                      \"Note\",\n                      // \"Status\",\n                      \"Files\",\n                      \"Description\",\n                      // \"Created By\",\n                      // \"Created Date\",\n                      // \"Modified By\",\n                      // \"Modified Date\",\n                      // \"Deteled By\",\n                      // \"Deleted Date\",\n                      \"CourseId\",\n                      \"SemesterId\",\n                      \"Actions\",\n                    ]}\n                    tableData={InternalNotedata}\n                    setEdit={setEdit}\n                    setDelete={setDelete}\n                    loading={loading}\n                  />\n                )}\n              </LoadingOverlay>\n            </CardBody>\n          </Card>\n          {pagination ? (\n            <Pagination\n              TotalCount={TotalCount}\n              setPageIndex={setPageIndex}\n              pageIndex={pageIndex}\n              className={\n                classes.textCenter + \" \" + classes.justifyContentCenter\n              }\n              pages={[\n                { text: \"Previous\" },\n                { active: true, text: \"1\" },\n\n                { text: \"Next\" },\n              ]}\n              color=\"info\"\n            />\n          ) : (\n            <></>\n          )}\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Domain } from \"Domain\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport axios from \"axios\";\nimport Danger from \"components/Typography/Danger\";\nimport LoadingOverlay from \"react-loading-overlay\";\n// import ImageUpload from \"components/CustomUpload/ImageUpload.js\";\n\nimport AttachFile from \"@material-ui/icons/AttachFile\";\nimport CustomFileInput from \"components/CustomFileInput/CustomFileInput.js\";\nimport Pagination from \"components/Pagination/Pagination\";\n// import { data } from \"./data.json\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function Placements() {\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [events, setEvents] = React.useState([]);\n  const [files, setFiles] = React.useState(null);\n  const [validated, setValidated] = React.useState(true);\n  const [uploaded, setUploaded] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  const [saving, setSaving] = React.useState(false);\n\n  const Placementdata = events.map((d) => ({\n    Id: d.Id,\n    Name: d.Name,\n    Company: d.Company,\n    Image: d.Image,\n    Description: d.Description,\n  }));\n\n  //Saved Notification trigger\n  const showSavedNotification = () => {\n    if (!saved) {\n      setSaved(true);\n      setTimeout(function () {\n        setSaved(false);\n      }, 3000);\n    }\n  };\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n  //Form Data\n  const [data, setData] = React.useState({\n    Id: 0,\n    Name: \"\",\n    Company: \"\",\n    Status: \"Created\",\n    Image: \"\",\n    Description: \"\",\n  });\n\n  //PassData for getAll API\n  let passData = {\n    PageIndex: 0,\n    PageSize: 10,\n  };\n\n  //PaddData for Delete a Row\n  let passDelete = {\n    Id: deletee,\n    DeletedBy: 2,\n  };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n  //Function to handle Data input\n  function HandleData(e) {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n  function HandleClear() {\n    setData({\n      Id: 0,\n      Name: \"\",\n      Company: \"\",\n      Status: \"Created\",\n      Image: \"\",\n      Description: \"\",\n    });\n  }\n  //Function for Validating fields\n  function ValidateFields() {\n    if (data.Name == \"\") {\n      return false;\n    } else if (data.Company == \"\") {\n      return false;\n    } else if (data.Status == \"\") {\n      return false;\n    } else if (data.Image == \"\") {\n      return false;\n    } else if (data.Description == \"\") {\n      return false;\n    } else return true;\n  }\n  //function to upload\n  function UploadImage() {\n    if (files != null) {\n      setValidated(true);\n      setSaving(true);\n      let form_data = new FormData();\n      form_data.append(\"File\", files[0]);\n      let url = Domain + \"/api/Uploads/File/\";\n      axios\n        .post(url, form_data, {\n          headers: {\n            \"content-type\": \"multipart/form-data\",\n          },\n        })\n        .then((res) => {\n          if (res.data.Success) {\n            data.Image = res.data.Data[0];\n            setUploaded(true);\n            HandleSave();\n          } else {\n            setUploaded(false);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setUploaded(false);\n        });\n    } else if (data.Image != \"\") HandleSave();\n    else setValidated(false);\n  }\n\n  //Function to save Data\n  function HandleSave() {\n    if (ValidateFields()) {\n      setValidated(true);\n      fetch(Domain + \"/api/Admin/CreatePlacements/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setData({\n              Id: 0,\n              Name: \"\",\n              Company: \"\",\n              Status: \"Created\",\n              Image: \"\",\n              Description: \"\",\n            });\n            setEmpty(false);\n            showSavedNotification();\n            setSaving(false);\n          } else {\n            console.log(\"Error in insertion\");\n          }\n        });\n    } else {\n      setValidated(false);\n    }\n    setUploaded(false);\n  }\n\n  const [TotalCount, setTotalCount] = React.useState();\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n    fetch(Domain + \"/api/Admin/GetAllPlacements/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.TotalCount > 10) {\n          console.log(\"pages\", Math.ceil(json.TotalCount / 10));\n          setTotalCount(Math.ceil(json.TotalCount / 10));\n\n          setPagination(true);\n        }\n      });\n  }, [pageIndex]);\n\n  useEffect(() => {\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Admin/GetAllPlacements/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n      });\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      setDeleting(true);\n      fetch(Domain + \"/api/Admin/DeletePlacements/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passDelete),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setDelete([]);\n            showDeletedNotification();\n            setDeleting(false);\n          }\n        });\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Admin/GetPlacementsById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit([]);\n            setData(json.Data);\n            console.log(json.Data);\n          }\n        });\n    }\n  }, [deletee, edit, saved]);\n\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Placements Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Placement Deleted Successfully\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n      <LoadingOverlay active={saving} spinner text=\"Saving Please Wait..\">\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <Card>\n              <form>\n                <CardHeader color=\"info\">\n                  <h4 className={classes.cardTitleWhite}>Add Placements</h4>\n                  <p className={classes.cardCategoryWhite}>\n                    Enter the Placement details below and hit Save\n                  </p>\n                </CardHeader>\n\n                <CardBody>\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Name}\n                        labelText=\"Student Name\"\n                        id=\"Name\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Company}\n                        labelText=\"Company\"\n                        id=\"Company\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                  </GridContainer>\n\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Description}\n                        labelText=\"Enter a description about the company..\"\n                        id=\"Description\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          multiline: true,\n                          rows: 5,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={5} md={5}>\n                      {\" \"}\n                      <CustomFileInput\n                        setFiles={setFiles}\n                        saved={uploaded}\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          placeholder: \"Click here to upload an image\",\n                        }}\n                        endButton={{\n                          buttonProps: {\n                            round: true,\n                            color: \"info\",\n                            justIcon: true,\n                            filebutton: true,\n                          },\n                          icon: <AttachFile />,\n                        }}\n                      />\n                      {validated ? (\n                        <></>\n                      ) : (\n                        <Danger>Please enter all the details to save</Danger>\n                      )}\n                    </GridItem>\n                  </GridContainer>\n                </CardBody>\n                <CardFooter>\n                  <Button onClick={HandleClear} color=\"defualt\">\n                    Clear\n                  </Button>\n                  <Button onClick={UploadImage} color=\"info\">\n                    Save\n                  </Button>\n                </CardFooter>\n              </form>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      </LoadingOverlay>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>List Of All Placements</h4>\n              <p className={classes.cardCategoryWhite}>\n                All Placements are listed below, you can delete or edit them.\n              </p>\n            </CardHeader>\n            <CardBody>\n              <LoadingOverlay active={deleting} spinner text=\"Please Wait..\">\n                {empty ? (\n                  <p>empty</p>\n                ) : (\n                  <Table\n                    tableHeaderColor=\"info\"\n                    tableHead={[\n                      \"\",\n                      \"ID\",\n                      \"Name\",\n                      \"Company\",\n                      // \"Status\",\n                      \"Image\",\n                      \"Description\",\n                      // \"Created By\",\n                      // \"Created Date\",\n                      // \"Modified By\",\n                      // \"Modified Date\",\n                      // \"Deteled By\",\n                      // \"Deleted Date\",\n                      \"Actions\",\n                    ]}\n                    tableData={Placementdata}\n                    setEdit={setEdit}\n                    setDelete={setDelete}\n                    loading={loading}\n                  />\n                )}\n              </LoadingOverlay>\n            </CardBody>\n          </Card>\n          {pagination ? (\n            <Pagination\n              TotalCount={TotalCount}\n              setPageIndex={setPageIndex}\n              pageIndex={pageIndex}\n              className={\n                classes.textCenter + \" \" + classes.justifyContentCenter\n              }\n              pages={[\n                { text: \"Previous\" },\n                { active: true, text: \"1\" },\n\n                { text: \"Next\" },\n              ]}\n              color=\"info\"\n            />\n          ) : (\n            <></>\n          )}\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Domain } from \"Domain\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport Pagination from \"components/Pagination/Pagination\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function Enquiry() {\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [events, setEvents] = React.useState([]);\n  // const [validated, setValidated] = React.useState(true);\n  const [loading, setLoading] = React.useState(true);\n  const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  // const [saving, setSaving] = React.useState(false);\n  const [viewEnquiry, setViewEnquiry] = React.useState(false);\n  function HandleView() {\n    if (viewEnquiry) setViewEnquiry(false);\n    else setViewEnquiry(true);\n  }\n  const Enquirydata = events.map((d) => ({\n    Id: d.Id,\n    Name: d.Name,\n    Mobile: d.Mobile,\n    // Image: d.Image,\n    Description: d.Description,\n  }));\n  //Saved Notification trigger\n  // const showSavedNotification = () => {\n  //   if (!saved) {\n  //     setSaved(true);\n  //     setTimeout(function () {\n  //       setSaved(false);\n  //     }, 3000);\n  //   }\n  // };\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n  //Form Data\n  const [data, setData] = React.useState({\n    Id: 0,\n    Name: \"\",\n    Mobile: \"\",\n    Description: \"\",\n    Status: \"Created\",\n  });\n\n  //PassData for getAll API\n  let passData = {\n    PageIndex: 0,\n    PageSize: 10,\n  };\n\n  //PaddData for Delete a Row\n  let passDelete = {\n    Id: deletee,\n    DeletedBy: 2,\n  };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n  //Function to handle Data input\n  function HandleData(e) {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n  // function HandleClear() {\n  //   setData({\n  //     Id: 0,\n  //     Name: \"\",\n  //     Mobile: \"\",\n  //     Description: \"\",\n  //     Status: \"Created\",\n  //   });\n  // }\n  //Function for Validating fields\n  // function ValidateFields() {\n  //   if (data.Name == \"\") {\n  //     return false;\n  //   } else if (data.Mobile == \"\") {\n  //     return false;\n  //   } else if (data.Description == \"\") {\n  //     return false;\n  //   } else return true;\n  // }\n\n  // //Function to save Data\n  // function HandleSave() {\n  //   if (ValidateFields()) {\n  //     setValidated(true);\n  //     fetch(\n  //       Domain + \"/api/Admin/CreateEnquiry/\",\n  //       {\n  //         method: \"POST\",\n  //         headers: {\n  //           Accept: \"application/json\",\n  //           \"Content-Type\": \"application/json\",\n  //         },\n  //         body: JSON.stringify(data),\n  //       }\n  //     )\n  //       .then((response) => response.json())\n\n  //       .then((json) => {\n  //         if (json.Success) {\n  //           setData({\n  //             Id: 0,\n  //             Name: \"\",\n  //             Mobile: \"\",\n  //             Description: \"\",\n  //             Status: \"Created\",\n  //           });\n  //           setEmpty(false);\n  //           showSavedNotification();\n  //           setSaving(false);\n  //         } else {\n  //           console.log(\"Error in insertion\");\n  //         }\n  //       });\n  //   } else {\n  //     setValidated(false);\n  //   }\n  // }\n  const [TotalCount, setTotalCount] = React.useState();\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n    fetch(Domain + \"/api/Admin/GetAllEnquiry/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        console.log(json);\n        setEvents(json.Data);\n        if (json.TotalCount > 10) {\n          console.log(\"pages\", Math.ceil(json.TotalCount / 10));\n          setTotalCount(Math.ceil(json.TotalCount / 10));\n\n          setPagination(true);\n        }\n      });\n  }, [pageIndex]);\n\n  useEffect(() => {\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Admin/GetAllEnquiry/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        console.log(json);\n        setEvents(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n      });\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      setDeleting(true);\n      fetch(Domain + \"/api/Admin/DeleteEnquiry/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passDelete),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setDelete([]);\n            showDeletedNotification();\n            setDeleting(false);\n          }\n        });\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Admin/GetEnquiryById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit([]);\n            setData(json.Data);\n            HandleView();\n          }\n        });\n    }\n  }, [deletee, edit, saved]);\n\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Enquiry Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Enquiry Deleted Successfully\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n\n      {viewEnquiry ? (\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <Card>\n              <form>\n                <CardHeader color=\"info\">\n                  <h4 className={classes.cardTitleWhite}>View Enquiry</h4>\n                  <p className={classes.cardCategoryWhite}>\n                    View the Message below\n                  </p>\n                </CardHeader>\n\n                <CardBody>\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        disabled\n                        onChange={(e) => HandleData(e)}\n                        value={data.Name}\n                        labelText=\"Student Name\"\n                        id=\"Name\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        disabled\n                        onChange={(e) => HandleData(e)}\n                        value={data.Mobile}\n                        labelText=\"Mobile\"\n                        id=\"Mobile\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n\n                    <GridItem xs={12} sm={12} md={12}>\n                      <CustomInput\n                        disabled\n                        onChange={(e) => HandleData(e)}\n                        value={data.Description}\n                        labelText=\"Message\"\n                        id=\"Description\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          multiline: true,\n                          rows: 5,\n                        }}\n                      />\n                    </GridItem>\n                  </GridContainer>\n                </CardBody>\n                <CardFooter>\n                  <Button onClick={HandleView} color=\"danger\">\n                    Close\n                  </Button>\n                </CardFooter>\n              </form>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      ) : (\n        <></>\n      )}\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>List Of All Enquirys</h4>\n              <p className={classes.cardCategoryWhite}>\n                All Enquirys are listed below, you can delete or edit them.\n              </p>\n            </CardHeader>\n            <CardBody>\n              <LoadingOverlay active={deleting} spinner text=\"Please Wait..\">\n                {empty ? (\n                  <p>empty</p>\n                ) : (\n                  <Table\n                    tableHeaderColor=\"info\"\n                    tableHead={[\n                      \"\",\n                      \"ID\",\n                      \"Name\",\n                      \"Mobile\",\n                      // \"Status\",\n                      // \"Image\",\n                      \"Description\",\n                      // \"Created By\",\n                      // \"Created Date\",\n                      // \"Modified By\",\n                      // \"Modified Date\",\n                      // \"Deteled By\",\n                      // \"Deleted Date\",\n                      \"Actions\",\n                    ]}\n                    tableData={Enquirydata}\n                    setEdit={setEdit}\n                    setDelete={setDelete}\n                    loading={loading}\n                  />\n                )}\n              </LoadingOverlay>\n            </CardBody>\n          </Card>\n          {pagination ? (\n            <Pagination\n              TotalCount={TotalCount}\n              setPageIndex={setPageIndex}\n              pageIndex={pageIndex}\n              className={\n                classes.textCenter + \" \" + classes.justifyContentCenter\n              }\n              pages={[\n                { text: \"Previous\" },\n                { active: true, text: \"1\" },\n\n                { text: \"Next\" },\n              ]}\n              color=\"info\"\n            />\n          ) : (\n            <></>\n          )}\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Domain } from \"Domain\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport axios from \"axios\";\nimport Danger from \"components/Typography/Danger\";\nimport LoadingOverlay from \"react-loading-overlay\";\n// import ImageUpload from \"components/CustomUpload/ImageUpload.js\";\n\nimport AttachFile from \"@material-ui/icons/AttachFile\";\nimport CustomFileInput from \"components/CustomFileInput/CustomFileInput.js\";\nimport Pagination from \"components/Pagination/Pagination\";\n// import { data } from \"./data.json\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function Departments() {\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [events, setEvents] = React.useState([]);\n  const [files, setFiles] = React.useState(null);\n  const [validated, setValidated] = React.useState(true);\n  const [uploaded, setUploaded] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  const [saving, setSaving] = React.useState(false);\n\n  const Departdata = events.map((d) => ({\n    Id: d.Id,\n    DepartmentName: d.DepartmentName,\n    HeadName: d.HeadName,\n    Image: d.Image,\n    Description: d.Description,\n  }));\n  //Saved Notification trigger\n  const showSavedNotification = () => {\n    if (!saved) {\n      setSaved(true);\n      setTimeout(function () {\n        setSaved(false);\n      }, 3000);\n    }\n  };\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n  //Form Data\n  const [data, setData] = React.useState({\n    Id: 0,\n    DepartmentName: \"\",\n    HeadName: \"\",\n    Status: \"Created\",\n    Image: \"\",\n    Description: \"\",\n  });\n\n  //PassData for getAll API\n  let passData = {\n    PageIndex: 0,\n    PageSize: 10,\n  };\n\n  //PaddData for Delete a Row\n  let passDelete = {\n    Id: deletee,\n    DeletedBy: 2,\n  };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n  //Function to handle Data input\n  function HandleData(e) {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n  function HandleClear() {\n    setData({\n      Id: 0,\n      DepartmentName: \"\",\n      HeadName: \"\",\n      Status: \"Created\",\n      Image: \"\",\n      Description: \"\",\n    });\n  }\n  //Function for Validating fields\n  function ValidateFields() {\n    if (data.DepartmentName == \"\") {\n      return false;\n    } else if (data.HeadName == \"\") {\n      return false;\n    } else if (data.Description == \"\") {\n      return false;\n    } else return true;\n  }\n  //function to upload\n  function UploadImage() {\n    if (files != null) {\n      setValidated(true);\n      setSaving(true);\n      let form_data = new FormData();\n      form_data.append(\"File\", files[0]);\n      let url = Domain + \"/api/Uploads/File/\";\n      axios\n        .post(url, form_data, {\n          headers: {\n            \"content-type\": \"multipart/form-data\",\n          },\n        })\n        .then((res) => {\n          if (res.data.Success) {\n            data.Image = res.data.Data[0];\n            setUploaded(true);\n            HandleSave();\n          } else {\n            setUploaded(false);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setUploaded(false);\n        });\n    } else {\n      HandleSave();\n    }\n  }\n\n  //Function to save Data\n  function HandleSave() {\n    if (ValidateFields()) {\n      setSaving(true);\n      setValidated(true);\n      fetch(Domain + \"/api/Admin/CreateDepartments/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setData({\n              Id: 0,\n              DepartmentName: \"\",\n              HeadName: \"\",\n              Status: \"Created\",\n              Image: \"\",\n              Description: \"\",\n            });\n            setEmpty(false);\n            showSavedNotification();\n            setSaving(false);\n          } else {\n            console.log(\"Error in insertion\");\n          }\n        });\n    } else {\n      setValidated(false);\n    }\n    setUploaded(false);\n  }\n\n  const [TotalCount, setTotalCount] = React.useState();\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n    fetch(Domain + \"/api/Admin/GetAllDepartments/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.TotalCount > 10) {\n          console.log(\"pages\", Math.ceil(json.TotalCount / 10));\n          setTotalCount(Math.ceil(json.TotalCount / 10));\n\n          setPagination(true);\n        }\n      });\n  }, [pageIndex]);\n\n  useEffect(() => {\n    console.log(\"componentDidMount\");\n    console.log(\"Detele\" + deletee + \" edit\" + edit);\n\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Admin/GetAllDepartments/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n      });\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      setDeleting(true);\n      fetch(Domain + \"/api/Admin/DeleteDepartments/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passDelete),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setDelete([]);\n            showDeletedNotification();\n            setDeleting(false);\n          }\n        });\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Admin/GetDepartmentsById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit([]);\n            setData(json.Data);\n            console.log(json.Data);\n          }\n        });\n    }\n  }, [deletee, edit, saved]);\n\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Department Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Department Deleted Successfully\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n      <LoadingOverlay active={saving} spinner text=\"Saving Please Wait..\">\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <Card>\n              <form>\n                <CardHeader color=\"info\">\n                  <h4 className={classes.cardTitleWhite}>\n                    Add New Departments\n                  </h4>\n                  <p className={classes.cardCategoryWhite}>\n                    Enter the Department details below and hit Save\n                  </p>\n                </CardHeader>\n\n                <CardBody>\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.DepartmentName}\n                        labelText=\"Department Name\"\n                        id=\"DepartmentName\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.HeadName}\n                        labelText=\"Head of Department\"\n                        id=\"HeadName\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                  </GridContainer>\n\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Description}\n                        labelText=\"Enter a description about the Department..\"\n                        id=\"Description\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          multiline: true,\n                          rows: 5,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={5} md={5}>\n                      {\" \"}\n                      <CustomFileInput\n                        setFiles={setFiles}\n                        saved={uploaded}\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          placeholder: \"Click here to upload an image\",\n                        }}\n                        endButton={{\n                          buttonProps: {\n                            round: true,\n                            color: \"info\",\n                            justIcon: true,\n                            filebutton: true,\n                          },\n                          icon: <AttachFile />,\n                        }}\n                      />\n                      {validated ? (\n                        <></>\n                      ) : (\n                        <Danger>Please enter all the details to save</Danger>\n                      )}\n                    </GridItem>\n                  </GridContainer>\n                </CardBody>\n                <CardFooter>\n                  <Button onClick={HandleClear} color=\"defualt\">\n                    Clear\n                  </Button>\n                  <Button onClick={UploadImage} color=\"info\">\n                    Save\n                  </Button>\n                </CardFooter>\n              </form>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      </LoadingOverlay>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>\n                List Of All Departments\n              </h4>\n              <p className={classes.cardCategoryWhite}>\n                All Departments are listed below, you can delete or edit them.\n              </p>\n            </CardHeader>\n            <CardBody>\n              <LoadingOverlay active={deleting} spinner text=\"Please Wait..\">\n                {empty ? (\n                  <p>empty</p>\n                ) : (\n                  <Table\n                    tableHeaderColor=\"info\"\n                    tableHead={[\n                      \"\",\n                      \"ID\",\n                      \"DepartmentName\",\n                      \"HODName\",\n                      // \"Status\",\n                      \"Image\",\n                      \"Description\",\n                      // \"Created By\",\n                      // \"Created Date\",\n                      // \"Modified By\",\n                      // \"Modified Date\",\n                      // \"Deteled By\",\n                      // \"Deleted Date\",\n                      \"Actions\",\n                    ]}\n                    tableData={Departdata}\n                    setEdit={setEdit}\n                    setDelete={setDelete}\n                    loading={loading}\n                  />\n                )}\n              </LoadingOverlay>\n            </CardBody>\n          </Card>\n          {pagination ? (\n            <Pagination\n              TotalCount={TotalCount}\n              setPageIndex={setPageIndex}\n              pageIndex={pageIndex}\n              className={\n                classes.textCenter + \" \" + classes.justifyContentCenter\n              }\n              pages={[\n                { text: \"Previous\" },\n                { active: true, text: \"1\" },\n\n                { text: \"Next\" },\n              ]}\n              color=\"info\"\n            />\n          ) : (\n            <></>\n          )}\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\n","import {\n  roseColor,\n  primaryColor,\n  infoColor,\n  successColor,\n  warningColor,\n  dangerColor,\n  blackColor,\n  whiteColor,\n  grayColor,\n  hexToRgb,\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst navPillsStyle = (theme) => ({\n  root: {\n    marginTop: \"20px\",\n    paddingLeft: \"0\",\n    marginBottom: \"0\",\n    overflow: \"visible !important\",\n  },\n  flexContainer: {\n    [theme.breakpoints.down(\"xs\")]: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n  },\n  displayNone: {\n    display: \"none !important\",\n  },\n  fixed: {\n    overflow: \"visible !important\",\n  },\n  horizontalDisplay: {\n    display: \"block\",\n  },\n  pills: {\n    float: \"left\",\n    position: \"relative\",\n    display: \"block\",\n    borderRadius: \"30px\",\n    minWidth: \"100px\",\n    textAlign: \"center\",\n    transition: \"all .3s\",\n    padding: \"10px 15px\",\n    color: grayColor[15],\n    height: \"auto\",\n    opacity: \"1\",\n    maxWidth: \"100%\",\n    margin: \"0 5px\",\n    minHeight: \"unset\",\n    lineHeight: \"24px\",\n    textTransform: \"uppercase\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n  },\n  pillsWithIcons: {\n    borderRadius: \"4px\",\n  },\n  tabIcon: {\n    width: \"30px\",\n    height: \"30px\",\n    display: \"block\",\n    margin: \"15px 0 !important\",\n  },\n  horizontalPills: {\n    width: \"100%\",\n    float: \"none !important\",\n    \"& + button\": {\n      margin: \"10px 0\",\n    },\n  },\n  contentWrapper: {\n    marginTop: \"20px\",\n    \"& .react-swipeable-view-container > div > div\": {\n      paddingLeft: \"15px\",\n      paddingRight: \"15px\",\n    },\n  },\n  primary: {\n    \"&,&:hover\": {\n      color: whiteColor,\n      backgroundColor: primaryColor[0],\n      boxShadow:\n        \"0 4px 20px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.14), 0 7px 10px -5px rgba(\" +\n        hexToRgb(primaryColor[0]) +\n        \", 0.4)\",\n    },\n  },\n  info: {\n    \"&,&:hover\": {\n      color: whiteColor,\n      backgroundColor: infoColor[0],\n      boxShadow:\n        \"0 4px 20px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.14), 0 7px 10px -5px rgba(\" +\n        hexToRgb(successColor[0]) +\n        \", 0.4)\",\n    },\n  },\n  success: {\n    \"&,&:hover\": {\n      color: whiteColor,\n      backgroundColor: successColor[0],\n      boxShadow:\n        \"0 2px 2px 0 rgba(\" +\n        hexToRgb(successColor[0]) +\n        \", 0.14), 0 3px 1px -2px rgba(\" +\n        hexToRgb(successColor[0]) +\n        \", 0.2), 0 1px 5px 0 rgba(\" +\n        hexToRgb(successColor[0]) +\n        \", 0.12)\",\n    },\n  },\n  warning: {\n    \"&,&:hover\": {\n      color: whiteColor,\n      backgroundColor: warningColor[0],\n      boxShadow:\n        \"0 4px 20px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.14), 0 7px 10px -5px rgba(\" +\n        hexToRgb(warningColor[0]) +\n        \", 0.4)\",\n    },\n  },\n  danger: {\n    \"&,&:hover\": {\n      color: whiteColor,\n      backgroundColor: dangerColor[0],\n      boxShadow:\n        \"0 4px 20px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.14), 0 7px 10px -5px rgba(\" +\n        hexToRgb(warningColor[0]) +\n        \", 0.4)\",\n    },\n  },\n  rose: {\n    \"&,&:hover\": {\n      color: whiteColor,\n      backgroundColor: roseColor[0],\n      boxShadow:\n        \"0 4px 20px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.14), 0 7px 10px -5px rgba(\" +\n        hexToRgb(roseColor[0]) +\n        \", 0.4)\",\n    },\n  },\n  alignCenter: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  tabLabelContainer: {\n    padding: \"unset !important\",\n  },\n});\n\nexport default navPillsStyle;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\nimport SwipeableViews from \"react-swipeable-views\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\n\n// core components\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\n\nimport styles from \"assets/jss/material-dashboard-react/components/navPillsStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function NavPills(props) {\n  const [active, setActive] = React.useState(props.active);\n  const handleChange = (event, active) => {\n    setActive(active);\n  };\n  const handleChangeIndex = (index) => {\n    setActive(index);\n  };\n  const { tabs, direction, color, horizontal, alignCenter } = props;\n  const classes = useStyles();\n  const flexContainerClasses = classNames({\n    [classes.flexContainer]: true,\n    [classes.horizontalDisplay]: horizontal !== undefined,\n  });\n  const tabButtons = (\n    <Tabs\n      classes={{\n        root: classes.root,\n        fixed: classes.fixed,\n        flexContainer: flexContainerClasses,\n        indicator: classes.displayNone,\n      }}\n      value={active}\n      onChange={handleChange}\n      centered={alignCenter}\n    >\n      {tabs.map((prop, key) => {\n        var icon = {};\n        if (prop.tabIcon !== undefined) {\n          icon[\"icon\"] = <prop.tabIcon className={classes.tabIcon} />;\n        }\n        const pillsClasses = classNames({\n          [classes.pills]: true,\n          [classes.horizontalPills]: horizontal !== undefined,\n          [classes.pillsWithIcons]: prop.tabIcon !== undefined,\n        });\n        return (\n          <Tab\n            label={prop.tabButton}\n            key={key}\n            {...icon}\n            classes={{\n              root: pillsClasses,\n              label: classes.label,\n              selected: classes[color],\n            }}\n          />\n        );\n      })}\n    </Tabs>\n  );\n  const tabContent = (\n    <div className={classes.contentWrapper}>\n      <SwipeableViews\n        axis={direction === \"rtl\" ? \"x-reverse\" : \"x\"}\n        index={active}\n        onChangeIndex={handleChangeIndex}\n      >\n        {tabs.map((prop, key) => {\n          return (\n            <div className={classes.tabContent} key={key}>\n              {prop.tabContent}\n            </div>\n          );\n        })}\n      </SwipeableViews>\n    </div>\n  );\n  return horizontal !== undefined ? (\n    <GridContainer>\n      <GridItem {...horizontal.tabsGrid}>{tabButtons}</GridItem>\n      <GridItem {...horizontal.contentGrid}>{tabContent}</GridItem>\n    </GridContainer>\n  ) : (\n    <div>\n      {tabButtons}\n      {tabContent}\n    </div>\n  );\n}\n\nNavPills.defaultProps = {\n  active: 0,\n  color: \"primary\",\n};\n\nNavPills.propTypes = {\n  // index of the default active pill\n  active: PropTypes.number,\n  tabs: PropTypes.arrayOf(\n    PropTypes.shape({\n      tabButton: PropTypes.string,\n      tabIcon: PropTypes.object,\n      tabContent: PropTypes.node,\n    })\n  ).isRequired,\n  color: PropTypes.oneOf([\n    \"primary\",\n    \"warning\",\n    \"danger\",\n    \"success\",\n    \"info\",\n    \"rose\",\n  ]),\n  direction: PropTypes.string,\n  horizontal: PropTypes.shape({\n    tabsGrid: PropTypes.object,\n    contentGrid: PropTypes.object,\n  }),\n  alignCenter: PropTypes.bool,\n};\n","import React, { useEffect, useState } from \"react\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\n// import CustomInput from \"components/CustomInput/CustomInput.js\";\n// import Button from \"components/CustomButtons/Button.js\";\n// import CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport NavPills from \"components/NavPills/NavPills.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport { Domain } from \"Domain\";\n// import axios from \"axios\";\n// import Danger from \"components/Typography/Danger\";\nimport LoadingOverlay from \"react-loading-overlay\";\n// import ImageUpload from \"components/CustomUpload/ImageUpload.js\";\nimport Accordion from \"components/Accordion/Accordion\";\nimport Pagination from \"components/Pagination/Pagination\";\n\n// import AttachFile from \"@material-ui/icons/AttachFile\";\n// import CustomFileInput from \"components/CustomFileInput/CustomFileInput.js\";\n\n// import { data } from \"./data.json\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function Admission() {\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [edit1, setEdit1] = React.useState([]);\n  const [edit2, setEdit2] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [requested, setRequested] = React.useState([]);\n  const [waitingList, setWaitingList] = React.useState([]);\n  const [admitted, setAdmitted] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n  const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  const [empty1, setEmpty1] = React.useState(false);\n  const [empty2, setEmpty2] = React.useState(false);\n  const [viewData, Setview] = React.useState(false);\n  const [step, setStep] = React.useState(0);\n  const [stepChangeData, setStepChangeData] = React.useState();\n  const [stepChangeData1, setStepChangeData1] = React.useState();\n  const [stepChangeData2, setStepChangeData2] = React.useState();\n  function HandleView() {\n    if (viewData) {\n      Setview(false);\n      setStep(0);\n    } else {\n      setStep(1);\n      Setview(true);\n    }\n  }\n  function HandleView1() {\n    if (viewData) {\n      Setview(false);\n      setStep(0);\n    } else {\n      setStep(2);\n      Setview(true);\n    }\n  }\n  function HandleView2() {\n    if (viewData) {\n      Setview(false);\n      setStep(0);\n    } else {\n      setStep(3);\n      Setview(true);\n    }\n  }\n  const ReqData = requested.map((d) => ({\n    Id: d.Id,\n    AdmissionNo: d.AdmissionNo,\n    FirstName: d.FirstName,\n    Gender: d.Gender,\n    DOB: d.DOB,\n    Course: d.Course,\n    FathersName: d.FathersName,\n    FatherMobile: d.FatherMobile,\n    District: d.District,\n    HouseName: d.HouseName,\n    Email: d.Email,\n  }));\n  const WaitData = waitingList.map((d) => ({\n    Id: d.Id,\n    AdmissionNo: d.AdmissionNo,\n    FirstName: d.FirstName,\n    Gender: d.Gender,\n    DOB: d.DOB,\n    Course: d.Course,\n    FathersName: d.FathersName,\n    FatherMobile: d.FatherMobile,\n    District: d.District,\n    HouseName: d.HouseName,\n    Email: d.Email,\n  }));\n  const AdmData = admitted.map((d) => ({\n    Id: d.Id,\n    AdmissionNo: d.AdmissionNo,\n    FirstName: d.FirstName,\n    Gender: d.Gender,\n    DOB: d.DOB,\n    Course: d.Course,\n    FathersName: d.FathersName,\n    FatherMobile: d.FatherMobile,\n    District: d.District,\n    HouseName: d.HouseName,\n    Email: d.Email,\n  }));\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n  //Form Data\n  const [data, setData] = React.useState();\n\n  // console.log(data);\n  //PassData for getAll API\n  let passData1 = {\n    PageIndex: 0,\n    PageSize: 10,\n    CourseId: \"\",\n    Year: 2021,\n    Step: 1,\n  };\n  let passData2 = {\n    PageIndex: 0,\n    PageSize: 10,\n    CourseId: \"\",\n    Year: 2021,\n    Step: 2,\n  };\n  let passData3 = {\n    PageIndex: 0,\n    PageSize: 10,\n    CourseId: \"\",\n    Year: 2021,\n    Step: 3,\n  };\n  //PaddData for Delete a Row\n  let passDelete = {\n    Id: deletee,\n    DeletedBy: 2,\n  };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n  let passEdit1 = {\n    Id: edit1,\n  };\n  let passEdit2 = {\n    Id: edit2,\n  };\n\n  const [TotalCount, setTotalCount] = React.useState();\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n\n    fetch(Domain + \"/api/Student/GetAdmissionDetailsForAdmin/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        // console.log(\"requested data\", json.Data);\n        setRequested(json.Data);\n        if (json.TotalCount > 10) {\n          console.log(\"pages\", Math.ceil(json.TotalCount / 10));\n          setTotalCount(Math.ceil(json.TotalCount / 10));\n\n          setPagination(true);\n        }\n      });\n  }, [pageIndex]);\n\n  useEffect(() => {\n    //API call for get latest 10 elements step is requested\n    fetch(Domain + \"/api/Student/GetAdmissionDetailsForAdmin/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData1),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        // console.log(\"requested data\", json.Data);\n        setRequested(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        else setEmpty(false);\n\n        setLoading(false);\n      });\n    //API call for get latest 10 elements step is waiting glist\n    fetch(Domain + \"/api/Student/GetAdmissionDetailsForAdmin/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData2),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setWaitingList(json.Data);\n        if (json.Data.length == 0) setEmpty1(true);\n        else setEmpty1(false);\n\n        setLoading(false);\n      });\n    //API call for get latest 10 elements step is accepted\n    fetch(Domain + \"/api/Student/GetAdmissionDetailsForAdmin/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData3),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setAdmitted(json.Data);\n        if (json.Data.length == 0) setEmpty2(true);\n        else setEmpty2(false);\n        setLoading(false);\n      });\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      setDeleting(true);\n      fetch(Domain + \"/api/Student/DeleteAdmissionDetails/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passDelete),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setDelete([]);\n            showDeletedNotification();\n            setDeleting(false);\n          }\n        });\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Student/GetAdmissionDetailsById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit([]);\n            setData(json.Data);\n            HandleView();\n            console.log(json.Data);\n          }\n        });\n    }\n    if (edit1.length != 0) {\n      fetch(Domain + \"/api/Student/GetAdmissionDetailsById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit1),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit1([]);\n            setData(json.Data);\n            HandleView1();\n            console.log(json.Data);\n          }\n        });\n    }\n    if (edit2.length != 0) {\n      fetch(Domain + \"/api/Student/GetAdmissionDetailsById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit2),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit2([]);\n            setData(json.Data);\n            HandleView2();\n            console.log(json.Data);\n          }\n        });\n    }\n  }, [deletee, edit, edit1, edit2, saved, viewData]);\n\n  useEffect(() => {\n    setLoading(true);\n    //console.log(\"Data:\", data.Id);\n    fetch(Domain + \"/api/Student/CreateAdmissionDetails/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(stepChangeData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        console.log(\"status update:\", json.Data);\n        // setRequested(json.Data);\n        // if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n        Setview(false);\n      });\n  }, [stepChangeData]);\n  useEffect(() => {\n    setLoading(true);\n    //console.log(\"Data:\", data.Id);\n    fetch(Domain + \"/api/Student/CreateAdmissionDetails/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(stepChangeData1),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        console.log(\"status update:\", json.Data);\n        // setRequested(json.Data);\n        // if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n        Setview(false);\n      });\n  }, [stepChangeData1]);\n  useEffect(() => {\n    setLoading(true);\n    //console.log(\"Data:\", data.Id);\n    fetch(Domain + \"/api/Student/CreateAdmissionDetails/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(stepChangeData2),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        console.log(\"status update:\", json.Data);\n        // setRequested(json.Data);\n        // if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n        Setview(false);\n      });\n  }, [stepChangeData2]);\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Admission Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Admission Deleted Successfully\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n\n      {viewData ? (\n        <LoadingOverlay active={loading} spinner text=\"Please Wait..\">\n          <Card>\n            <GridContainer>\n              <GridItem md={12} sm={12} lg={4}>\n                <img src={Domain + data.Image} alt=\"..\" />\n              </GridItem>\n              <GridItem md={12} sm={12} lg={6}>\n                <h2 className={classes.title}>{data.FirstName}</h2>\n                <h3 className={classes.mainPrice}>{data.Course}</h3>\n                <Accordion\n                  active={0}\n                  activeColor=\"info\"\n                  collapses={[\n                    {\n                      title: \"Personel Info\",\n                      content: (\n                        <>\n                          <b>Date Of Birth : </b>\n                          {data.DOB}\n                          <br />\n                          <b> Gender : </b>\n                          {data.Gender}\n                          <br />\n                          <b> Guardians Name :</b> {data.FathersName}\n                          <br />\n                          <b> Guardians Mobile :</b> {data.FatherMobile}\n                          <br />\n                          <b> Contact : </b>\n                          {data.StudentMobile}\n                          <br />\n                          <b> Email : </b>\n                          {data.Email}\n                          <br />\n                        </>\n                      ),\n                    },\n                    {\n                      title: \"Educational Details\",\n                      content: (\n                        <>\n                          <b> Course : </b>\n                          {data.Course}\n                          <br />\n                          <b> Course Code : </b>\n                          {data.CourseCode}\n                          <br />\n                          <b> Admission Number : </b>\n                          {data.AdmissionNo}\n                          <br />\n                          <b> Registration Number: </b>\n                          {data.RegistrationNo}\n                        </>\n                      ),\n                    },\n                    {\n                      title: \"Academic Details\",\n                      content: (\n                        <p>\n                          Here comes the internal marks and university\n                          marklists.\n                        </p>\n                      ),\n                    },\n                  ]}\n                />\n\n                <GridContainer className={classes.pullRight}>\n                  <Button round onClick={HandleView}>\n                    Go back\n                  </Button>\n                  {step == 1 ? (\n                    <>\n                      <Button\n                        round\n                        color=\"info\"\n                        onClick={() => {\n                          setStepChangeData1({\n                            Id: data.Id,\n                            LastStatus: \"Processing\",\n                            Step: 2,\n                            StatusList: \"\",\n                          });\n                        }}\n                      >\n                        Add to Waiting list\n                      </Button>\n                      <Button\n                        round\n                        color=\"danger\"\n                        onClick={() => {\n                          setStepChangeData2({\n                            Id: data.Id,\n                            LastStatus: \"Rejected\",\n                            Step: 4,\n                            StatusList: \"\",\n                          });\n                        }}\n                      >\n                        Reject Application\n                      </Button>\n                    </>\n                  ) : (\n                    <>\n                      {step == 2 ? (\n                        <>\n                          <Button\n                            round\n                            color=\"success\"\n                            onClick={() => {\n                              setStepChangeData({\n                                Id: data.Id,\n                                LastStatus: \"Admitted\",\n                                Step: 3,\n                                StatusList: \"\",\n                              });\n                            }}\n                          >\n                            Admit\n                          </Button>\n                          <Button\n                            round\n                            color=\"danger\"\n                            onClick={() => {\n                              setStepChangeData2({\n                                Id: data.Id,\n                                LastStatus: \"Rejected\",\n                                Step: 4,\n                                StatusList: \"\",\n                              });\n                            }}\n                          >\n                            Reject Application\n                          </Button>\n                        </>\n                      ) : (\n                        <>\n                          {\" \"}\n                          <Button round color=\"success\">\n                            Admitted\n                          </Button>\n                        </>\n                      )}\n                    </>\n                  )}\n                </GridContainer>\n              </GridItem>\n            </GridContainer>\n          </Card>\n        </LoadingOverlay>\n      ) : (\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <h3>\n              <small>Select Admission status to view entries</small>\n            </h3>\n            <NavPills\n              color=\"info\"\n              tabs={[\n                {\n                  tabButton: \"Requested\",\n                  tabContent: (\n                    <GridContainer>\n                      <GridItem xs={12} sm={12} md={12}>\n                        <Card>\n                          <CardHeader color=\"info\">\n                            <h4 className={classes.cardTitleWhite}>\n                              List Requested Admission entries\n                            </h4>\n                            <p className={classes.cardCategoryWhite}>\n                              Admissions with status requested will be listed\n                              below\n                            </p>\n                          </CardHeader>\n                          <CardBody>\n                            <LoadingOverlay\n                              active={deleting}\n                              spinner\n                              text=\"Please Wait..\"\n                            >\n                              {empty ? (\n                                <p>empty</p>\n                              ) : (\n                                <Table\n                                  tableHeaderColor=\"info\"\n                                  tableHead={[\n                                    \"\",\n                                    \"Id\",\n                                    \"AdmissionNo\",\n                                    \"First Name\",\n                                    \"Gender\",\n                                    \"DOB\",\n                                    \"Course\",\n                                    \"Father's Name\",\n                                    \"Father's Mobile\",\n                                    \"District\",\n                                    \"House Name\",\n                                    \"Email\",\n                                    \"Actions\",\n                                  ]}\n                                  tableData={ReqData}\n                                  setEdit={setEdit}\n                                  setDelete={setDelete}\n                                  loading={loading}\n                                />\n                              )}\n                            </LoadingOverlay>\n                          </CardBody>\n                        </Card>\n                      </GridItem>\n                    </GridContainer>\n                  ),\n                },\n                {\n                  tabButton: \"Waiting List\",\n                  tabContent: (\n                    <span>\n                      <GridContainer>\n                        <GridItem xs={12} sm={12} md={12}>\n                          <Card>\n                            <CardHeader color=\"info\">\n                              <h4 className={classes.cardTitleWhite}>\n                                List Of Admissions in Waiting List\n                              </h4>\n                              <p className={classes.cardCategoryWhite}>\n                                Admissions with status Waiting list will be\n                                listed below\n                              </p>\n                            </CardHeader>\n                            <CardBody>\n                              <LoadingOverlay\n                                active={deleting}\n                                spinner\n                                text=\"Please Wait..\"\n                              >\n                                {empty1 ? (\n                                  <p>empty</p>\n                                ) : (\n                                  <Table\n                                    tableHeaderColor=\"info\"\n                                    tableHead={[\n                                      \"\",\n                                      \"Id\",\n                                      \"AdmissionNo\",\n                                      \"First Name\",\n                                      \"Gender\",\n                                      \"DOB\",\n                                      \"Course\",\n                                      \"Father's Name\",\n                                      \"Father's Mobile\",\n                                      \"District\",\n                                      \"House Name\",\n                                      \"Email\",\n                                      \"Actions\",\n                                    ]}\n                                    tableData={WaitData}\n                                    setEdit={setEdit1}\n                                    setDelete={setDelete}\n                                    loading={loading}\n                                  />\n                                )}\n                              </LoadingOverlay>\n                            </CardBody>\n                          </Card>\n                        </GridItem>\n                      </GridContainer>\n                    </span>\n                  ),\n                },\n                {\n                  tabButton: \"Accepted\",\n                  tabContent: (\n                    <span>\n                      <GridContainer>\n                        <GridItem xs={12} sm={12} md={12}>\n                          <Card>\n                            <CardHeader color=\"info\">\n                              <h4 className={classes.cardTitleWhite}>\n                                List Of Admitted entries\n                              </h4>\n                              <p className={classes.cardCategoryWhite}>\n                                Admissions with status Admitted will be listed\n                                below\n                              </p>\n                            </CardHeader>\n                            <CardBody>\n                              <LoadingOverlay\n                                active={deleting}\n                                spinner\n                                text=\"Please Wait..\"\n                              >\n                                {empty2 ? (\n                                  <p>empty</p>\n                                ) : (\n                                  <Table\n                                    tableHeaderColor=\"info\"\n                                    tableHead={[\n                                      \"\",\n                                      \"Id\",\n                                      \"AdmissionNo\",\n                                      \"First Name\",\n                                      \"Gender\",\n                                      \"DOB\",\n                                      \"Course\",\n                                      \"Father's Name\",\n                                      \"Father's Mobile\",\n                                      \"District\",\n                                      \"House Name\",\n                                      \"Email\",\n                                      \"Actions\",\n                                    ]}\n                                    tableData={AdmData}\n                                    setEdit={setEdit2}\n                                    setDelete={setDelete}\n                                    loading={loading}\n                                  />\n                                )}\n                              </LoadingOverlay>\n                            </CardBody>\n                          </Card>\n                        </GridItem>\n                      </GridContainer>\n                    </span>\n                  ),\n                },\n              ]}\n            />\n            {pagination ? (\n              <Pagination\n                TotalCount={TotalCount}\n                setPageIndex={setPageIndex}\n                pageIndex={pageIndex}\n                className={\n                  classes.textCenter + \" \" + classes.justifyContentCenter\n                }\n                pages={[\n                  { text: \"Previous\" },\n                  { active: true, text: \"1\" },\n\n                  { text: \"Next\" },\n                ]}\n                color=\"primary\"\n              />\n            ) : (\n              <></>\n            )}\n          </GridItem>\n        </GridContainer>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function EmptyTable() {\n  const classes = useStyles();\n  return <div className={classes.tableResponsive}>Empty Table</div>;\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Domain } from \"Domain\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport axios from \"axios\";\nimport Danger from \"components/Typography/Danger\";\nimport LoadingOverlay from \"react-loading-overlay\";\n// import ImageUpload from \"components/CustomUpload/ImageUpload.js\";\n\nimport AttachFile from \"@material-ui/icons/AttachFile\";\nimport CustomFileInput from \"components/CustomFileInput/CustomFileInput.js\";\nimport EmptyTable from \"components/EmptyTable\";\nimport Pagination from \"components/Pagination/Pagination\";\n// import { data } from \"./data.json\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function Clubs() {\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [events, setEvents] = React.useState([]);\n  const [files, setFiles] = React.useState(null);\n  const [validated, setValidated] = React.useState(true);\n  const [uploaded, setUploaded] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  const [saving, setSaving] = React.useState(false);\n\n  const Clubsdata = events.map((d) => ({\n    Id: d.Id,\n    Name: d.Name,\n    Link: d.Link,\n    StaffId: d.StaffId,\n    Image: d.Image,\n    Description: d.Description,\n  }));\n\n  //Saved Notification trigger\n  const showSavedNotification = () => {\n    if (!saved) {\n      setSaved(true);\n      setTimeout(function () {\n        setSaved(false);\n      }, 3000);\n    }\n  };\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n  //Form Data\n  const [data, setData] = React.useState({\n    Id: 0,\n    Name: \"\",\n    Link: \"\",\n    StaffId: \"\",\n    Status: \"Created\",\n    Image: \"\",\n    Description: \"\",\n  });\n\n  //PassData for getAll API\n  let passData = {\n    PageIndex: 0,\n    PageSize: 10,\n  };\n\n  //PaddData for Delete a Row\n  let passDelete = {\n    Id: deletee,\n    DeletedBy: 2,\n  };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n  //Function to handle Data input\n  function HandleData(e) {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n  function HandleClear() {\n    setData({\n      Id: 0,\n      Name: \"\",\n      Link: \"\",\n      StaffId: \"\",\n      Status: \"Created\",\n      Image: \"\",\n      Description: \"\",\n    });\n  }\n  //Function for Validating fields\n  function ValidateFields() {\n    if (data.Name == \"\") {\n      return false;\n    } else if (data.Link == \"\") {\n      return false;\n    } else if (data.StaffId == \"\") {\n      return false;\n    } else if (data.Image == \"\") {\n      return false;\n    } else if (data.Description == \"\") {\n      return false;\n    } else return true;\n  }\n  //function to upload\n  function UploadImage() {\n    if (files != null) {\n      setValidated(true);\n      setSaving(true);\n      let form_data = new FormData();\n      form_data.append(\"File\", files[0]);\n      let url = Domain + \"/api/Uploads/File/\";\n      axios\n        .post(url, form_data, {\n          headers: {\n            \"content-type\": \"multipart/form-data\",\n          },\n        })\n        .then((res) => {\n          if (res.data.Success) {\n            data.Image = res.data.Data[0];\n            setUploaded(true);\n            HandleSave();\n          } else {\n            setUploaded(false);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setUploaded(false);\n        });\n    } else if (data.Image != \"\") HandleSave();\n    else setValidated(false);\n  }\n\n  //Function to save Data\n  function HandleSave() {\n    if (ValidateFields()) {\n      setValidated(true);\n      fetch(Domain + \"/api/Admin/CreateClubs/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setData({\n              Id: 0,\n              Name: \"\",\n              Link: \"\",\n              StaffId: \"\",\n              Status: \"Created\",\n              Image: \"\",\n              Description: \"\",\n            });\n            setEmpty(false);\n            showSavedNotification();\n            setSaving(false);\n          } else {\n            console.log(\"Error in insertion\");\n          }\n        });\n    } else {\n      setValidated(false);\n    }\n    setUploaded(false);\n  }\n\n  const [TotalCount, setTotalCount] = React.useState();\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n    fetch(Domain + \"/api/Admin/GetAllClubs/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.TotalCount > 10) {\n          console.log(\"pages\", Math.ceil(json.TotalCount / 10));\n          setTotalCount(Math.ceil(json.TotalCount / 10));\n\n          setPagination(true);\n        }\n      });\n  }, [pageIndex]);\n\n  useEffect(() => {\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Admin/GetAllClubs/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n      });\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      setDeleting(true);\n      fetch(Domain + \"/api/Admin/DeleteClubs/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passDelete),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setDelete([]);\n            showDeletedNotification();\n            setDeleting(false);\n          }\n        });\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Admin/GetClubsById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit([]);\n            setData(json.Data);\n            console.log(json.Data);\n          }\n        });\n    }\n  }, [deletee, edit, saved]);\n\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Club Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Club Deleted Successfully\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n      <LoadingOverlay active={saving} spinner text=\"Saving Please Wait..\">\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <Card>\n              <form>\n                <CardHeader color=\"info\">\n                  <h4 className={classes.cardTitleWhite}>Add New Club</h4>\n                  <p className={classes.cardCategoryWhite}>\n                    Enter the Club details below and hit Save\n                  </p>\n                </CardHeader>\n\n                <CardBody>\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Name}\n                        labelText=\"Name\"\n                        id=\"Name\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={3}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Link}\n                        labelText=\"Link\"\n                        id=\"Link\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={3}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.StaffId}\n                        labelText=\"Staff Id\"\n                        id=\"StaffId\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                  </GridContainer>\n\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Description}\n                        labelText=\"Enter a description about the club..\"\n                        id=\"Description\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          multiline: true,\n                          rows: 5,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={5} md={5}>\n                      {\" \"}\n                      <CustomFileInput\n                        setFiles={setFiles}\n                        saved={uploaded}\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          placeholder: \"Click here to upload an image\",\n                        }}\n                        endButton={{\n                          buttonProps: {\n                            round: true,\n                            color: \"info\",\n                            justIcon: true,\n                            filebutton: true,\n                          },\n                          icon: <AttachFile />,\n                        }}\n                      />\n                      {validated ? (\n                        <></>\n                      ) : (\n                        <Danger>Please enter all the details to save</Danger>\n                      )}\n                    </GridItem>\n                  </GridContainer>\n                </CardBody>\n                <CardFooter>\n                  <Button onClick={HandleClear} color=\"defualt\">\n                    Clear\n                  </Button>\n                  <Button onClick={UploadImage} color=\"info\">\n                    Save\n                  </Button>\n                </CardFooter>\n              </form>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      </LoadingOverlay>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>List Of All Clubs</h4>\n              <p className={classes.cardCategoryWhite}>\n                All Clubs are listed below, you can delete or edit them.\n              </p>\n            </CardHeader>\n            <CardBody>\n              <LoadingOverlay active={deleting} spinner text=\"Please Wait..\">\n                {empty ? (\n                  <EmptyTable />\n                ) : (\n                  <Table\n                    tableHeaderColor=\"info\"\n                    tableHead={[\n                      \"\",\n                      \"ID\",\n                      \"Name\",\n                      \"Link\",\n                      \"StaffId\",\n                      // \"Status\",\n                      \"Image\",\n                      \"Description\",\n                      // \"Created By\",\n                      // \"Created Date\",\n                      // \"Modified By\",\n                      // \"Modified Date\",\n                      // \"Deteled By\",\n                      // \"Deleted Date\",\n                      \"Actions\",\n                    ]}\n                    tableData={Clubsdata}\n                    setEdit={setEdit}\n                    setDelete={setDelete}\n                    loading={loading}\n                  />\n                )}\n              </LoadingOverlay>\n            </CardBody>\n          </Card>\n          {pagination ? (\n            <Pagination\n              TotalCount={TotalCount}\n              setPageIndex={setPageIndex}\n              pageIndex={pageIndex}\n              className={\n                classes.textCenter + \" \" + classes.justifyContentCenter\n              }\n              pages={[\n                { text: \"Previous\" },\n                { active: true, text: \"1\" },\n\n                { text: \"Next\" },\n              ]}\n              color=\"info\"\n            />\n          ) : (\n            <></>\n          )}\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Domain } from \"Domain\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport axios from \"axios\";\nimport Danger from \"components/Typography/Danger\";\nimport LoadingOverlay from \"react-loading-overlay\";\n// import ImageUpload from \"components/CustomUpload/ImageUpload.js\";\n\nimport AttachFile from \"@material-ui/icons/AttachFile\";\nimport CustomFileInput from \"components/CustomFileInput/CustomFileInput.js\";\nimport Pagination from \"components/Pagination/Pagination\";\n// import { data } from \"./data.json\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function Facilities() {\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [events, setEvents] = React.useState([]);\n  const [files, setFiles] = React.useState(null);\n  const [validated, setValidated] = React.useState(true);\n  const [uploaded, setUploaded] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  const [saving, setSaving] = React.useState(false);\n  const [errors, setError] = React.useState(false);\n\n  const Facilitiesdata = events.map((d) => ({\n    Id: d.Id,\n    Name: d.Name,\n    Link: d.Link,\n    StaffId: d.StaffId,\n    Image: d.Image,\n    Description: d.Description,\n  }));\n\n  //Saved Notification trigger\n  const showSavedNotification = () => {\n    if (!saved) {\n      setSaved(true);\n      setTimeout(function () {\n        setSaved(false);\n      }, 3000);\n    }\n  };\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n  //Error Notification Trigger\n  const showErrorNotification = () => {\n    if (!errors) {\n      setError(true);\n      setTimeout(function () {\n        setError(false);\n      }, 3000);\n    }\n  };\n  //Form Data\n  const [data, setData] = React.useState({\n    Id: 0,\n    Name: \"\",\n    Link: \"\",\n    StaffId: \"\",\n    Status: \"Created\",\n    Image: \"\",\n    Description: \"\",\n  });\n\n  //PassData for getAll API\n  let passData = {\n    PageIndex: 0,\n    PageSize: 10,\n  };\n\n  //PaddData for Delete a Row\n  let passDelete = {\n    Id: deletee,\n    DeletedBy: 2,\n  };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n  //Function to handle Data input\n  function HandleData(e) {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n  function HandleClear() {\n    setData({\n      Id: 0,\n      Name: \"\",\n      Link: \"\",\n      StaffId: \"\",\n      Status: \"Created\",\n      Image: \"\",\n      Description: \"\",\n    });\n  }\n  //Function for Validating fields\n  function ValidateFields() {\n    if (data.Name == \"\") {\n      return false;\n    } else if (data.Link == \"\") {\n      return false;\n    } else if (data.StaffId == \"\") {\n      return false;\n    } else if (data.Image == \"\") {\n      return false;\n    } else if (data.Description == \"\") {\n      return false;\n    } else return true;\n  }\n  //function to upload\n  function UploadImage() {\n    if (files != null) {\n      setValidated(true);\n      setSaving(true);\n      let form_data = new FormData();\n      form_data.append(\"File\", files[0]);\n      let url = Domain + \"/api/Uploads/File/\";\n      axios\n        .post(url, form_data, {\n          headers: {\n            \"content-type\": \"multipart/form-data\",\n          },\n        })\n        .then((res) => {\n          if (res.data.Success) {\n            data.Image = res.data.Data[0];\n            setUploaded(true);\n            console.log(data);\n            HandleSave();\n          } else {\n            setUploaded(false);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setUploaded(false);\n        });\n    } else {\n      setValidated(false);\n    }\n  }\n\n  //Function to save Data\n  function HandleSave() {\n    if (ValidateFields()) {\n      setValidated(true);\n      fetch(Domain + \"/api/Admin/CreateFacilities/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setData({\n              Id: 0,\n              Name: \"\",\n              Link: \"\",\n              StaffId: \"\",\n              Status: \"Created\",\n              Image: \"\",\n              Description: \"\",\n            });\n            setEmpty(false);\n            showSavedNotification();\n            setSaving(false);\n          } else {\n            console.log(\"Error in insertion\");\n            setSaving(false);\n            showErrorNotification();\n          }\n        });\n    } else {\n      setValidated(false);\n    }\n    setUploaded(false);\n  }\n\n  const [TotalCount, setTotalCount] = React.useState();\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n    fetch(Domain + \"/api/Admin/GetAllFacilities/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.TotalCount > 10) {\n          console.log(\"pages\", Math.ceil(json.TotalCount / 10));\n          setTotalCount(Math.ceil(json.TotalCount / 10));\n\n          setPagination(true);\n        }\n      });\n  }, [pageIndex]);\n\n  useEffect(() => {\n    console.log(\"componentDidMount\");\n    console.log(\"Detele\" + deletee + \" edit\" + edit);\n\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Admin/GetAllFacilities/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n      });\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      setDeleting(true);\n      fetch(Domain + \"/api/Admin/DeleteFacilities/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passDelete),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setDelete([]);\n            showDeletedNotification();\n            setDeleting(false);\n          }\n        });\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Admin/GetFacilitiesById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit([]);\n            setData(json.Data);\n            console.log(json.Data);\n          }\n        });\n    }\n  }, [deletee, edit, saved]);\n\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Facilities Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Facilities Deleted Successfully\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Error! Please Try Again\"\n        open={errors}\n        closeNotification={() => setError(false)}\n        close\n      />\n      <LoadingOverlay active={saving} spinner text=\"Saving Please wait...\">\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <Card>\n              <form>\n                <CardHeader color=\"info\">\n                  <h4 className={classes.cardTitleWhite}>Add New Facilities</h4>\n                  <p className={classes.cardCategoryWhite}>\n                    Enter the Facilities details below and hit Save\n                  </p>\n                </CardHeader>\n\n                <CardBody>\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={5}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Name}\n                        labelText=\"Name\"\n                        id=\"Name\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={3}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Link}\n                        labelText=\"Link\"\n                        id=\"Link\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={3}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.StaffId}\n                        labelText=\"Staff Id\"\n                        id=\"StaffId\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                  </GridContainer>\n\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Description}\n                        labelText=\"Enter a description about the facilities..\"\n                        id=\"Description\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          multiline: true,\n                          rows: 5,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={5} md={5}>\n                      {\" \"}\n                      <CustomFileInput\n                        setFiles={setFiles}\n                        saved={uploaded}\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          placeholder: \"Click here to upload an image\",\n                        }}\n                        endButton={{\n                          buttonProps: {\n                            round: true,\n                            color: \"info\",\n                            justIcon: true,\n                            filebutton: true,\n                          },\n                          icon: <AttachFile />,\n                        }}\n                      />\n                      {validated ? (\n                        <></>\n                      ) : (\n                        <Danger>Please enter all the details to save</Danger>\n                      )}\n                    </GridItem>\n                  </GridContainer>\n                </CardBody>\n                <CardFooter>\n                  <Button onClick={HandleClear} color=\"defualt\">\n                    Clear\n                  </Button>\n                  <Button onClick={UploadImage} color=\"info\">\n                    Save\n                  </Button>\n                </CardFooter>\n              </form>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      </LoadingOverlay>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>List Of All Facilities</h4>\n              <p className={classes.cardCategoryWhite}>\n                All facilities are listed below, you can delete or edit them.\n              </p>\n            </CardHeader>\n            <CardBody>\n              <LoadingOverlay active={deleting} spinner text=\"Please Wait..\">\n                {empty ? (\n                  <p>empty</p>\n                ) : (\n                  <Table\n                    tableHeaderColor=\"info\"\n                    tableHead={[\n                      \"\",\n                      \"ID\",\n                      \"Name\",\n                      \"Link\",\n                      \"StaffId\",\n                      // \"Status\",\n                      \"Image\",\n                      \"Description\",\n                      // \"Created By\",\n                      // \"Created Date\",\n                      // \"Modified By\",\n                      // \"Modified Date\",\n                      // \"Deteled By\",\n                      // \"Deleted Date\",\n                      \"Actions\",\n                    ]}\n                    tableData={Facilitiesdata}\n                    setEdit={setEdit}\n                    setDelete={setDelete}\n                    loading={loading}\n                  />\n                )}\n              </LoadingOverlay>\n            </CardBody>\n          </Card>\n          {pagination ? (\n            <Pagination\n              TotalCount={TotalCount}\n              setPageIndex={setPageIndex}\n              pageIndex={pageIndex}\n              className={\n                classes.textCenter + \" \" + classes.justifyContentCenter\n              }\n              pages={[\n                { text: \"Previous\" },\n                { active: true, text: \"1\" },\n\n                { text: \"Next\" },\n              ]}\n              color=\"info\"\n            />\n          ) : (\n            <></>\n          )}\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Domain } from \"Domain\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport axios from \"axios\";\nimport Danger from \"components/Typography/Danger\";\nimport LoadingOverlay from \"react-loading-overlay\";\n// import ImageUpload from \"components/CustomUpload/ImageUpload.js\";\n\nimport AttachFile from \"@material-ui/icons/AttachFile\";\nimport CustomFileInput from \"components/CustomFileInput/CustomFileInput.js\";\nimport Pagination from \"components/Pagination/Pagination\";\n// import { data } from \"./data.json\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function Management() {\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [events, setEvents] = React.useState([]);\n  const [files, setFiles] = React.useState(null);\n  const [validated, setValidated] = React.useState(true);\n  const [uploaded, setUploaded] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  const [saving, setSaving] = React.useState(false);\n\n  const Managedata = events.map((d) => ({\n    Id: d.Id,\n    Name: d.Name,\n    Post: d.Post,\n    Image: d.Image,\n    Description: d.Description,\n  }));\n\n  //Saved Notification trigger\n  const showSavedNotification = () => {\n    if (!saved) {\n      setSaved(true);\n      setTimeout(function () {\n        setSaved(false);\n      }, 3000);\n    }\n  };\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n  //Form Data\n  const [data, setData] = React.useState({\n    Id: 0,\n    Name: \"\",\n    Post: \"\",\n    Image: \"1\",\n    Status: \"Created\",\n    Description: \"\",\n  });\n\n  //PassData for getAll API\n  let passData = {\n    PageIndex: 0,\n    PageSize: 10,\n  };\n\n  //PaddData for Delete a Row\n  let passDelete = {\n    Id: deletee,\n    DeletedBy: 2,\n  };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n  //Function to handle Data input\n  function HandleData(e) {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n  function HandleClear() {\n    setData({\n      Id: 0,\n      Name: \"\",\n      Post: \"\",\n      Image: \"\",\n      Status: \"Created\",\n      Description: \"\",\n    });\n  }\n  //Function for Validating fields\n  function ValidateFields() {\n    if (data.Name == \"\") {\n      return false;\n    } else if (data.Post == \"\") {\n      return false;\n    } else if (data.Image == \"\") {\n      return false;\n    } else if (data.Description == \"\") {\n      return false;\n    } else return true;\n  }\n  //function to upload\n  function UploadImage() {\n    if (files != null) {\n      setValidated(true);\n      setSaving(true);\n      let form_data = new FormData();\n      form_data.append(\"File\", files[0]);\n      let url = Domain + \"/api/Uploads/File/\";\n      axios\n        .post(url, form_data, {\n          headers: {\n            \"content-type\": \"multipart/form-data\",\n          },\n        })\n        .then((res) => {\n          if (res.data.Success) {\n            data.Image = res.data.Data[0];\n            setUploaded(true);\n            HandleSave();\n          } else {\n            setUploaded(false);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setUploaded(false);\n        });\n    } else if (data.Image != \"\") HandleSave();\n    else setValidated(false);\n  }\n\n  //Function to save Data\n  function HandleSave() {\n    if (ValidateFields()) {\n      setValidated(true);\n      fetch(Domain + \"/api/Admin/CreateManagement/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setData({\n              Id: 0,\n              Name: \"\",\n              Post: \"\",\n              Image: \"1\",\n              Status: \"Created\",\n              Description: \"\",\n            });\n            setEmpty(false);\n            showSavedNotification();\n            setSaving(false);\n          } else {\n            console.log(\"Error in insertion\");\n            setSaving(false);\n          }\n        });\n    } else {\n      setValidated(false);\n    }\n    setUploaded(false);\n  }\n\n  const [TotalCount, setTotalCount] = React.useState();\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n    fetch(Domain + \"/api/Admin/GetAllManagement/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.TotalCount > 10) {\n          console.log(\"pages\", Math.ceil(json.TotalCount / 10));\n          setTotalCount(Math.ceil(json.TotalCount / 10));\n\n          setPagination(true);\n        }\n      });\n  }, [pageIndex]);\n\n  useEffect(() => {\n    console.log(\"componentDidMount\");\n    console.log(\"Detele\" + deletee + \" edit\" + edit);\n\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Admin/GetAllManagement/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n      });\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      setDeleting(true);\n      fetch(Domain + \"/api/Admin/DeleteManagement/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passDelete),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setDelete([]);\n            showDeletedNotification();\n            setDeleting(false);\n          }\n        });\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Admin/GetManagementById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit([]);\n            setData(json.Data);\n            console.log(json.Data);\n          }\n        });\n    }\n  }, [deletee, edit, saved]);\n\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Management Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Management Deleted Successfully\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n      <LoadingOverlay active={saving} spinner text=\"Saving Please Wait..\">\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <Card>\n              <form>\n                <CardHeader color=\"info\">\n                  <h4 className={classes.cardTitleWhite}>Add New Management</h4>\n                  <p className={classes.cardCategoryWhite}>\n                    Enter the Management details below and hit Save\n                  </p>\n                </CardHeader>\n\n                <CardBody>\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Name}\n                        labelText=\"Name\"\n                        id=\"Name\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Post}\n                        labelText=\"Post\"\n                        id=\"Post\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                  </GridContainer>\n\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={6}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Description}\n                        labelText=\"Enter a description about the management..\"\n                        id=\"Description\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          multiline: true,\n                          rows: 5,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={5} md={5}>\n                      {\" \"}\n                      <CustomFileInput\n                        setFiles={setFiles}\n                        saved={uploaded}\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          placeholder: \"Click here to upload an image\",\n                        }}\n                        endButton={{\n                          buttonProps: {\n                            round: true,\n                            color: \"info\",\n                            justIcon: true,\n                            filebutton: true,\n                          },\n                          icon: <AttachFile />,\n                        }}\n                      />\n                      {validated ? (\n                        <></>\n                      ) : (\n                        <Danger>Please enter all the details to save</Danger>\n                      )}\n                    </GridItem>\n                  </GridContainer>\n                </CardBody>\n                <CardFooter>\n                  <Button onClick={HandleClear} color=\"defualt\">\n                    Clear\n                  </Button>\n                  <Button onClick={UploadImage} color=\"info\">\n                    Save\n                  </Button>\n                </CardFooter>\n              </form>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      </LoadingOverlay>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>\n                List Of All Managements\n              </h4>\n              <p className={classes.cardCategoryWhite}>\n                All managements are listed below, you can delete or edit them.\n              </p>\n            </CardHeader>\n            <CardBody>\n              <LoadingOverlay active={deleting} spinner text=\"Please Wait..\">\n                {empty ? (\n                  <p>empty</p>\n                ) : (\n                  <Table\n                    tableHeaderColor=\"info\"\n                    tableHead={[\n                      \"\",\n                      \"Id\",\n                      \"Name\",\n                      \"Post\",\n                      // \"Status\",\n                      \"Image\",\n                      \"Description\",\n                      // \"Created By\",\n                      // \"Created Date\",\n                      // \"Modified By\",\n                      // \"Modified Date\",\n                      // \"Deteled By\",\n                      // \"Deleted Date\",\n                      \"Actions\",\n                    ]}\n                    tableData={Managedata}\n                    setEdit={setEdit}\n                    setDelete={setDelete}\n                    loading={loading}\n                  />\n                )}\n              </LoadingOverlay>\n            </CardBody>\n          </Card>\n          {pagination ? (\n            <Pagination\n              TotalCount={TotalCount}\n              setPageIndex={setPageIndex}\n              pageIndex={pageIndex}\n              className={\n                classes.textCenter + \" \" + classes.justifyContentCenter\n              }\n              pages={[\n                { text: \"Previous\" },\n                { active: true, text: \"1\" },\n\n                { text: \"Next\" },\n              ]}\n              color=\"info\"\n            />\n          ) : (\n            <></>\n          )}\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Domain } from \"Domain\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport axios from \"axios\";\nimport Danger from \"components/Typography/Danger\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport Pagination from \"components/Pagination/Pagination\";\n// import ImageUpload from \"components/CustomUpload/ImageUpload.js\";\n\nimport AttachFile from \"@material-ui/icons/AttachFile\";\nimport CustomFileInput from \"components/CustomFileInput/CustomFileInput.js\";\nimport SingleSelect from \"components/SingleSelect\";\nimport EmptyTable from \"components/EmptyTable\";\n\n// import { data } from \"./data.json\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardCategoryGrey: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgb(128,128,128)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n      fontWeight: \"500\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardStyle: {\n    padding: \"10px\",\n    paddingRight: \"0\",\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function Staffs() {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    document.body.scrollTop = 0;\n  });\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [events, setEvents] = React.useState([]);\n  const [files, setFiles] = React.useState(null);\n  const [validated, setValidated] = React.useState(true);\n  const [uploaded, setUploaded] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  const [departments, setDepartments] = React.useState([]);\n  const [TotalCount, setTotalCount] = React.useState();\n  const [Courses, setCourses] = React.useState([]);\n  const [AddStaff, setAddStaff] = React.useState(false);\n  // const [ViewStaff, setViewStaff] = React.useState(false);\n  const StaffData = events.map((d) => ({\n    Id: d.Id,\n    FullName: d.FullName,\n    Qualifications: d.Qualifications,\n    Mobile: d.Mobile,\n    UserType: d.UserType,\n    Email: d.Email,\n    Password: d.Password,\n    HouseName: d.HouseName,\n    City: d.City,\n    DepartmentName: d.DepartmentName,\n    CourseName: d.CourseName,\n    Image: d.Image,\n  }));\n\n  const CourseList = Courses.map((d) => ({\n    value: d.Id,\n    label: d.CourseName,\n  }));\n  const [CourseValues, setCourseValues] = React.useState({\n    Id: null,\n    label: \"\",\n  });\n  const [departmentValues, setDepartmentValues] = React.useState({\n    Id: null,\n    Label: \"\",\n  });\n  const [usertype, setUsertype] = React.useState({\n    Id: null,\n    Label: \"\",\n  });\n  const departmentList = departments.map((d) => ({\n    value: d.Id,\n    label: d.DepartmentName,\n  }));\n  const usertypeList = [\n    { value: 1, label: \"HOD\" },\n    { value: 2, label: \"Staff\" },\n  ];\n\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n\n  useEffect(() => {\n    let passData2 = {\n      PageIndex: 0,\n      PageSize: 0,\n    };\n    //API call for get all course names to dropedown\n    fetch(Domain + \"/api/Admin/GetAllCourses/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData2),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        if (json.Data.length != 0) setCourses(json.Data);\n      });\n  }, []);\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n    fetch(Domain + \"/api/Staff/GetAllStaffs/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        console.log(\"faculties: \", json);\n        setEvents(json.Data);\n\n        if (json.TotalCount > 10) {\n          console.log(\"pages\", Math.ceil(json.TotalCount / 10));\n          setTotalCount(Math.ceil(json.TotalCount / 10));\n\n          setPagination(true);\n        }\n      });\n  }, [pageIndex]);\n\n  console.log(departments);\n  //Saved Notification trigger\n  const showSavedNotification = () => {\n    if (!saved) {\n      setSaved(true);\n      setTimeout(function () {\n        setSaved(false);\n      }, 3000);\n    }\n  };\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n  //Form Data\n  const [data, setData] = React.useState({\n    Id: 0,\n    DepartmentId: \"\",\n    DepartmentName: \"\",\n    CourseId: \"\",\n    CourseName: \"\",\n    FullName: \"\",\n    Mobile: \"\",\n    Email: \"\",\n    Gender: \"\",\n    DOB: \"\",\n    Password: \"\",\n    Qualifications: \"\",\n    AreaOfInterest: \"\",\n    Achievements: \"\",\n    Status: \"\",\n    AddressType: \"\",\n    Country: \"\",\n    State: \"\",\n    District: \"\",\n    City: \"\",\n    Street: \"\",\n    HouseName: \"\",\n    PostOffice: \"\",\n    PostalCode: \"\",\n    UserType: \"\",\n    Image: \"\",\n  });\n\n  //PassData for getAll API\n  let passData = {\n    PageIndex: 0,\n    PageSize: 10,\n  };\n  let passData1 = {\n    PageIndex: 0,\n    PageSize: 0,\n  };\n  //PaddData for Delete a Row\n  let passDelete = {\n    Id: deletee,\n    DeletedBy: 2,\n  };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n  //Function to handle Data input\n  function HandleData(e) {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n  function HandleClear() {\n    setData({\n      Id: 0,\n      DepartmentId: \"\",\n      DepartmentName: \"\",\n      FullName: \"\",\n      Mobile: \"\",\n      Email: \"\",\n      Gender: \"\",\n      DOB: \"\",\n      Password: \"\",\n      Qualifications: \"\",\n      AreaOfInterest: \"\",\n      Achievements: \"\",\n      Status: \"\",\n      AddressType: \"\",\n      Country: \"\",\n      State: \"\",\n      District: \"\",\n      City: \"\",\n      Street: \"\",\n      HouseName: \"\",\n      PostOffice: \"\",\n      PostalCode: \"\",\n      UserType: \"\",\n      Image: \"\",\n    });\n  }\n  //Function for Validating fields\n  function ValidateFields() {\n    if (data.DepartmentId == \"\") {\n      return false;\n    } else if (data.DepartmentName == \"\") {\n      return false;\n    } else if (data.CourseName == \"\") {\n      return false;\n    } else if (data.FullName == \"\") {\n      return false;\n    } else if (data.Mobile == \"\") {\n      return false;\n    } else if (data.Email == \"\") {\n      return false;\n    } else if (data.Gender == \"\") {\n      return false;\n    } else if (data.DOB == \"\") {\n      return false;\n    } else if (data.Password == \"\") {\n      return false;\n    } else if (data.Qualifications == \"\") {\n      return false;\n    } else if (data.AreaOfInterest == \"\") {\n      return false;\n    } else if (data.Achievements == \"\") {\n      return false;\n    } else if (data.AddressType == \"\") {\n      return false;\n    } else if (data.Country == \"\") {\n      return false;\n    } else if (data.State == \"\") {\n      return false;\n    } else if (data.District == \"\") {\n      return false;\n    } else if (data.City == \"\") {\n      return false;\n    } else if (data.Street == \"\") {\n      return false;\n    } else if (data.HouseName == \"\") {\n      return false;\n    } else if (data.PostOffice == \"\") {\n      return false;\n    } else if (data.PostalCode == \"\") {\n      return false;\n    } else if (data.UserType == \"\") {\n      return false;\n    } else if (data.Image == \"\") {\n      return false;\n    } else return true;\n  }\n  //function to upload\n  function UploadImage() {\n    if (files != null) {\n      setValidated(true);\n      let form_data = new FormData();\n      form_data.append(\"File\", files[0]);\n      let url = Domain + \"/api/Uploads/File/\";\n      axios\n        .post(url, form_data, {\n          headers: {\n            \"content-type\": \"multipart/form-data\",\n          },\n        })\n        .then((res) => {\n          if (res.data.Success) {\n            data.Image = res.data.Data[0];\n            setUploaded(true);\n            HandleSave();\n          } else {\n            setUploaded(false);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setUploaded(false);\n        });\n    } else if (data.Image != \"\") HandleSave();\n    else setValidated(false);\n  }\n\n  //Function to save Data\n  function HandleSave() {\n    if (ValidateFields()) {\n      setValidated(true);\n      fetch(Domain + \"/api/Staff/CreateStaff/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          console.log(json);\n          if (json.Success) {\n            setData({\n              Id: 0,\n              DepartmentId: \"\",\n              DepartmentName: \"\",\n              FullName: \"\",\n              Mobile: \"\",\n              Email: \"\",\n              Gender: \"\",\n              DOB: \"\",\n              Password: \"\",\n              Qualifications: \"\",\n              AreaOfInterest: \"\",\n              Achievements: \"\",\n              Status: \"\",\n              AddressType: \"\",\n              Country: \"\",\n              State: \"\",\n              District: \"\",\n              City: \"\",\n              Street: \"\",\n              HouseName: \"\",\n              PostOffice: \"\",\n              PostalCode: \"\",\n              UserType: \"\",\n              Image: \"\",\n            });\n            setAddStaff(false);\n            setEmpty(false);\n            showSavedNotification();\n          } else {\n            console.log(\"Error in insertion\", json);\n          }\n        });\n    } else {\n      setValidated(false);\n    }\n    setUploaded(false);\n  }\n  useEffect(() => {\n    setData((data) => ({\n      ...data,\n      CourseId: CourseValues.Id,\n      CourseName: CourseValues.Label,\n    }));\n  }, [CourseValues.Id]);\n  //==============================UseEffect=================================================\n  useEffect(() => {\n    setData((data) => ({\n      ...data,\n      DepartmentId: departmentValues.Id,\n      DepartmentName: departmentValues.Label,\n      UserType: usertype.Label,\n    }));\n    // console.log(\"data:\", data);\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Admin/GetAllDepartments/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData1),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setDepartments(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n      });\n\n    // useEffect(() => {\n    // let passData = {\n    //   PageIndex: pageIndex,\n    //   PageSize: 10,\n    // };\n\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Staff/GetAllStaffs/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        console.log(\"StaffData:\", json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n      });\n    // if (json.Data.length > 10) setPagination(true);\n    // // if (json.Data.length == 0) setEmpty(true);\n    // setLoading(false);\n    // });\n    // }, [pageIndex]);\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      setDeleting(true);\n      fetch(Domain + \"/api/Staff/DeleteStaffs/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passDelete),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setDelete([]);\n            showDeletedNotification();\n            setDeleting(false);\n          }\n        });\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Staff/GetStaffById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit([]);\n            setData(json.Data);\n            setAddStaff(true);\n            console.log(json.Data);\n          }\n        });\n    }\n  }, [deletee, edit, saved, departmentValues.Id, usertype.Id]);\n\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Staff Details Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Staff Details Deleted Successfully\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n      {AddStaff ? (\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <Card>\n              <form>\n                <CardHeader color=\"info\">\n                  <h4 className={classes.cardTitleWhite}>Staff Details</h4>\n                  <p className={classes.cardCategoryWhite}>Details</p>\n                </CardHeader>\n\n                <CardBody>\n                  <Card className={classes.cardStyle}>\n                    <p className={classes.cardCategoryGrey}>\n                      Department Details\n                    </p>\n                    <br />\n                    <GridContainer>\n                      <GridItem xs={12} sm={12} md={4}>\n                        <SingleSelect\n                          noOptionMessage=\"Create Department Details first\"\n                          placeholder=\"Select Department\"\n                          Options={departmentList}\n                          setValue={setDepartmentValues}\n                          formControlProps={{\n                            fullWidth: true,\n                          }}\n                        />\n                      </GridItem>\n                      <GridItem xs={12} sm={12} md={4}>\n                        <SingleSelect\n                          noOptionsMessage=\"Create any course first\"\n                          placeholder=\"Select Course\"\n                          Options={CourseList}\n                          setValue={setCourseValues}\n                          formControlProps={{\n                            fullWidth: true,\n                          }}\n                        />\n                      </GridItem>\n                    </GridContainer>\n                  </Card>\n                  <Card className={classes.cardStyle}>\n                    <p className={classes.cardCategoryGrey}>Login Details</p>\n\n                    <GridContainer>\n                      <GridItem xs={12} sm={12} md={6}>\n                        <SingleSelect\n                          placeholder=\"Select UserType\"\n                          Options={usertypeList}\n                          setValue={setUsertype}\n                          formControlProps={{\n                            fullWidth: true,\n                          }}\n                        />\n                      </GridItem>\n                      <GridItem xs={12} sm={12} md={6}>\n                        <CustomInput\n                          onChange={(e) => HandleData(e)}\n                          value={data.FullName}\n                          labelText=\"Full Name\"\n                          id=\"FullName\"\n                          formControlProps={{\n                            fullWidth: true,\n                          }}\n                        />\n                      </GridItem>\n                      <GridItem xs={12} sm={12} md={4}>\n                        <CustomInput\n                          onChange={(e) => HandleData(e)}\n                          value={data.Mobile}\n                          labelText=\"Mobile\"\n                          id=\"Mobile\"\n                          formControlProps={{\n                            fullWidth: true,\n                          }}\n                        />\n                      </GridItem>\n                      <GridItem xs={12} sm={12} md={4}>\n                        <CustomInput\n                          onChange={(e) => HandleData(e)}\n                          value={data.Email}\n                          labelText=\"Email\"\n                          id=\"Email\"\n                          formControlProps={{\n                            fullWidth: true,\n                          }}\n                        />\n                      </GridItem>\n                      <GridItem xs={12} sm={12} md={4}>\n                        <CustomInput\n                          type=\"password\"\n                          onChange={(e) => HandleData(e)}\n                          value={data.Password}\n                          labelText=\"Password\"\n                          id=\"Password\"\n                          formControlProps={{\n                            fullWidth: true,\n                          }}\n                        />\n                      </GridItem>\n                    </GridContainer>\n                  </Card>\n                  <p className={classes.cardCategoryGrey}>Personal Details</p>\n\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Gender}\n                        labelText=\"Gender\"\n                        id=\"Gender\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.DOB}\n                        labelText=\"DOB\"\n                        id=\"DOB\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Qualifications}\n                        labelText=\"Qualifications\"\n                        id=\"Qualifications\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.AreaOfInterest}\n                        labelText=\"AreaOfInterest\"\n                        id=\"AreaOfInterest\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Achievements}\n                        labelText=\"Achievements\"\n                        id=\"Achievements\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.AddressType}\n                        labelText=\"AddressType\"\n                        id=\"AddressType\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Country}\n                        labelText=\"Country\"\n                        id=\"Country\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.State}\n                        labelText=\"State\"\n                        id=\"State\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.District}\n                        labelText=\"District\"\n                        id=\"District\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.City}\n                        labelText=\"City\"\n                        id=\"City\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.Street}\n                        labelText=\"Street\"\n                        id=\"Street\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.HouseName}\n                        labelText=\"HouseName\"\n                        id=\"HouseName\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.PostOffice}\n                        labelText=\"PostOffice\"\n                        id=\"PostOffice\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput\n                        onChange={(e) => HandleData(e)}\n                        value={data.PostalCode}\n                        labelText=\"PostalCode\"\n                        id=\"PostalCode\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n\n                    <GridItem xs={12} sm={5} md={4}>\n                      {\" \"}\n                      <CustomFileInput\n                        setFiles={setFiles}\n                        saved={uploaded}\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                        inputProps={{\n                          placeholder: \"Click here to upload an image\",\n                        }}\n                        endButton={{\n                          buttonProps: {\n                            round: true,\n                            color: \"info\",\n                            justIcon: true,\n                          },\n                          icon: <AttachFile />,\n                        }}\n                      />\n                      {validated ? (\n                        <></>\n                      ) : (\n                        <Danger>Please enter all the details to save</Danger>\n                      )}\n                    </GridItem>\n                  </GridContainer>\n                </CardBody>\n                <CardFooter>\n                  <Button onClick={() => setAddStaff(false)} color=\"danger\">\n                    Cancel\n                  </Button>\n\n                  <Button onClick={HandleClear}>Clear</Button>\n                  <Button onClick={UploadImage} color=\"info\">\n                    Save\n                  </Button>\n                </CardFooter>\n              </form>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      ) : (\n        <>\n          <Button onClick={() => setAddStaff(true)} color=\"info\">\n            Add New Staff\n          </Button>\n        </>\n      )}\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>List Of All Staffs</h4>\n              <p className={classes.cardCategoryWhite}>\n                All Staffss are listed below, you can delete or edit them.\n              </p>\n            </CardHeader>\n            <CardBody>\n              <LoadingOverlay active={deleting} spinner text=\"Please Wait..\">\n                {empty ? (\n                  <EmptyTable />\n                ) : (\n                  <Table\n                    tableHeaderColor=\"info\"\n                    tableHead={[\n                      \"\",\n                      \"Id\",\n                      \"FullName\",\n                      \"Qualifications\",\n                      \"Mobile\",\n                      \"UserType\",\n                      \"Email\",\n                      \"Password\",\n                      \"HouseName\",\n                      \"City\",\n                      \"DepartmentName\",\n                      \"CourseName\",\n                      \"Image\",\n                    ]}\n                    tableData={StaffData}\n                    setEdit={setEdit}\n                    setDelete={setDelete}\n                    loading={loading}\n                  />\n                )}\n              </LoadingOverlay>\n            </CardBody>\n          </Card>\n          {pagination ? (\n            <Pagination\n              TotalCount={TotalCount}\n              setPageIndex={setPageIndex}\n              pageIndex={pageIndex}\n              className={\n                classes.textCenter + \" \" + classes.justifyContentCenter\n              }\n              pages={[\n                { text: \"Previous\" },\n                { active: true, text: \"1\" },\n\n                { text: \"Next\" },\n              ]}\n              color=\"info\"\n            />\n          ) : (\n            <></>\n          )}\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/typographyStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Success(props) {\n  const classes = useStyles();\n  const { children } = props;\n  return (\n    <div className={classes.defaultFontStyle + \" \" + classes.successText}>\n      {children}\n    </div>\n  );\n}\n\nSuccess.propTypes = {\n  children: PropTypes.node,\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Domain } from \"Domain\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport Danger from \"components/Typography/Danger\";\nimport LoadingOverlay from \"react-loading-overlay\";\n// import ImageUpload from \"components/CustomUpload/ImageUpload.js\";\nimport SingleSelect from \"components/SingleSelect\";\nimport Success from \"components/Typography/Success\";\nimport Pagination from \"components/Pagination/Pagination\";\n// import { data } from \"./data.json\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function SendSMS() {\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [events, setEvents] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n  const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  const [validateFilter, setValidateFilter] = React.useState(true);\n  const [Courses, setCourses] = React.useState([]);\n  const [sizeOfArray, setSizeOfArray] = React.useState(null);\n  const CourseList = Courses.map((d) => ({\n    value: d.Id,\n    label: d.CourseName,\n  }));\n  //Filter Data\n  const [filterData, setFilterData] = React.useState({\n    PageIndex: 0,\n    PageSize: 10,\n    Year: \"\",\n    CourseId: \"\",\n  });\n  const [messageData, setMessageData] = React.useState({\n    Mobile: \"9605263417\",\n    Message: \"\",\n  });\n  const [CourseValues, setCourseValues] = React.useState({\n    Id: null,\n    label: \"\",\n  });\n  const Studentdata = events.map((d) => ({\n    Id: d.Id,\n    FullName: d.FullName,\n    RegistrationNo: d.RegistrationNo,\n    ClassNo: d.ClassNo,\n    AdmissionNo: d.AdmissionNo,\n    Mobile: d.Mobile,\n    Email: d.Email,\n    Course: d.Course,\n    CourseCode: d.CourseCode,\n    Gender: d.Gender,\n    DOB: d.DOB,\n    Password: d.Password,\n    GuardianName: d.GuardianName,\n    GuardianMobile: d.GuardianMobile,\n    GuardianRelation: d.GuardianRelation,\n    Image: d.Image,\n    CourseId: d.CourseId,\n  }));\n\n  //PassData for get all semesters and courses for dropdown\n  let passData1 = {\n    PageIndex: 0,\n    PageSize: 0,\n  };\n\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n\n  //Form Data\n  const [data, setData] = React.useState({\n    Id: 0,\n    FullName: \"\",\n    Mobile: \"\",\n    Email: \"\",\n    Gender: \"\",\n    DOB: \"\",\n    Password: \"\",\n    GuardianName: \"\",\n    GuardianMobile: \"\",\n    RegistrationNo: \"\",\n    ClassNo: \"\",\n    AdmissionNo: \"\",\n    CourseId: null,\n    Course: \"\",\n    CourseCode: \"\",\n    GuardianRelation: \"\",\n    Status: \"Created\",\n    Image: \"\",\n  });\n  console.log(data);\n  //PassData for getAll API\n  let passData = {\n    PageIndex: 0,\n    PageSize: 10,\n  };\n\n  //PaddData for Delete a Row\n  let passDelete = {\n    Id: deletee,\n    DeletedBy: 2,\n  };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n\n  function HandleFilterData(e) {\n    const newData = { ...filterData };\n    newData[e.target.id] = e.target.value;\n    setFilterData(newData);\n    console.log(newData);\n  }\n  function HandleMessageData(e) {\n    const newData = { ...messageData };\n    newData[e.target.id] = e.target.value;\n    setMessageData(newData);\n    console.log(newData);\n  }\n\n  const [TotalCount, setTotalCount] = React.useState();\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n    fetch(Domain + \"/api/Student/GetAllStudents/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.TotalCount > 10) {\n          console.log(\"pages\", Math.ceil(json.TotalCount / 10));\n          setTotalCount(Math.ceil(json.TotalCount / 10));\n\n          setPagination(true);\n        }\n      });\n  }, [pageIndex]);\n\n  useEffect(() => {\n    console.log(CourseValues);\n    setFilterData((data) => ({\n      ...data,\n      CourseId: CourseValues.Id,\n    }));\n  }, [CourseValues.Id]);\n  useEffect(() => {\n    //API call for get all course names to dropedown\n    fetch(Domain + \"/api/Admin/GetAllCourses/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData1),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        if (json.Data.length != 0) setCourses(json.Data);\n      });\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Student/GetAllStudents/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n      });\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      setDeleting(true);\n      fetch(Domain + \"/api/Student/DeleteStudent/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passDelete),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setDelete([]);\n            showDeletedNotification();\n            setDeleting(false);\n          }\n        });\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Student/GetStudentById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit([]);\n            setData(json.Data);\n\n            console.log(json.Data);\n          }\n        });\n    }\n  }, [deletee, edit, saved]);\n  function HandleFilter() {\n    console.log(filterData);\n    if (\n      filterData.CourseId == null ||\n      filterData.CourseId == \"\" ||\n      filterData.Year == \"\"\n    )\n      setValidateFilter(false);\n    else {\n      setDeleting(true);\n      setValidateFilter(true);\n\n      //API call for get latest 10 elements\n      fetch(Domain + \"/api/Student/GetStudentsByCourseIdandDate/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(filterData),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          console.log(json);\n          setEmpty(false);\n          setEvents(json.Data);\n          setSizeOfArray(json.Data.length);\n          setFilterData({\n            PageIndex: 0,\n            PageSize: 10,\n            Year: \"\",\n            CourseId: \"\",\n          });\n          setDeleting(false);\n          if (json.Data.length == 0) setEmpty(true);\n          setLoading(false);\n        });\n    }\n  }\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Student Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Student Deleted Successfully\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <form>\n              <CardHeader color=\"info\">\n                <h4 className={classes.cardTitleWhite}>Add Reciepient List</h4>\n                <p className={classes.cardCategoryWhite}>\n                  Select the Year and Course then click search to Add reciepient\n                  list\n                </p>\n              </CardHeader>\n\n              <CardBody>\n                <GridContainer>\n                  <GridItem xs={12} sm={12} md={6}>\n                    <CustomInput\n                      onChange={(e) => HandleFilterData(e)}\n                      value={filterData.Year}\n                      labelText=\"Year\"\n                      id=\"Year\"\n                      formControlProps={{\n                        fullWidth: true,\n                      }}\n                    />\n                  </GridItem>\n                  <GridItem xs={12} sm={12} md={3}>\n                    <SingleSelect\n                      noOptionsMessage=\"Create any course first\"\n                      placeholder=\"Select Course\"\n                      Options={CourseList}\n                      setValue={setCourseValues}\n                      formControlProps={{\n                        fullWidth: true,\n                      }}\n                    />\n                  </GridItem>\n                </GridContainer>\n                {validateFilter ? (\n                  <>\n                    {sizeOfArray == null ? (\n                      <></>\n                    ) : (\n                      <>\n                        {sizeOfArray == 0 ? (\n                          <Danger>No student Found!</Danger>\n                        ) : (\n                          <Success>Found {sizeOfArray} Students</Success>\n                        )}\n                      </>\n                    )}\n                  </>\n                ) : (\n                  <Danger>Please select Year and Course</Danger>\n                )}\n              </CardBody>\n              <CardFooter>\n                <Button onClick={HandleFilter} color=\"info\">\n                  Search\n                </Button>\n              </CardFooter>\n            </form>\n          </Card>\n        </GridItem>\n      </GridContainer>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <form>\n              <CardBody>\n                <GridContainer>\n                  <GridItem xs={12} sm={12} md={6}>\n                    <CustomInput\n                      onChange={(e) => HandleMessageData(e)}\n                      value={messageData.Message}\n                      labelText=\"Enter the Message here\"\n                      id=\"Message\"\n                      formControlProps={{\n                        fullWidth: true,\n                      }}\n                      inputProps={{\n                        multiline: true,\n                        rows: 5,\n                      }}\n                    />\n                  </GridItem>\n                </GridContainer>\n              </CardBody>\n              <CardFooter>\n                <Button onClick={HandleFilter} color=\"info\">\n                  Send to ({sizeOfArray})\n                </Button>\n              </CardFooter>\n            </form>\n          </Card>\n        </GridItem>\n      </GridContainer>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>Recent Messages</h4>\n            </CardHeader>\n            <CardBody>\n              <LoadingOverlay active={deleting} spinner text=\"Please Wait..\">\n                {empty ? (\n                  <p>empty</p>\n                ) : (\n                  <Table\n                    tableHeaderColor=\"info\"\n                    tableHead={[\n                      \"\",\n                      \"Id\",\n                      \"FullName\",\n                      \"Registration No\",\n                      \"ClassNo\",\n                      \"AdmissionNo\",\n                      \"Mobile\",\n                      \"Email\",\n                      \"Course\",\n                      \"Coursecode\",\n                      \"Gender\",\n                      \"DOB\",\n                      \"Password\",\n                      \"Gur_Name\",\n                      \"Gur_Mobile\",\n                      \"Gur_Relation\",\n                      \"Image\",\n                      \"CourseId\",\n                      \"Actions\",\n                      // \"Created By\",\n                      // \"Created Date\",\n                      // \"Modified By\",\n                      // \"Modified Date\",\n                      // \"Deteled By\",\n                      // \"Deleted Date\",\n                    ]}\n                    tableData={Studentdata}\n                    setEdit={setEdit}\n                    setDelete={setDelete}\n                    loading={loading}\n                  />\n                )}\n              </LoadingOverlay>\n            </CardBody>\n          </Card>\n          {pagination ? (\n            <Pagination\n              TotalCount={TotalCount}\n              setPageIndex={setPageIndex}\n              pageIndex={pageIndex}\n              className={\n                classes.textCenter + \" \" + classes.justifyContentCenter\n              }\n              pages={[\n                { text: \"Previous\" },\n                { active: true, text: \"1\" },\n\n                { text: \"Next\" },\n              ]}\n              color=\"info\"\n            />\n          ) : (\n            <></>\n          )}\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Domain } from \"Domain\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport axios from \"axios\";\nimport Danger from \"components/Typography/Danger\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport Pagination from \"components/Pagination/Pagination\";\n// import ImageUpload from \"components/CustomUpload/ImageUpload.js\";\n\nimport AttachFile from \"@material-ui/icons/AttachFile\";\nimport CustomFileInput from \"components/CustomFileInput/CustomFileInput.js\";\nimport SingleSelect from \"components/SingleSelect\";\nimport EmptyTable from \"components/EmptyTable\";\n\n// import { data } from \"./data.json\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardCategoryGrey: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgb(128,128,128)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n      fontWeight: \"500\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardStyle: {\n    padding: \"10px\",\n    paddingRight: \"0\",\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function AdministrationPage() {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    document.body.scrollTop = 0;\n  });\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [events, setEvents] = React.useState([]);\n  const [files, setFiles] = React.useState(null);\n  const [validated, setValidated] = React.useState(true);\n  const [uploaded, setUploaded] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  const [departments, setDepartments] = React.useState([]);\n  const [TotalCount, setTotalCount] = React.useState();\n\n  const [admintypeValues, setadmintypeValues] = React.useState({\n    Id: null,\n    Label: \"\",\n  });\n\n  const admintypeList = [\n    { value: 1, label: \"Provincial Administration\" },\n    { value: 2, label: \"Local Administration\" },\n    { value: 3, label: \"Academic Administration\" },\n    { value: 4, label: \"Counseling and health service\" },\n  ];\n\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n    fetch(Domain + \"/api/Staff/GetAllAdministrations/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        console.log(\"faculties: \", json);\n        setEvents(json.Data);\n\n        if (json.TotalCount > 10) {\n          console.log(\"pages\", Math.ceil(json.TotalCount / 10));\n          setTotalCount(Math.ceil(json.TotalCount / 10));\n\n          setPagination(true);\n        }\n      });\n  }, [pageIndex]);\n\n  console.log(departments);\n  //Saved Notification trigger\n  const showSavedNotification = () => {\n    if (!saved) {\n      setSaved(true);\n      setTimeout(function () {\n        setSaved(false);\n      }, 3000);\n    }\n  };\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n  //Form Data\n  const [data, setData] = React.useState({\n    Id: 0,\n    AdminTypeId: \"\",\n    AdminType: \"\",\n    Name: \"\",\n    Position: \"\",\n    Message: \"\",\n    Image: \"\",\n  });\n\n  //PassData for getAll API\n  let passData = {\n    PageIndex: 0,\n    PageSize: 10,\n  };\n  let passData1 = {\n    PageIndex: 0,\n    PageSize: 0,\n  };\n  //PaddData for Delete a Row\n  let passDelete = {\n    Id: deletee,\n    DeletedBy: 2,\n  };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n  //Function to handle Data input\n  function HandleData(e) {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n  function HandleClear() {\n    setData({\n      Id: 0,\n      AdminTypeId: \"\",\n      AdminType: \"\",\n      Name: \"\",\n      Position: \"\",\n      Message: \"\",\n      Image: \"\",\n    });\n  }\n  //Function for Validating fields\n  function ValidateFields() {\n    if (data.AdminType == \"\") {\n      return false;\n    } else if (data.Name == \"\") {\n      return false;\n    } else if (data.Position == \"\") {\n      return false;\n    } else if (data.Message == \"\") {\n      return false;\n    } else if (data.Image == \"\") {\n      return false;\n    } else return true;\n  }\n  //function to upload\n  function UploadImage() {\n    if (files != null) {\n      setValidated(true);\n      let form_data = new FormData();\n      form_data.append(\"File\", files[0]);\n      let url = Domain + \"/api/Uploads/File/\";\n      axios\n        .post(url, form_data, {\n          headers: {\n            \"content-type\": \"multipart/form-data\",\n          },\n        })\n        .then((res) => {\n          if (res.data.Success) {\n            data.Image = res.data.Data[0];\n            setUploaded(true);\n            HandleSave();\n          } else {\n            setUploaded(false);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setUploaded(false);\n        });\n    } else if (data.Image != \"\") HandleSave();\n    else setValidated(false);\n  }\n\n  //Function to save Data\n  function HandleSave() {\n    if (ValidateFields()) {\n      setValidated(true);\n      fetch(Domain + \"/api/Staff/CreateAdministrations/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          console.log(json);\n          if (json.Success) {\n            setData({\n              Id: 0,\n              AdminTypeId: \"\",\n              AdminType: \"\",\n              Name: \"\",\n              Position: \"\",\n              Message: \"\",\n              Image: \"\",\n            });\n            setEmpty(false);\n            showSavedNotification();\n          } else {\n            setData({\n              Id: 0,\n              AdminTypeId: \"\",\n              AdminType: \"\",\n              Name: \"\",\n              Position: \"\",\n              Message: \"\",\n              Image: \"\",\n            });\n            console.log(\"Error in insertion\");\n          }\n        });\n    } else {\n      setValidated(false);\n    }\n    setUploaded(false);\n  }\n  //==============================UseEffect=================================================\n  useEffect(() => {\n    setData((data) => ({\n      ...data,\n      AdminTypeId: admintypeValues.Id,\n      AdminType: admintypeValues.Label,\n    }));\n    // console.log(\"data:\", data);\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Admin/GetAllDepartments/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData1),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setDepartments(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n      });\n\n    // useEffect(() => {\n    // let passData = {\n    //   PageIndex: pageIndex,\n    //   PageSize: 10,\n    // };\n\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Staff/GetAllAdministrationsById/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.Data.length == 0) setEmpty(true);\n        setLoading(false);\n      });\n    // if (json.Data.length > 10) setPagination(true);\n    // // if (json.Data.length == 0) setEmpty(true);\n    // setLoading(false);\n    // });\n    // }, [pageIndex]);\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      setDeleting(true);\n      fetch(Domain + \"/api/Staff/DeleteAdministrations/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passDelete),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setDelete([]);\n            showDeletedNotification();\n            setDeleting(false);\n          }\n        });\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Staff/GetAllAdministrationsById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit([]);\n            setData(json.Data);\n            console.log(json.Data);\n          }\n        });\n    }\n  }, [deletee, edit, saved, admintypeValues.Id]);\n\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Staff Details Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Staff Details Deleted Successfully\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <form>\n              <CardHeader color=\"info\">\n                <h4 className={classes.cardTitleWhite}>Add Administrations</h4>\n                <p className={classes.cardCategoryWhite}>Enter the Details</p>\n              </CardHeader>\n\n              <CardBody>\n                <Card className={classes.cardStyle}>\n                  <p className={classes.cardCategoryGrey}>\n                    Administration Type\n                  </p>\n                  <br />\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <SingleSelect\n                        noOptionMessage=\"Empty\"\n                        placeholder=\"Select Type\"\n                        Options={admintypeList}\n                        setValue={setadmintypeValues}\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                  </GridContainer>\n                </Card>\n\n                <p className={classes.cardCategoryGrey}>Other Details</p>\n\n                <GridContainer>\n                  <GridItem xs={12} sm={12} md={6}>\n                    <CustomInput\n                      onChange={(e) => HandleData(e)}\n                      value={data.Name}\n                      labelText=\"Name\"\n                      id=\"Name\"\n                      formControlProps={{\n                        fullWidth: true,\n                      }}\n                    />\n                  </GridItem>\n                  <GridItem xs={12} sm={12} md={6}>\n                    <CustomInput\n                      onChange={(e) => HandleData(e)}\n                      value={data.Position}\n                      labelText=\"Position\"\n                      id=\"Position\"\n                      formControlProps={{\n                        fullWidth: true,\n                      }}\n                    />\n                  </GridItem>\n\n                  <GridItem xs={12} sm={12} md={6}>\n                    <CustomInput\n                      onChange={(e) => HandleData(e)}\n                      value={data.Message}\n                      labelText=\"Message..\"\n                      id=\"Message\"\n                      formControlProps={{\n                        fullWidth: true,\n                      }}\n                      inputProps={{\n                        multiline: true,\n                        rows: 5,\n                      }}\n                    />\n                  </GridItem>\n                  <GridItem xs={12} sm={5} md={6}>\n                    {\" \"}\n                    <CustomFileInput\n                      setFiles={setFiles}\n                      saved={uploaded}\n                      formControlProps={{\n                        fullWidth: true,\n                      }}\n                      inputProps={{\n                        placeholder: \"Click here to upload an image\",\n                      }}\n                      endButton={{\n                        buttonProps: {\n                          round: true,\n                          color: \"info\",\n                          justIcon: true,\n                        },\n                        icon: <AttachFile />,\n                      }}\n                    />\n                    {validated ? (\n                      <></>\n                    ) : (\n                      <Danger>Please enter all the details to save</Danger>\n                    )}\n                  </GridItem>\n                </GridContainer>\n              </CardBody>\n              <CardFooter>\n                <Button onClick={HandleClear}>Clear</Button>\n                <Button onClick={UploadImage} color=\"info\">\n                  Save\n                </Button>\n              </CardFooter>\n            </form>\n          </Card>\n        </GridItem>\n      </GridContainer>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>\n                List Of All Administration Members\n              </h4>\n              <p className={classes.cardCategoryWhite}>\n                All Entries are listed below, you can delete or edit them.\n              </p>\n            </CardHeader>\n            <CardBody>\n              <LoadingOverlay active={deleting} spinner text=\"Please Wait..\">\n                {empty ? (\n                  <EmptyTable />\n                ) : (\n                  <Table\n                    tableHeaderColor=\"info\"\n                    tableHead={[\n                      \"\",\n                      \"Id\",\n                      \"Name\",\n                      \"Administration Type\",\n                      \"Position\",\n                      \"Message\",\n                      \"Image\",\n                      \"Actions\",\n                    ]}\n                    tableData={events}\n                    setEdit={setEdit}\n                    setDelete={setDelete}\n                    loading={loading}\n                  />\n                )}\n              </LoadingOverlay>\n            </CardBody>\n          </Card>\n          {pagination ? (\n            <Pagination\n              TotalCount={TotalCount}\n              setPageIndex={setPageIndex}\n              pageIndex={pageIndex}\n              className={\n                classes.textCenter + \" \" + classes.justifyContentCenter\n              }\n              pages={[\n                { text: \"Previous\" },\n                { active: true, text: \"1\" },\n\n                { text: \"Next\" },\n              ]}\n              color=\"info\"\n            />\n          ) : (\n            <></>\n          )}\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\n","// @material-ui/icons\nimport Dashboard from \"@material-ui/icons/Dashboard\";\nimport Notifications from \"@material-ui/icons/Notifications\";\nimport ViewCarouselIcon from \"@material-ui/icons/ViewCarousel\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport CommentIcon from \"@material-ui/icons/Comment\";\nimport PhotoLibraryIcon from \"@material-ui/icons/PhotoLibrary\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport ListIcon from \"@material-ui/icons/List\";\nimport MenuBookIcon from \"@material-ui/icons/MenuBook\";\nimport SupervisedUserCircleIcon from \"@material-ui/icons/SupervisedUserCircle\";\nimport CalendarViewDayIcon from \"@material-ui/icons/CalendarViewDay\";\nimport BusinessIcon from \"@material-ui/icons/Business\";\nimport BusinessCenterIcon from \"@material-ui/icons/BusinessCenter\";\nimport LibraryBooksIcon from \"@material-ui/icons/LibraryBooks\";\nimport VerticalSplitIcon from \"@material-ui/icons/VerticalSplit\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport ClearAllIcon from \"@material-ui/icons/ClearAll\";\nimport MailIcon from \"@material-ui/icons/Mail\";\n// core components/views for Admin layout\nimport DashboardPage from \"views/Dashboard/Dashboard.js\";\nimport Slideshow from \"views/Slideshow/Slideshow\";\nimport Events from \"views/Events/Events\";\nimport Gallery from \"views/Gallery/Gallery\";\nimport Courses from \"views/Courses/Courses\";\nimport Testimonials from \"views/Testimonials/Testimonials\";\nimport Students from \"views/Students/Students\";\nimport Publications from \"views/Publications/Publications\";\nimport Subjects from \"views/Subjects/Subjects\";\nimport Semester from \"views/Semester/Semester\";\nimport InternalMarks from \"views/InternalMarks/InternalMarks\";\nimport InternalsNotification from \"views/InternalsNotification/InternalsNotification\";\nimport Placements from \"views/Placements/Placements\";\nimport Enquiry from \"views/Enquiry/Enquiry\";\nimport Departments from \"views/Departments/Departments\";\nimport Admin from \"views/Admin/Admin\";\nimport Admission from \"views/Admission/Admission\";\nimport Clubs from \"views/Clubs/Clubs\";\nimport Facilities from \"views/Facilities/Facilities\";\nimport Management from \"views/Management/Management\";\nimport Staffs from \"views/Sfatts/Staffs\";\nimport SendSMS from \"views/SendSMS/SendSMS\";\nimport AdministrationPage from \"views/AdministrationPage/AdministrationPage\";\n\n// core components/views for RTL layout\nconst dashboardRoutes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: Dashboard,\n    component: DashboardPage,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/admission\",\n    name: \"Admission\",\n    icon: \"content_paste\",\n    component: Admission,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/departments\",\n    name: \"Departments\",\n    icon: ClearAllIcon,\n    component: Departments,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/admin\",\n    name: \"Admin Profile\",\n    icon: LockIcon,\n    component: Admin,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/staffs\",\n    name: \"Manage Staffs\",\n    icon: PeopleIcon,\n    component: Staffs,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/slideshow\",\n    name: \"Home screen Carousel\",\n    icon: ViewCarouselIcon,\n    component: Slideshow,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/events\",\n    name: \"Events\",\n    icon: DateRangeIcon,\n    component: Events,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/testimonials\",\n    name: \"Testimonials\",\n    icon: CommentIcon,\n    component: Testimonials,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/gallery\",\n    name: \"Gallery\",\n    icon: PhotoLibraryIcon,\n    component: Gallery,\n    layout: \"/admin\",\n  },\n\n  {\n    path: \"/courses\",\n    name: \"Courses\",\n    icon: FileCopyIcon,\n    component: Courses,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/semester\",\n    name: \"Semester\",\n    icon: ListIcon,\n    component: Semester,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/subjects\",\n    name: \"Subjects\",\n    icon: MenuBookIcon,\n    component: Subjects,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/students\",\n    name: \"Students\",\n    icon: SupervisedUserCircleIcon,\n    component: Students,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/sms\",\n    name: \"Send SMS\",\n    icon: MailIcon,\n    component: SendSMS,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/clubs\",\n    name: \"Clubs\",\n    icon: CalendarViewDayIcon,\n    component: Clubs,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/facilities\",\n    name: \"Facilities\",\n    icon: BusinessIcon,\n    component: Facilities,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/Administrations\",\n    name: \"Administrations\",\n    icon: BusinessIcon,\n    component: AdministrationPage,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/management\",\n    name: \"Management\",\n    icon: BusinessCenterIcon,\n    component: Management,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/publications\",\n    name: \"Publications\",\n    icon: LibraryBooksIcon,\n    component: Publications,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/Internalsnotification\",\n    name: \"Internals Notification\",\n    icon: Notifications,\n    component: InternalsNotification,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/internals\",\n    name: \"Internal Marks\",\n    icon: VerticalSplitIcon,\n    component: InternalMarks,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/placements\",\n    name: \"Placements\",\n    icon: AssignmentIcon,\n    component: Placements,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/enquiry\",\n    name: \"Enquiry\",\n    icon: EmailIcon,\n    component: Enquiry,\n    layout: \"/admin\",\n  },\n];\n\nexport default dashboardRoutes;\n","import {\n  container,\n  defaultFont,\n  primaryColor,\n  defaultBoxShadow,\n  infoColor,\n  successColor,\n  warningColor,\n  dangerColor,\n  whiteColor,\n  grayColor,\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst headerStyle = () => ({\n  appBar: {\n    backgroundColor: \"transparent\",\n    boxShadow: \"none\",\n    borderBottom: \"0\",\n    marginBottom: \"0\",\n    position: \"absolute\",\n    width: \"100%\",\n    paddingTop: \"10px\",\n    zIndex: \"1029\",\n    color: grayColor[7],\n    border: \"0\",\n    borderRadius: \"3px\",\n    padding: \"10px 0\",\n    transition: \"all 150ms ease 0s\",\n    minHeight: \"50px\",\n    display: \"block\",\n  },\n  container: {\n    ...container,\n    minHeight: \"50px\",\n  },\n  flex: {\n    flex: 1,\n  },\n  title: {\n    ...defaultFont,\n    letterSpacing: \"unset\",\n    lineHeight: \"30px\",\n    fontSize: \"18px\",\n    borderRadius: \"3px\",\n    textTransform: \"none\",\n    color: \"inherit\",\n    margin: \"0\",\n    \"&:hover,&:focus\": {\n      background: \"transparent\",\n    },\n  },\n  appResponsive: {\n    top: \"8px\",\n  },\n  primary: {\n    backgroundColor: primaryColor[0],\n    color: whiteColor,\n    ...defaultBoxShadow,\n  },\n  info: {\n    backgroundColor: infoColor[0],\n    color: whiteColor,\n    ...defaultBoxShadow,\n  },\n  success: {\n    backgroundColor: successColor[0],\n    color: whiteColor,\n    ...defaultBoxShadow,\n  },\n  warning: {\n    backgroundColor: warningColor[0],\n    color: whiteColor,\n    ...defaultBoxShadow,\n  },\n  danger: {\n    backgroundColor: dangerColor[0],\n    color: whiteColor,\n    ...defaultBoxShadow,\n  },\n});\n\nexport default headerStyle;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Hidden from \"@material-ui/core/Hidden\";\n// @material-ui/icons\nimport Menu from \"@material-ui/icons/Menu\";\n// core components\nimport AdminNavbarLinks from \"./AdminNavbarLinks.js\";\nimport RTLNavbarLinks from \"./RTLNavbarLinks.js\";\nimport Button from \"components/CustomButtons/Button.js\";\n\n//hooks\nimport { useRouteName } from \"hooks\";\n\nimport styles from \"assets/jss/material-dashboard-react/components/headerStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Header(props) {\n  // console.log(\"setLoggedIn,navbar\", props);\n  const classes = useStyles();\n  const routeName = useRouteName();\n  const { color } = props;\n  const appBarClasses = classNames({\n    [\" \" + classes[color]]: color,\n  });\n  return (\n    <AppBar className={classes.appBar + appBarClasses}>\n      <Toolbar className={classes.container}>\n        <div className={classes.flex}>\n          {/* Here we create navbar brand, based on route name */}\n          <Button color=\"transparent\" href=\"#\" className={classes.title}>\n            {routeName}\n          </Button>\n        </div>\n        <Hidden smDown implementation=\"css\">\n          {props.rtlActive ? (\n            <RTLNavbarLinks />\n          ) : (\n            <AdminNavbarLinks setLoggedin={props.setLoggedin} />\n          )}\n        </Hidden>\n        <Hidden mdUp implementation=\"css\">\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={props.handleDrawerToggle}\n          >\n            <Menu />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nHeader.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\"]),\n  rtlActive: PropTypes.bool,\n  handleDrawerToggle: PropTypes.func,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  setLoggedin: PropTypes.any,\n};\n","import routes from \"routes\";\n\nexport const useRouteName = () => {\n  let name = \"\";\n  routes.forEach((route) => {\n    if (window.location.href.indexOf(route.layout + route.path) !== -1) {\n      name = routes.rtlActive ? route.rtlName : route.name;\n    }\n  });\n  return name;\n};\n","import {\n  defaultFont,\n  container,\n  primaryColor,\n  grayColor,\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst footerStyle = {\n  block: {\n    color: \"inherit\",\n    padding: \"15px\",\n    textTransform: \"uppercase\",\n    borderRadius: \"3px\",\n    textDecoration: \"none\",\n    position: \"relative\",\n    display: \"block\",\n    ...defaultFont,\n    fontWeight: \"500\",\n    fontSize: \"12px\",\n  },\n  left: {\n    float: \"left!important\",\n    display: \"block\",\n  },\n  right: {\n    padding: \"15px 0\",\n    margin: \"0\",\n    fontSize: \"14px\",\n    float: \"right!important\",\n  },\n  footer: {\n    bottom: \"0\",\n    borderTop: \"1px solid \" + grayColor[11],\n    padding: \"15px 0\",\n    ...defaultFont,\n  },\n  container,\n  a: {\n    color: primaryColor,\n    textDecoration: \"none\",\n    backgroundColor: \"transparent\",\n  },\n  list: {\n    marginBottom: \"0\",\n    padding: \"0\",\n    marginTop: \"0\",\n  },\n  inlineBlock: {\n    display: \"inline-block\",\n    padding: \"0px\",\n    width: \"auto\",\n  },\n};\nexport default footerStyle;\n","/*eslint-disable*/\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport List from \"@material-ui/core/List\";\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/footerStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Footer(props) {\n  const classes = useStyles();\n  return (\n    <footer className={classes.footer}>\n      <div className={classes.container}>\n        <p className={classes.right}>\n          <span>\n            &copy; {1900 + new Date().getYear()}{\" \"}\n            <a\n              href=\"http://marygiricollege.edu.in\"\n              target=\"_blank\"\n              className={classes.a}\n            >\n              Marygiri College\n            </a>\n            ,Admin Dashboard\n          </span>\n        </p>\n      </div>\n    </footer>\n  );\n}\n","import {\n  drawerWidth,\n  transition,\n  boxShadow,\n  defaultFont,\n  primaryColor,\n  primaryBoxShadow,\n  infoColor,\n  successColor,\n  warningColor,\n  dangerColor,\n  whiteColor,\n  grayColor,\n  blackColor,\n  hexToRgb,\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst sidebarStyle = (theme) => ({\n  drawerPaper: {\n    border: \"none\",\n    position: \"fixed\",\n    top: \"0\",\n    bottom: \"0\",\n    left: \"0\",\n    zIndex: \"1\",\n    ...boxShadow,\n    width: drawerWidth,\n    [theme.breakpoints.up(\"md\")]: {\n      width: drawerWidth,\n      position: \"fixed\",\n      height: \"100%\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      width: drawerWidth,\n      ...boxShadow,\n      position: \"fixed\",\n      display: \"block\",\n      top: \"0\",\n      height: \"100vh\",\n      right: \"0\",\n      left: \"auto\",\n      zIndex: \"1032\",\n      visibility: \"visible\",\n      overflowY: \"visible\",\n      borderTop: \"none\",\n      textAlign: \"left\",\n      paddingRight: \"0px\",\n      paddingLeft: \"0\",\n      transform: `translate3d(${drawerWidth}px, 0, 0)`,\n      ...transition,\n    },\n  },\n  drawerPaperRTL: {\n    [theme.breakpoints.up(\"md\")]: {\n      left: \"auto !important\",\n      right: \"0 !important\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      left: \"0  !important\",\n      right: \"auto !important\",\n    },\n  },\n  logo: {\n    position: \"relative\",\n    padding: \"15px 15px\",\n    zIndex: \"4\",\n    \"&:after\": {\n      content: '\"\"',\n      position: \"absolute\",\n      bottom: \"0\",\n\n      height: \"1px\",\n      right: \"15px\",\n      width: \"calc(100% - 30px)\",\n      backgroundColor: \"rgba(\" + hexToRgb(grayColor[6]) + \", 0.3)\",\n    },\n  },\n  logoLink: {\n    ...defaultFont,\n    textTransform: \"uppercase\",\n    padding: \"5px 0\",\n    display: \"block\",\n    fontSize: \"18px\",\n    textAlign: \"left\",\n    fontWeight: \"400\",\n    lineHeight: \"30px\",\n    textDecoration: \"none\",\n    backgroundColor: \"transparent\",\n    \"&,&:hover\": {\n      color: whiteColor,\n    },\n  },\n  logoLinkRTL: {\n    textAlign: \"right\",\n  },\n  logoImage: {\n    width: \"30px\",\n    display: \"inline-block\",\n    maxHeight: \"30px\",\n    marginLeft: \"10px\",\n    marginRight: \"15px\",\n  },\n  img: {\n    width: \"35px\",\n    top: \"22px\",\n    position: \"absolute\",\n    verticalAlign: \"middle\",\n    border: \"0\",\n  },\n  background: {\n    position: \"absolute\",\n    zIndex: \"1\",\n    height: \"100%\",\n    width: \"100%\",\n    display: \"block\",\n    top: \"0\",\n    left: \"0\",\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center center\",\n    \"&:after\": {\n      position: \"absolute\",\n      zIndex: \"3\",\n      width: \"100%\",\n      height: \"100%\",\n      content: '\"\"',\n      display: \"block\",\n      background: blackColor,\n      opacity: \".8\",\n    },\n  },\n  list: {\n    overflow: \"auto\",\n    marginTop: \"20px\",\n    paddingLeft: \"0\",\n    paddingTop: \"0\",\n    paddingBottom: \"0\",\n    marginBottom: \"0\",\n    listStyle: \"none\",\n    position: \"unset\",\n  },\n  item: {\n    position: \"relative\",\n    display: \"block\",\n    textDecoration: \"none\",\n    \"&:hover,&:focus,&:visited,&\": {\n      color: whiteColor,\n    },\n  },\n  itemLink: {\n    width: \"auto\",\n    transition: \"all 300ms linear\",\n    margin: \"10px 15px 0\",\n    borderRadius: \"3px\",\n    position: \"relative\",\n    display: \"block\",\n    padding: \"10px 15px\",\n    backgroundColor: \"transparent\",\n    ...defaultFont,\n  },\n  itemIcon: {\n    width: \"24px\",\n    height: \"30px\",\n    fontSize: \"24px\",\n    lineHeight: \"30px\",\n    float: \"left\",\n    marginRight: \"15px\",\n    textAlign: \"center\",\n    verticalAlign: \"middle\",\n    color: \"rgba(\" + hexToRgb(whiteColor) + \", 0.8)\",\n  },\n  itemIconRTL: {\n    marginRight: \"3px\",\n    marginLeft: \"15px\",\n    float: \"right\",\n  },\n  itemText: {\n    ...defaultFont,\n    margin: \"0\",\n    lineHeight: \"30px\",\n    fontSize: \"14px\",\n    color: whiteColor,\n  },\n  itemTextRTL: {\n    textAlign: \"right\",\n  },\n  whiteFont: {\n    color: whiteColor,\n  },\n  purple: {\n    backgroundColor: primaryColor[0],\n    ...primaryBoxShadow,\n    \"&:hover,&:focus\": {\n      backgroundColor: primaryColor[0],\n      ...primaryBoxShadow,\n    },\n  },\n  blue: {\n    backgroundColor: infoColor[0],\n    boxShadow:\n      \"0 12px 20px -10px rgba(\" +\n      hexToRgb(infoColor[0]) +\n      \",.28), 0 4px 20px 0 rgba(\" +\n      hexToRgb(blackColor) +\n      \",.12), 0 7px 8px -5px rgba(\" +\n      hexToRgb(infoColor[0]) +\n      \",.2)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: infoColor[0],\n      boxShadow:\n        \"0 12px 20px -10px rgba(\" +\n        hexToRgb(infoColor[0]) +\n        \",.28), 0 4px 20px 0 rgba(\" +\n        hexToRgb(blackColor) +\n        \",.12), 0 7px 8px -5px rgba(\" +\n        hexToRgb(infoColor[0]) +\n        \",.2)\",\n    },\n  },\n  green: {\n    backgroundColor: successColor[0],\n    boxShadow:\n      \"0 12px 20px -10px rgba(\" +\n      hexToRgb(successColor[0]) +\n      \",.28), 0 4px 20px 0 rgba(\" +\n      hexToRgb(blackColor) +\n      \",.12), 0 7px 8px -5px rgba(\" +\n      hexToRgb(successColor[0]) +\n      \",.2)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: successColor[0],\n      boxShadow:\n        \"0 12px 20px -10px rgba(\" +\n        hexToRgb(successColor[0]) +\n        \",.28), 0 4px 20px 0 rgba(\" +\n        hexToRgb(blackColor) +\n        \",.12), 0 7px 8px -5px rgba(\" +\n        hexToRgb(successColor[0]) +\n        \",.2)\",\n    },\n  },\n  orange: {\n    backgroundColor: warningColor[0],\n    boxShadow:\n      \"0 12px 20px -10px rgba(\" +\n      hexToRgb(warningColor[0]) +\n      \",.28), 0 4px 20px 0 rgba(\" +\n      hexToRgb(blackColor) +\n      \",.12), 0 7px 8px -5px rgba(\" +\n      hexToRgb(warningColor[0]) +\n      \",.2)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: warningColor[0],\n      boxShadow:\n        \"0 12px 20px -10px rgba(\" +\n        hexToRgb(warningColor[0]) +\n        \",.28), 0 4px 20px 0 rgba(\" +\n        hexToRgb(blackColor) +\n        \",.12), 0 7px 8px -5px rgba(\" +\n        hexToRgb(warningColor[0]) +\n        \",.2)\",\n    },\n  },\n  red: {\n    backgroundColor: dangerColor[0],\n    boxShadow:\n      \"0 12px 20px -10px rgba(\" +\n      hexToRgb(dangerColor[0]) +\n      \",.28), 0 4px 20px 0 rgba(\" +\n      hexToRgb(blackColor) +\n      \",.12), 0 7px 8px -5px rgba(\" +\n      hexToRgb(dangerColor[0]) +\n      \",.2)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: dangerColor[0],\n      boxShadow:\n        \"0 12px 20px -10px rgba(\" +\n        hexToRgb(dangerColor[0]) +\n        \",.28), 0 4px 20px 0 rgba(\" +\n        hexToRgb(blackColor) +\n        \",.12), 0 7px 8px -5px rgba(\" +\n        hexToRgb(dangerColor[0]) +\n        \",.2)\",\n    },\n  },\n  sidebarWrapper: {\n    position: \"relative\",\n    height: \"calc(100vh - 75px)\",\n    overflow: \"auto\",\n    width: \"260px\",\n    zIndex: \"4\",\n    overflowScrolling: \"touch\",\n  },\n  activePro: {\n    [theme.breakpoints.up(\"md\")]: {\n      position: \"absolute\",\n      width: \"100%\",\n      bottom: \"13px\",\n    },\n  },\n});\n\nexport default sidebarStyle;\n","/*eslint-disable*/\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { NavLink, useLocation } from \"react-router-dom\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Icon from \"@material-ui/core/Icon\";\n// core components\nimport AdminNavbarLinks from \"components/Navbars/AdminNavbarLinks.js\";\nimport RTLNavbarLinks from \"components/Navbars/RTLNavbarLinks.js\";\n\nimport styles from \"assets/jss/material-dashboard-react/components/sidebarStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Sidebar(props) {\n  const classes = useStyles();\n  let location = useLocation();\n  // verifies if routeName is the one active (in browser input)\n  function activeRoute(routeName) {\n    return location.pathname === routeName;\n  }\n  const { color, logo, image, logoText, routes, userdetails } = props;\n  // console.log(\"user details:\", userdetails);\n  var links = (\n    <List className={classes.list}>\n      {routes.map((prop, key) => {\n        var activePro = \" \";\n        var listItemClasses;\n        if (prop.path === \"/upgrade-to-pro\") {\n          activePro = classes.activePro + \" \";\n          listItemClasses = classNames({\n            [\" \" + classes[color]]: true,\n          });\n        } else {\n          listItemClasses = classNames({\n            [\" \" + classes[color]]: activeRoute(prop.layout + prop.path),\n          });\n        }\n        const whiteFontClasses = classNames({\n          [\" \" + classes.whiteFont]: activeRoute(prop.layout + prop.path),\n        });\n        return (\n          <NavLink\n            to={{\n              pathname: prop.layout + prop.path,\n              aboutProps: {\n                name: userdetails,\n              },\n            }}\n            className={activePro + classes.item}\n            activeClassName=\"active\"\n            key={key}\n          >\n            <ListItem button className={classes.itemLink + listItemClasses}>\n              {typeof prop.icon === \"string\" ? (\n                <Icon\n                  className={classNames(classes.itemIcon, whiteFontClasses, {\n                    [classes.itemIconRTL]: props.rtlActive,\n                  })}\n                >\n                  {prop.icon}\n                </Icon>\n              ) : (\n                <prop.icon\n                  className={classNames(classes.itemIcon, whiteFontClasses, {\n                    [classes.itemIconRTL]: props.rtlActive,\n                  })}\n                />\n              )}\n              <ListItemText\n                primary={props.rtlActive ? prop.rtlName : prop.name}\n                className={classNames(classes.itemText, whiteFontClasses, {\n                  [classes.itemTextRTL]: props.rtlActive,\n                })}\n                disableTypography={true}\n              />\n            </ListItem>\n          </NavLink>\n        );\n      })}\n    </List>\n  );\n  var brand = (\n    <div className={classes.logo}>\n      <a\n        href=\"/\"\n        className={classNames(classes.logoLink, {\n          [classes.logoLinkRTL]: props.rtlActive,\n        })}\n      >\n        <div className={classes.logoImage}>\n          <img src={logo} alt=\"logo\" className={classes.img} />\n        </div>\n        {logoText}\n      </a>\n    </div>\n  );\n  return (\n    <div>\n      <Hidden mdUp implementation=\"css\">\n        <Drawer\n          variant=\"temporary\"\n          anchor={props.rtlActive ? \"left\" : \"right\"}\n          open={props.open}\n          classes={{\n            paper: classNames(classes.drawerPaper, {\n              [classes.drawerPaperRTL]: props.rtlActive,\n            }),\n          }}\n          onClose={props.handleDrawerToggle}\n          ModalProps={{\n            keepMounted: true, // Better open performance on mobile.\n          }}\n        >\n          {brand}\n          <div className={classes.sidebarWrapper}>\n            {props.rtlActive ? <RTLNavbarLinks /> : <AdminNavbarLinks />}\n            {links}\n          </div>\n          {image !== undefined ? (\n            <div\n              className={classes.background}\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\n            />\n          ) : null}\n        </Drawer>\n      </Hidden>\n      <Hidden smDown implementation=\"css\">\n        <Drawer\n          anchor={props.rtlActive ? \"right\" : \"left\"}\n          variant=\"permanent\"\n          open\n          classes={{\n            paper: classNames(classes.drawerPaper, {\n              [classes.drawerPaperRTL]: props.rtlActive,\n            }),\n          }}\n        >\n          {brand}\n          <div className={classes.sidebarWrapper}>{links}</div>\n          {image !== undefined ? (\n            <div\n              className={classes.background}\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\n            />\n          ) : null}\n        </Drawer>\n      </Hidden>\n    </div>\n  );\n}\n\nSidebar.propTypes = {\n  rtlActive: PropTypes.bool,\n  handleDrawerToggle: PropTypes.func,\n  bgColor: PropTypes.oneOf([\"purple\", \"blue\", \"green\", \"orange\", \"red\"]),\n  logo: PropTypes.string,\n  image: PropTypes.string,\n  logoText: PropTypes.string,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  open: PropTypes.bool,\n};\n","import {\n  drawerWidth,\n  transition,\n  container,\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst appStyle = (theme) => ({\n  wrapper: {\n    position: \"relative\",\n    top: \"0\",\n    height: \"100vh\",\n  },\n  mainPanel: {\n    [theme.breakpoints.up(\"md\")]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n    },\n    overflow: \"auto\",\n    position: \"relative\",\n    float: \"right\",\n    ...transition,\n    maxHeight: \"100%\",\n    width: \"100%\",\n    overflowScrolling: \"touch\",\n  },\n  content: {\n    marginTop: \"70px\",\n    padding: \"30px 15px\",\n    minHeight: \"calc(100vh - 123px)\",\n  },\n  container,\n  map: {\n    marginTop: \"70px\",\n  },\n});\n\nexport default appStyle;\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n// creates a beautiful scrollbar\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Navbar from \"components/Navbars/Navbar.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\n\nimport routes from \"routes.js\";\n\nimport styles from \"assets/jss/material-dashboard-react/layouts/adminStyle.js\";\n\nimport logo from \"assets/img/favicon.png\";\n\nlet ps;\n\nconst switchRoutes = (\n  <Switch>\n    {routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      }\n      return null;\n    })}\n    <Redirect from=\"/admin\" to=\"/admin/dashboard\" />\n  </Switch>\n);\n\nconst useStyles = makeStyles(styles);\n\nexport default function Admin({ ...rest }) {\n  // styles\n  const classes = useStyles();\n  // ref to help us initialize PerfectScrollbar on windows devices\n  const mainPanel = React.createRef();\n  // states and functions\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n  // const getRoute = () => {\n  //   return window.location.pathname !== \"/admin/user\";\n  // };\n  const resizeFunction = () => {\n    if (window.innerWidth >= 960) {\n      setMobileOpen(false);\n    }\n  };\n  // initialize and destroy the PerfectScrollbar plugin\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(mainPanel.current, {\n        suppressScrollX: true,\n        suppressScrollY: false,\n      });\n      document.body.style.overflow = \"hidden\";\n    }\n    window.addEventListener(\"resize\", resizeFunction);\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n      }\n      window.removeEventListener(\"resize\", resizeFunction);\n    };\n  }, [mainPanel]);\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.mainPanel} ref={mainPanel}>\n        {/* On the /maps route we want the map to be on full screen - this is not possible if the content and conatiner classes are present because they have some paddings which would make the map smaller */}\n\n        <Sidebar\n          routes={routes}\n          logoText={\"Marygiri\"}\n          logo={logo}\n          image=\"\"\n          handleDrawerToggle={handleDrawerToggle}\n          open={mobileOpen}\n          color=\"blue\"\n          {...rest}\n        />\n        <Navbar\n          setLoggedin={rest.setLoggedin}\n          routes={routes}\n          handleDrawerToggle={handleDrawerToggle}\n          {...rest}\n        />\n        <div className={classes.content}>\n          <div className={classes.container}>{switchRoutes}</div>\n        </div>\n\n        <Footer />\n      </div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/favicon.774d483b.png\";","import React from \"react\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport { Domain } from \"Domain\";\nimport PropTypes from \"prop-types\";\n\nconst styles = {\n  cardCategoryRed: {\n    color: \"#ff0000\",\n    margin: \"0\",\n    fontSize: \"14px\",\n    marginTop: \"0\",\n    marginBottom: \"0\",\n  },\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function LoginPage({\n  setLoggedin,\n  setNotification,\n  setUserType,\n  setUserdetails,\n}) {\n  const classes = useStyles();\n  const [data, setData] = React.useState({\n    Username: \"\",\n    Password: \"\",\n  });\n  function HandleData(e) {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n  const [invalid, setInvalid] = React.useState(false);\n  function HandleSave() {\n    if (data.Username == \"\" && data.Password == \"\") {\n      setInvalid(true);\n      setLoggedin(undefined);\n    } else {\n      fetch(Domain + \"/api/Admin/AdminLogin/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          console.log(json.Data);\n          setUserdetails(json.Data);\n          setData({\n            Username: \"\",\n            Password: \"\",\n          });\n          if (json.Success) {\n            if (json.Data.Usertype == \"Admin\") setUserType(json.Data.Usertype);\n            else setUserType(json.Data.UserType);\n            setInvalid(false);\n            setLoggedin(true);\n            setNotification(true);\n          } else {\n            setInvalid(true);\n            setLoggedin(undefined);\n          }\n        });\n    }\n  }\n\n  return (\n    <>\n      <GridContainer justify=\"center\">\n        <GridItem xs={12} sm={12} md={4}>\n          <Card>\n            <form>\n              <CardHeader color=\"info\">\n                <h4 className={classes.cardTitleWhite}>Admin Login</h4>\n                <p className={classes.cardCategoryWhite}>\n                  Enter the login Credentails below\n                </p>\n              </CardHeader>\n\n              <CardBody>\n                <GridContainer justify=\"center\">\n                  <GridItem xs={12} sm={12} md={8}>\n                    <GridContainer justify=\"center\">\n                      <GridItem xs={12} sm={12} md={12}>\n                        {invalid ? (\n                          <div>\n                            <CustomInput\n                              error\n                              onChange={(e) => HandleData(e)}\n                              value={data.Username}\n                              labelText=\"User Name\"\n                              id=\"Username\"\n                              formControlProps={{\n                                fullWidth: true,\n                              }}\n                            />\n                          </div>\n                        ) : (\n                          <div>\n                            <CustomInput\n                              onChange={(e) => HandleData(e)}\n                              value={data.Username}\n                              labelText=\"User Name\"\n                              id=\"Username\"\n                              formControlProps={{\n                                fullWidth: true,\n                              }}\n                            />\n                          </div>\n                        )}\n                      </GridItem>\n                      <GridItem xs={12} sm={12} md={12}>\n                        {invalid ? (\n                          <div>\n                            <CustomInput\n                              type=\"password\"\n                              error\n                              onChange={(e) => HandleData(e)}\n                              value={data.Password}\n                              labelText=\"Password\"\n                              id=\"Password\"\n                              formControlProps={{\n                                fullWidth: true,\n                              }}\n                            />\n                          </div>\n                        ) : (\n                          <div>\n                            <CustomInput\n                              type=\"password\"\n                              onChange={(e) => HandleData(e)}\n                              value={data.Password}\n                              labelText=\"Password\"\n                              id=\"Password\"\n                              formControlProps={{\n                                fullWidth: true,\n                              }}\n                            />\n                          </div>\n                        )}\n                        {invalid ? (\n                          <p className={classes.cardCategoryRed}>\n                            Invalid Admin Credentials\n                          </p>\n                        ) : (\n                          <div></div>\n                        )}\n                      </GridItem>\n\n                      <GridItem xs={12} sm={12} md={12}>\n                        <Button onClick={HandleSave} color=\"info\">\n                          Login\n                        </Button>\n                      </GridItem>\n                    </GridContainer>\n                  </GridItem>\n                </GridContainer>\n              </CardBody>\n              <CardFooter></CardFooter>\n            </form>\n          </Card>\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\nLoginPage.propTypes = {\n  setLoggedin: PropTypes.func,\n  setNotification: PropTypes.func,\n  setUserType: PropTypes.any,\n  setUserdetails: PropTypes.any,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Snack from \"@material-ui/core/SnackbarContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\n// @material-ui/icons\nimport Close from \"@material-ui/icons/Close\";\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/snackbarContentStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function SnackbarContent(props) {\n  const classes = useStyles();\n  const { message, color, close, icon, rtlActive } = props;\n  var action = [];\n  const messageClasses = classNames({\n    [classes.iconMessage]: icon !== undefined,\n  });\n  if (close !== undefined) {\n    action = [\n      <IconButton\n        className={classes.iconButton}\n        key=\"close\"\n        aria-label=\"Close\"\n        color=\"inherit\"\n      >\n        <Close className={classes.close} />\n      </IconButton>,\n    ];\n  }\n  return (\n    <Snack\n      message={\n        <div>\n          {icon !== undefined ? <props.icon className={classes.icon} /> : null}\n          <span className={messageClasses}>{message}</span>\n        </div>\n      }\n      classes={{\n        root: classes.root + \" \" + classes[color],\n        message: classes.message,\n        action: classNames({ [classes.actionRTL]: rtlActive }),\n      }}\n      action={action}\n    />\n  );\n}\n\nSnackbarContent.propTypes = {\n  message: PropTypes.node.isRequired,\n  color: PropTypes.oneOf([\"info\", \"success\", \"warning\", \"danger\", \"primary\"]),\n  close: PropTypes.bool,\n  icon: PropTypes.object,\n  rtlActive: PropTypes.bool,\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Domain } from \"Domain\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\n\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport axios from \"axios\";\nimport Danger from \"components/Typography/Danger\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport SingleSelect from \"components/SingleSelect\";\nimport AttachFile from \"@material-ui/icons/AttachFile\";\nimport CustomFileInput from \"components/CustomFileInput/CustomFileInput.js\";\nimport Pagination from \"components/Pagination/Pagination\";\nimport SnackbarContent from \"components/Snackbar/SnackbarContent\";\nimport { Warning } from \"@material-ui/icons\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function StudentStaff() {\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [events, setEvents] = React.useState([]);\n  const [files, setFiles] = React.useState(null);\n  const [validated, setValidated] = React.useState(true);\n  const [uploaded, setUploaded] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  const [saving, setSaving] = React.useState(false);\n  const [addStudent, setAddstudent] = React.useState(false);\n  // const [validateFilter, setValidateFilter] = React.useState(true);\n  const [Courses, setCourses] = React.useState([]);\n  const [TotalCount, setTotalCount] = React.useState();\n  const [validateEmpty, setvalidateEmpty] = React.useState(true);\n  const [generating, setGenerating] = React.useState(false);\n  const [classNumber, setClassNumber] = React.useState(false);\n  const [alreadygenerated, setAllreadyGenerated] = React.useState(false);\n  // const [startDate, setStartDate] = useState(new Date());\n  const CourseList = Courses.map((d) => ({\n    value: d.Id,\n    label: d.CourseName,\n  }));\n  //Filter Data\n  let filterData = {\n    PageIndex: 0,\n    PageSize: 10,\n    Year: 2021,\n    CourseId: JSON.parse(window.localStorage.getItem(\"userdetails\")).CourseId,\n  };\n  // const [CourseValues, setCourseValues] = React.useState({\n  //   Id: null,\n  //   label: \"\",\n  // });\n  const [CourseValues1, setCourseValues1] = React.useState({\n    Id: null,\n    label: \"\",\n  });\n  const Studentdata = events.map((d) => ({\n    Id: d.Id,\n    FullName: d.FullName,\n    RegistrationNo: d.RegistrationNo,\n    ClassNo: d.ClassNo,\n    AdmissionNo: d.AdmissionNo,\n    Mobile: d.Mobile,\n    Email: d.Email,\n    Course: d.Course,\n    CourseCode: d.CourseCode,\n    Gender: d.Gender,\n    DOB: d.DOB,\n    Password: d.Password,\n    GuardianName: d.GuardianName,\n    GuardianMobile: d.GuardianMobile,\n    GuardianRelation: d.GuardianRelation,\n    Image: d.Image,\n    CourseId: d.CourseId,\n  }));\n\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n  const [TotalStudents, setTotalStudents] = React.useState(0);\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n    fetch(Domain + \"/api/Student/GetStudentsByCourseIdandDate/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n\n        if (json.TotalCount > 10) {\n          // console.log(\"pages\", Math.ceil(json.TotalCount / 10));\n          setTotalCount(Math.ceil(json.TotalCount / 10));\n\n          setPagination(true);\n        }\n      });\n  }, [pageIndex]);\n\n  //PassData for get all semesters and courses for dropdown\n  let passData1 = {\n    PageIndex: 0,\n    PageSize: 0,\n  };\n  const [generated, setGenerated] = React.useState(false);\n  function AddStudent() {\n    if (addStudent) {\n      setAddstudent(false);\n      HandleClear();\n    } else setAddstudent(true);\n  }\n  //Saved Notification trigger\n  const showSavedNotification = () => {\n    if (!saved) {\n      setSaved(true);\n      setTimeout(function () {\n        setSaved(false);\n      }, 3000);\n    }\n  };\n  //Class Number Generated Notification\n  const ShowGeneratedNotification = () => {\n    if (!saved) {\n      setGenerated(true);\n      setTimeout(function () {\n        setGenerated(false);\n      }, 3000);\n    }\n  };\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n\n  //Form Data\n  const [data, setData] = React.useState({\n    Id: 0,\n    FullName: \"\",\n    Mobile: \"\",\n    Email: \"\",\n    Gender: \"\",\n    DOB: \"\",\n    Password: \"\",\n    GuardianName: \"\",\n    GuardianMobile: \"\",\n    RegistrationNo: \"\",\n    AdmissionNo: \"\",\n    CourseId: null,\n    Course: \"\",\n    CourseCode: \"\",\n    GuardianRelation: \"\",\n    Status: \"Created\",\n    Image: \"\",\n  });\n\n  //PassData for getAll API\n  // let passData = {\n  //   PageIndex: 0,\n  //   PageSize: 10,\n  // };\n\n  //PaddData for Delete a Row\n  let passDelete = {\n    Id: deletee,\n    DeletedBy: 2,\n  };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n  //Function to handle Data input\n  function HandleData(e) {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    // console.log(newData);\n  }\n  // function HandleFilterData(e) {\n  //   const newData = { ...filterData };\n  //   newData[e.target.id] = e.target.value;\n  //   setFilterData(newData);\n  //   console.log(newData);\n  // }\n  function HandleClear() {\n    setData({\n      Id: 0,\n      FullName: \"\",\n      Mobile: \"\",\n      Email: \"\",\n      Gender: \"\",\n      DOB: \"\",\n      Password: \"\",\n      GuardianName: \"\",\n      GuardianMobile: \"\",\n      RegistrationNo: \"\",\n      AdmissionNo: \"\",\n      CourseId: \"\",\n      Course: \"\",\n      CourseCode: \"\",\n      GuardianRelation: \"\",\n      Status: \"Created\",\n      Image: \"\",\n    });\n  }\n  //Function for Validating fields\n  function ValidateFields() {\n    if (data.FullName == \"\") {\n      return false;\n    } else if (data.Mobile == \"\") {\n      return false;\n    } else if (data.Email == \"\") {\n      return false;\n    } else if (data.Gender == \"\") {\n      return false;\n    } else if (data.DOB == \"\") {\n      return false;\n    } else if (data.GuardianName == \"\") {\n      return false;\n    } else if (data.GuardianMobile == \"\") {\n      return false;\n    } else if (data.RegistrationNo == \"\") {\n      return false;\n    } else if (data.CourseId == \"\") {\n      return false;\n    } else if (data.AdmissionNo == \"\") {\n      return false;\n    } else if (data.GuardianRelation == \"\") {\n      return false;\n    } else if (data.Image == \"\") {\n      return false;\n    } else return true;\n  }\n  //function to upload\n  function UploadImage() {\n    if (files != null) {\n      setValidated(true);\n      setSaving(true);\n      let form_data = new FormData();\n      form_data.append(\"File\", files[0]);\n      let url = Domain + \"/api/Uploads/File/\";\n      axios\n        .post(url, form_data, {\n          headers: {\n            \"content-type\": \"multipart/form-data\",\n          },\n        })\n        .then((res) => {\n          if (res.data.Success) {\n            data.Image = res.data.Data[0];\n            setUploaded(true);\n            HandleSave();\n          } else {\n            setUploaded(false);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setUploaded(false);\n        });\n    } else if (data.Image != \"\") HandleSave();\n    else setValidated(false);\n  }\n\n  //Function to save Data\n  function HandleSave() {\n    if (ValidateFields()) {\n      setValidated(true);\n      fetch(Domain + \"/api/Student/CreateStudent/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          // console.log(json);\n          if (json.Success) {\n            setData({\n              Id: 0,\n              FullName: \"\",\n              Mobile: \"\",\n              Email: \"\",\n              Gender: \"\",\n              DOB: \"\",\n              Password: \"\",\n              GuardianName: \"\",\n              GuardianMobile: \"\",\n              RegistrationNo: \"\",\n              AdmissionNo: \"\",\n              CourseId: \"\",\n              Course: \"\",\n              CourseCode: \"\",\n              GuardianRelation: \"\",\n              Status: \"Created\",\n              Image: \"\",\n            });\n            setEmpty(false);\n            showSavedNotification();\n            setSaving(false);\n            setAddstudent(false);\n          } else {\n            setSaving(false);\n            console.log(\"Error in insertion\");\n          }\n        });\n    } else {\n      setValidated(false);\n      setSaving(false);\n    }\n    setUploaded(false);\n  }\n  // useEffect(() => {\n  //   console.log(CourseValues);\n  //   setFilterData((data) => ({\n  //     ...data,\n  //     CourseId: CourseValues.Id,\n  //   }));\n  // }, [CourseValues.Id]);\n\n  useEffect(() => {\n    if (CourseValues1.Id != null) {\n      let PassId = {\n        Id: CourseValues1.Id,\n      };\n      //API call to get event By ID to edit a row\n\n      fetch(Domain + \"/api/Admin/GetCoursesById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(PassId),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          console.log(json);\n\n          if (json.Success) {\n            setData((data) => ({\n              ...data,\n              CourseCode: json.Data.CourseCode,\n              CourseId: CourseValues1.Id,\n              Course: CourseValues1.Label,\n            }));\n            // console.log(json.Data);\n          }\n        });\n    }\n\n    // console.log(\"CourseValues1: \", data, CourseValues1.Id);\n  }, [CourseValues1.Id]);\n\n  useEffect(() => {\n    //API call for get all course names to dropedown\n    fetch(Domain + \"/api/Admin/GetAllCourses/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData1),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        if (json.Data.length != 0) setCourses(json.Data);\n      });\n\n    //API call for get latest 10 elements\n    fetch(Domain + \"/api/Student/GetStudentsByCourseIdandDate/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(filterData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setTotalStudents(json.TotalCount);\n        setEvents(json.Data);\n        if (json.Data.length == 0) {\n          setvalidateEmpty(false);\n          setEmpty(true);\n        }\n        setLoading(false);\n      });\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      setDeleting(true);\n      fetch(Domain + \"/api/Student/DeleteStudent/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passDelete),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setDelete([]);\n            showDeletedNotification();\n            setDeleting(false);\n          }\n        });\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Student/GetStudentById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit([]);\n            setData(json.Data);\n            setAddstudent(true);\n            // console.log(json.Data);\n          }\n        });\n    }\n  }, [deletee, edit, saved]);\n\n  // function HandleFilter() {\n  //   console.log(filterData);\n  //   if (\n  //     filterData.CourseId == null ||\n  //     filterData.CourseId == \"\" ||\n  //     filterData.Year == \"\"\n  //   )\n  //     setValidateFilter(false);\n  //   else {\n  //     setDeleting(true);\n  //     setValidateFilter(true);\n\n  //     //API call for get latest 10 elements\n  //     fetch(Domain + \"/api/Student/GetStudentsByCourseIdandDate/\", {\n  //       method: \"POST\",\n  //       headers: {\n  //         Accept: \"application/json\",\n  //         \"Content-Type\": \"application/json\",\n  //       },\n  //       body: JSON.stringify(filterData),\n  //     })\n  //       .then((response) => response.json())\n\n  //       .then((json) => {\n  //         console.log(json);\n  //         setEmpty(false);\n  //         setEvents(json.Data);\n  //         setFilterData({\n  //           PageIndex: 0,\n  //           PageSize: 10,\n  //           Year: \"\",\n  //           CourseId: \"\",\n  //         });\n  //         setDeleting(false);\n  //         if (json.Data.length == 0) setEmpty(true);\n  //         setLoading(false);\n  //       });\n  //   }\n  // }\n  function GenerateClassNumber() {\n    setGenerating(true);\n    // console.log(\n    //   \"Course ID from userDetails:\",\n    //   JSON.parse(window.localStorage.getItem(\"userdetails\")).CourseId\n    // );\n    let PassId = {\n      Id: JSON.parse(window.localStorage.getItem(\"userdetails\")).CourseId,\n    };\n    //API call to get event By ID to edit a row\n\n    fetch(Domain + \"/api/Admin/GetCoursesById/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(PassId),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        // console.log(json);\n\n        if (json.Success) {\n          // console.log(\"CourseCode from Server:\", json.Data.CourseCode);\n          let passData3 = {\n            CourseCode: json.Data.CourseCode,\n          };\n          fetch(Domain + \"/api/Staff/Generate/\", {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(passData3),\n          })\n            .then((response) => response.json())\n\n            .then((json) => {\n              console.log(json);\n              if (json.Success) {\n                setGenerating(false);\n                ShowGeneratedNotification();\n              } else {\n                setGenerating(false);\n                setAllreadyGenerated(true);\n              }\n            });\n        }\n      });\n  }\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Student Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Class Number Generated Successfully\"\n        open={generated}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Student Deleted Successfully\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n      {addStudent ? (\n        <div>\n          <LoadingOverlay active={saving} spinner text=\"Saving Please Wait..\">\n            <GridContainer>\n              <GridItem xs={12} sm={12} md={12}>\n                <Card>\n                  <form>\n                    <CardHeader color=\"info\">\n                      <h4 className={classes.cardTitleWhite}>\n                        Add New Students\n                      </h4>\n                      <p className={classes.cardCategoryWhite}>\n                        Enter the Student details below and hit Save\n                      </p>\n                    </CardHeader>\n\n                    <CardBody>\n                      <GridContainer>\n                        <GridItem xs={12} sm={12} md={4}>\n                          <CustomInput\n                            onChange={(e) => HandleData(e)}\n                            value={data.FullName}\n                            labelText=\"Full Name\"\n                            id=\"FullName\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n                        <GridItem xs={12} sm={12} md={4}>\n                          <CustomInput\n                            onChange={(e) => HandleData(e)}\n                            value={data.RegistrationNo}\n                            labelText=\"Registration No\"\n                            id=\"RegistrationNo\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n                        <GridItem xs={12} sm={12} md={4}>\n                          <SingleSelect\n                            noOptionsMessage=\"Create any course first\"\n                            placeholder=\"Select Course\"\n                            Options={CourseList}\n                            setValue={setCourseValues1}\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n                        <GridItem xs={12} sm={12} md={4}>\n                          <CustomInput\n                            disabled\n                            onChange={(e) => HandleData(e)}\n                            value={data.CourseCode}\n                            labelText=\"Course Code\"\n                            id=\"CourseCode\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n                        <GridItem xs={12} sm={12} md={4}>\n                          <CustomInput\n                            onChange={(e) => HandleData(e)}\n                            value={data.AdmissionNo}\n                            labelText=\"Admission No\"\n                            id=\"AdmissionNo\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n\n                        <GridItem xs={12} sm={12} md={4}>\n                          <CustomInput\n                            onChange={(e) => HandleData(e)}\n                            value={data.Mobile}\n                            labelText=\"Mobile\"\n                            id=\"Mobile\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n\n                        <GridItem xs={12} sm={12} md={4}>\n                          <CustomInput\n                            onChange={(e) => HandleData(e)}\n                            value={data.Email}\n                            labelText=\"Email ID\"\n                            id=\"Email\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n                        <GridItem xs={12} sm={12} md={4}>\n                          <CustomInput\n                            onChange={(e) => HandleData(e)}\n                            value={data.Gender}\n                            labelText=\"Gender\"\n                            id=\"Gender\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n                        <GridItem xs={12} sm={12} md={4}>\n                          <CustomInput\n                            onChange={(e) => HandleData(e)}\n                            value={data.DOB}\n                            labelText=\"Date Of Birth (dd/mm/yyyy)\"\n                            id=\"DOB\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n\n                        <GridItem xs={12} sm={12} md={4}>\n                          <CustomInput\n                            onChange={(e) => HandleData(e)}\n                            value={data.GuardianName}\n                            labelText=\"Guardian Name\"\n                            id=\"GuardianName\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n\n                        <GridItem xs={12} sm={12} md={4}>\n                          <CustomInput\n                            onChange={(e) => HandleData(e)}\n                            value={data.GuardianMobile}\n                            labelText=\"Guardian Mobile\"\n                            id=\"GuardianMobile\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n                        <GridItem xs={12} sm={12} md={4}>\n                          <CustomInput\n                            onChange={(e) => HandleData(e)}\n                            value={data.GuardianRelation}\n                            labelText=\"Gurdian Relation\"\n                            id=\"GuardianRelation\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n                        <GridItem xs={12} sm={5} md={4}>\n                          {\" \"}\n                          <CustomFileInput\n                            setFiles={setFiles}\n                            saved={uploaded}\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                            inputProps={{\n                              placeholder: \"Click here to upload an image\",\n                            }}\n                            endButton={{\n                              buttonProps: {\n                                round: true,\n                                color: \"info\",\n                                justIcon: true,\n                                filebutton: true,\n                              },\n                              icon: <AttachFile />,\n                            }}\n                          />\n                          {validated ? (\n                            <></>\n                          ) : (\n                            <Danger>\n                              Please enter all the details to save\n                            </Danger>\n                          )}\n                        </GridItem>\n                      </GridContainer>\n                    </CardBody>\n                    <CardFooter>\n                      <Button onClick={AddStudent} color=\"danger\">\n                        Cancel\n                      </Button>\n                      <Button onClick={HandleClear} color=\"defualt\">\n                        Clear\n                      </Button>\n                      <Button onClick={UploadImage} color=\"info\">\n                        Save\n                      </Button>\n                    </CardFooter>\n                  </form>\n                </Card>\n              </GridItem>\n            </GridContainer>\n          </LoadingOverlay>\n        </div>\n      ) : (\n        <Button onClick={AddStudent} color=\"info\">\n          Add Student\n        </Button>\n      )}\n\n      {classNumber ? (\n        <LoadingOverlay\n          active={generating}\n          spinner\n          text=\"Generating class Numbers Please Wait.\"\n        >\n          <GridContainer>\n            <GridItem xs={12} sm={12} md={12}>\n              <Card>\n                <form>\n                  <CardHeader color=\"info\">\n                    <h4 className={classes.cardTitleWhite}>\n                      Generate Class Number\n                    </h4>\n                  </CardHeader>\n\n                  <CardBody>\n                    {!alreadygenerated ? (\n                      <>\n                        {validateEmpty ? (\n                          <>\n                            <SnackbarContent\n                              message={\n                                <span>\n                                  <b>Attention! :</b>Class Number Generation is\n                                  a one-time process which you only do after\n                                  every student data is listed below.\n                                </span>\n                              }\n                              color=\"warning\"\n                              icon={Warning}\n                            />\n\n                            <b>\n                              Clicking on the below Button will Generate Class\n                              Number for <u>{TotalStudents}</u> student(s)\n                            </b>\n                            <br />\n                            <Button\n                              onClick={GenerateClassNumber}\n                              color=\"success\"\n                            >\n                              Generate Class Number\n                            </Button>\n                            <Button\n                              onClick={() => {\n                                setClassNumber(false);\n                              }}\n                              color=\"danger\"\n                            >\n                              Cancel\n                            </Button>\n                          </>\n                        ) : (\n                          <Danger>No Student Data found!</Danger>\n                        )}\n                      </>\n                    ) : (\n                      <>\n                        <SnackbarContent\n                          message={\n                            <span>\n                              <b>Allready Generated! :</b>Class Number\n                              Generation is a one-time process which you already\n                              done once!\n                            </span>\n                          }\n                          color=\"warning\"\n                          icon={Warning}\n                        />\n                      </>\n                    )}\n                  </CardBody>\n                  <CardFooter></CardFooter>\n                </form>\n              </Card>\n            </GridItem>\n          </GridContainer>\n        </LoadingOverlay>\n      ) : (\n        <>\n          {\" \"}\n          <Button\n            onClick={() => {\n              setClassNumber(true);\n            }}\n            color=\"info\"\n          >\n            Generate Class Number\n          </Button>\n        </>\n      )}\n\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>List Of All Students</h4>\n              <p className={classes.cardCategoryWhite}>\n                All students are listed below, you can delete or edit them.\n              </p>\n            </CardHeader>\n            <CardBody>\n              <LoadingOverlay active={deleting} spinner text=\"Please Wait..\">\n                {empty ? (\n                  <p>empty</p>\n                ) : (\n                  <Table\n                    tableHeaderColor=\"info\"\n                    tableHead={[\n                      \"\",\n                      \"Id\",\n                      \"Full Name\",\n                      \"Registration No\",\n                      \"Class Number\",\n                      \"Admission Number\",\n                      \"Mobile\",\n                      \"Email\",\n                      \"Course\",\n                      \"Course code\",\n                      \"Gender\",\n                      \"DOB\",\n                      \"Password\",\n                      \"Gur_Name\",\n                      \"Gur_Mobile\",\n                      \"Gur_Relation\",\n                      \"Image\",\n                      \"CourseId\",\n                      \"Actions\",\n                      // \"Created By\",\n                      // \"Created Date\",\n                      // \"Modified By\",\n                      // \"Modified Date\",\n                      // \"Deteled By\",\n                      // \"Deleted Date\",\n                    ]}\n                    tableData={Studentdata}\n                    setEdit={setEdit}\n                    setDelete={setDelete}\n                    loading={loading}\n                  />\n                )}\n              </LoadingOverlay>\n            </CardBody>\n          </Card>\n          {pagination ? (\n            <Pagination\n              TotalCount={TotalCount}\n              setPageIndex={setPageIndex}\n              pageIndex={pageIndex}\n              className={\n                classes.textCenter + \" \" + classes.justifyContentCenter\n              }\n              pages={[\n                { text: \"Previous\" },\n                { active: true, text: \"1\" },\n\n                { text: \"Next\" },\n              ]}\n              color=\"info\"\n            />\n          ) : (\n            <></>\n          )}\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\n","// @material-ui/icons\nimport Dashboard from \"@material-ui/icons/Dashboard\";\n// import Notifications from \"@material-ui/icons/Notifications\";\n// import ViewCarouselIcon from \"@material-ui/icons/ViewCarousel\";\n\n// import DateRangeIcon from \"@material-ui/icons/DateRange\";\n// import CommentIcon from \"@material-ui/icons/Comment\";\n// import PhotoLibraryIcon from \"@material-ui/icons/PhotoLibrary\";\n// import FileCopyIcon from \"@material-ui/icons/FileCopy\";\n// import ListIcon from \"@material-ui/icons/List\";\n// import MenuBookIcon from \"@material-ui/icons/MenuBook\";\nimport SupervisedUserCircleIcon from \"@material-ui/icons/SupervisedUserCircle\";\n// import CalendarViewDayIcon from \"@material-ui/icons/CalendarViewDay\";\n// import BusinessIcon from \"@material-ui/icons/Business\";\n// import BusinessCenterIcon from \"@material-ui/icons/BusinessCenter\";\n// import LibraryBooksIcon from \"@material-ui/icons/LibraryBooks\";\nimport VerticalSplitIcon from \"@material-ui/icons/VerticalSplit\";\n// import AssignmentIcon from \"@material-ui/icons/Assignment\";\n// core components/views for Admin layout\nimport DashboardPage from \"views/Dashboard/Dashboard.js\";\n// import Slideshow from \"views/Slideshow/Slideshow\";\n// import Events from \"views/Events/Events\";\n// import Gallery from \"views/Gallery/Gallery\";\n// import Courses from \"views/Courses/Courses\";\n// import Testimonials from \"views/Testimonials/Testimonials\";\n// import Students from \"views/Students/Students\";\n// import Publications from \"views/Publications/Publications\";\n// import Subjects from \"views/Subjects/Subjects\";\n// import Semester from \"views/Semester/Semester\";\nimport InternalMarks from \"views/InternalMarks/InternalMarks\";\nimport StudentStaff from \"views/Students/StudentStaff\";\n// import InternalsNotification from \"views/InternalsNotification/InternalsNotification\";\n// import Placements from \"views/Placements/Placements\";\n\n// import Clubs from \"views/Clubs/Clubs\";\n// import Facilities from \"views/Facilities/Facilities\";\n// import Management from \"views/Management/Management\";\n// core components/views for RTL layout\n\nconst dashboardRoutes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: Dashboard,\n    component: DashboardPage,\n    layout: \"/admin\",\n  },\n  // {\n  //   path: \"/slideshow\",\n  //   name: \"Home screen Carousel\",\n  //   icon: ViewCarouselIcon,\n  //   component: Slideshow,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   path: \"/events\",\n  //   name: \"Events\",\n  //   icon: DateRangeIcon,\n  //   component: Events,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   path: \"/testimonials\",\n  //   name: \"Testimonials\",\n  //   icon: CommentIcon,\n  //   component: Testimonials,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   path: \"/gallery\",\n  //   name: \"Gallery\",\n  //   icon: PhotoLibraryIcon,\n  //   component: Gallery,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   path: \"/courses\",\n  //   name: \"Courses\",\n  //   icon: FileCopyIcon,\n  //   component: Courses,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   path: \"/semester\",\n  //   name: \"Semester\",\n  //   icon: ListIcon,\n  //   component: Semester,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   path: \"/subjects\",\n  //   name: \"Subjects\",\n  //   icon: MenuBookIcon,\n  //   component: Subjects,\n  //   layout: \"/admin\",\n  // },\n  {\n    path: \"/students\",\n    name: \"Students\",\n    icon: SupervisedUserCircleIcon,\n    component: StudentStaff,\n    layout: \"/admin\",\n  },\n  // {\n  //   path: \"/clubs\",\n  //   name: \"Clubs\",\n  //   icon: CalendarViewDayIcon,\n  //   component: Clubs,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   path: \"/facilities\",\n  //   name: \"Facilities\",\n  //   icon: BusinessIcon,\n  //   component: Facilities,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   path: \"/management\",\n  //   name: \"Management\",\n  //   icon: BusinessCenterIcon,\n  //   component: Management,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   path: \"/publications\",\n  //   name: \"Publications\",\n  //   icon: LibraryBooksIcon,\n  //   component: Publications,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   path: \"/Internalsnotification\",\n  //   name: \"Internals Notification\",\n  //   icon: Notifications,\n  //   component: InternalsNotification,\n  //   layout: \"/admin\",\n  // },\n  {\n    path: \"/internals\",\n    name: \"Internal Marks\",\n    icon: VerticalSplitIcon,\n    component: InternalMarks,\n    layout: \"/admin\",\n  },\n  // {\n  //   path: \"/placements\",\n  //   name: \"Placements\",\n  //   icon: AssignmentIcon,\n  //   component: Placements,\n  //   layout: \"/admin\",\n  // },\n];\n\nexport default dashboardRoutes;\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n// creates a beautiful scrollbar\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Navbar from \"components/Navbars/Navbar.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\n\nimport PropTypes from \"prop-types\";\n\nimport routes from \"StaffRoutes.js\";\n\nimport styles from \"assets/jss/material-dashboard-react/layouts/adminStyle.js\";\n\nimport logo from \"assets/img/favicon.png\";\n\nlet ps;\n\nconst switchRoutes = (\n  <Switch>\n    {routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      }\n      return null;\n    })}\n    <Redirect from=\"/admin\" to=\"/admin/dashboard\" />\n  </Switch>\n);\n\nconst useStyles = makeStyles(styles);\n\nexport default function StaffsLayout({ ...rest }) {\n  // styles\n  const classes = useStyles();\n  // ref to help us initialize PerfectScrollbar on windows devices\n  const mainPanel = React.createRef();\n  // states and functions\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n  // const getRoute = () => {\n  //   return window.location.pathname !== \"/admin/user\";\n  // };\n  const resizeFunction = () => {\n    if (window.innerWidth >= 960) {\n      setMobileOpen(false);\n    }\n  };\n  // initialize and destroy the PerfectScrollbar plugin\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(mainPanel.current, {\n        suppressScrollX: true,\n        suppressScrollY: false,\n      });\n      document.body.style.overflow = \"hidden\";\n    }\n    window.addEventListener(\"resize\", resizeFunction);\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n      }\n      window.removeEventListener(\"resize\", resizeFunction);\n    };\n  }, [mainPanel]);\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.mainPanel} ref={mainPanel}>\n        {/* On the /maps route we want the map to be on full screen - this is not possible if the content and conatiner classes are present because they have some paddings which would make the map smaller */}\n\n        <Sidebar\n          routes={routes}\n          logoText={\"Marygiri\"}\n          logo={logo}\n          image=\"\"\n          handleDrawerToggle={handleDrawerToggle}\n          open={mobileOpen}\n          color=\"blue\"\n          {...rest}\n        />\n        <Navbar\n          setLoggedin={rest.setLoggedin}\n          routes={routes}\n          handleDrawerToggle={handleDrawerToggle}\n          {...rest}\n        />\n        <div className={classes.content}>\n          <div className={classes.container}>{switchRoutes}</div>\n        </div>\n\n        <Footer />\n      </div>\n    </div>\n  );\n}\nStaffsLayout.propTypes = {\n  userType: PropTypes.any,\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Domain } from \"Domain\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\n\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport axios from \"axios\";\nimport Danger from \"components/Typography/Danger\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport SingleSelect from \"components/SingleSelect\";\nimport AttachFile from \"@material-ui/icons/AttachFile\";\nimport CustomFileInput from \"components/CustomFileInput/CustomFileInput.js\";\nimport Pagination from \"components/Pagination/Pagination\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function StudentHOD() {\n  const classes = useStyles();\n  const [saved, setSaved] = React.useState(false);\n  const [deleted, setDeleted] = React.useState(false);\n  const [edit, setEdit] = React.useState([]);\n  const [deletee, setDelete] = React.useState([]);\n  const [events, setEvents] = React.useState([]);\n  const [files, setFiles] = React.useState(null);\n  const [validated, setValidated] = React.useState(true);\n  const [uploaded, setUploaded] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [deleting, setDeleting] = React.useState(false);\n  const [empty, setEmpty] = React.useState(false);\n  const [saving, setSaving] = React.useState(false);\n  const [addStudent, setAddstudent] = React.useState(false);\n  const [validateFilter, setValidateFilter] = React.useState(true);\n  const [Courses, setCourses] = React.useState([]);\n  const [TotalCount, setTotalCount] = React.useState();\n\n  // const [startDate, setStartDate] = useState(new Date());\n  const CourseList = Courses.map((d) => ({\n    value: d.Id,\n    label: d.CourseName,\n  }));\n  //Filter Data\n  const [filterData, setFilterData] = React.useState({\n    PageIndex: 0,\n    PageSize: 10,\n    Year: \"\",\n    CourseId: \"\",\n  });\n  const [CourseValues, setCourseValues] = React.useState({\n    Id: null,\n    label: \"\",\n  });\n  const [CourseValues1, setCourseValues1] = React.useState({\n    Id: null,\n    label: \"\",\n  });\n  const Studentdata = events.map((d) => ({\n    Id: d.Id,\n    FullName: d.FullName,\n    RegistrationNo: d.RegistrationNo,\n    ClassNo: d.ClassNo,\n    AdmissionNo: d.AdmissionNo,\n    Mobile: d.Mobile,\n    Email: d.Email,\n    Course: d.Course,\n    CourseCode: d.CourseCode,\n    Gender: d.Gender,\n    DOB: d.DOB,\n    Password: d.Password,\n    GuardianName: d.GuardianName,\n    GuardianMobile: d.GuardianMobile,\n    GuardianRelation: d.GuardianRelation,\n    Image: d.Image,\n    CourseId: d.CourseId,\n  }));\n\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pagination, setPagination] = useState(false);\n\n  useEffect(() => {\n    let passData = {\n      PageIndex: pageIndex,\n      PageSize: 10,\n    };\n    fetch(Domain + \"/api/Student/GetAllStudents/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        setEvents(json.Data);\n        if (json.TotalCount > 10) {\n          console.log(\"pages\", Math.ceil(json.TotalCount / 10));\n          setTotalCount(Math.ceil(json.TotalCount / 10));\n\n          setPagination(true);\n        }\n      });\n  }, [pageIndex]);\n\n  function AddStudent() {\n    if (addStudent) {\n      setAddstudent(false);\n      HandleClear();\n    } else setAddstudent(true);\n  }\n  //Saved Notification trigger\n  const showSavedNotification = () => {\n    if (!saved) {\n      setSaved(true);\n      setTimeout(function () {\n        setSaved(false);\n      }, 3000);\n    }\n  };\n  //Deleted Notification Trigger\n  const showDeletedNotification = () => {\n    if (!deleted) {\n      setDeleted(true);\n      setTimeout(function () {\n        setDeleted(false);\n      }, 3000);\n    }\n  };\n\n  //Form Data\n  const [data, setData] = React.useState({\n    Id: 0,\n    FullName: \"\",\n    Mobile: \"\",\n    Email: \"\",\n    Gender: \"\",\n    DOB: \"\",\n    Password: \"\",\n    GuardianName: \"\",\n    GuardianMobile: \"\",\n    RegistrationNo: \"\",\n    AdmissionNo: \"\",\n    CourseId: null,\n    Course: \"\",\n    CourseCode: \"\",\n    GuardianRelation: \"\",\n    Status: \"Created\",\n    Image: \"\",\n  });\n\n  //PassData for getAll API\n  // let passData = {\n  //   PageIndex: 0,\n  //   PageSize: 10,\n  // };\n\n  //PaddData for Delete a Row\n  let passDelete = {\n    Id: deletee,\n    DeletedBy: 2,\n  };\n  //PassData for getting event by id\n  let passEdit = {\n    Id: edit,\n  };\n  //Function to handle Data input\n  function HandleData(e) {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n  function HandleFilterData(e) {\n    const newData = { ...filterData };\n    newData[e.target.id] = e.target.value;\n    setFilterData(newData);\n    console.log(newData);\n  }\n  function HandleClear() {\n    setData({\n      Id: 0,\n      FullName: \"\",\n      Mobile: \"\",\n      Email: \"\",\n      Gender: \"\",\n      DOB: \"\",\n      Password: \"\",\n      GuardianName: \"\",\n      GuardianMobile: \"\",\n      RegistrationNo: \"\",\n      AdmissionNo: \"\",\n      CourseId: \"\",\n      Course: \"\",\n      CourseCode: \"\",\n      GuardianRelation: \"\",\n      Status: \"Created\",\n      Image: \"\",\n    });\n  }\n  //Function for Validating fields\n  function ValidateFields() {\n    if (data.FullName == \"\") {\n      return false;\n    } else if (data.Mobile == \"\") {\n      return false;\n    } else if (data.Email == \"\") {\n      return false;\n    } else if (data.Gender == \"\") {\n      return false;\n    } else if (data.DOB == \"\") {\n      return false;\n    } else if (data.GuardianName == \"\") {\n      return false;\n    } else if (data.GuardianMobile == \"\") {\n      return false;\n    } else if (data.RegistrationNo == \"\") {\n      return false;\n    } else if (data.CourseId == \"\") {\n      return false;\n    } else if (data.AdmissionNo == \"\") {\n      return false;\n    } else if (data.GuardianRelation == \"\") {\n      return false;\n    } else if (data.Image == \"\") {\n      return false;\n    } else return true;\n  }\n  //function to upload\n  function UploadImage() {\n    if (files != null) {\n      setValidated(true);\n      setSaving(true);\n      let form_data = new FormData();\n      form_data.append(\"File\", files[0]);\n      let url = Domain + \"/api/Uploads/File/\";\n      axios\n        .post(url, form_data, {\n          headers: {\n            \"content-type\": \"multipart/form-data\",\n          },\n        })\n        .then((res) => {\n          if (res.data.Success) {\n            data.Image = res.data.Data[0];\n            setUploaded(true);\n            HandleSave();\n          } else {\n            setUploaded(false);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setUploaded(false);\n        });\n    } else if (data.Image != \"\") HandleSave();\n    else setValidated(false);\n  }\n\n  //Function to save Data\n  function HandleSave() {\n    if (ValidateFields()) {\n      setValidated(true);\n      fetch(Domain + \"/api/Student/CreateStudent/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          console.log(json);\n          if (json.Success) {\n            setData({\n              Id: 0,\n              FullName: \"\",\n              Mobile: \"\",\n              Email: \"\",\n              Gender: \"\",\n              DOB: \"\",\n              Password: \"\",\n              GuardianName: \"\",\n              GuardianMobile: \"\",\n              RegistrationNo: \"\",\n              AdmissionNo: \"\",\n              CourseId: \"\",\n              Course: \"\",\n              CourseCode: \"\",\n              GuardianRelation: \"\",\n              Status: \"Created\",\n              Image: \"\",\n            });\n            setEmpty(false);\n            showSavedNotification();\n            setSaving(false);\n            setAddstudent(false);\n          } else {\n            console.log(\"Error in insertion\", json);\n          }\n        });\n    } else {\n      setValidated(false);\n      setSaving(false);\n    }\n    setUploaded(false);\n  }\n  useEffect(() => {\n    console.log(CourseValues);\n    setFilterData((data) => ({\n      ...data,\n      CourseId: CourseValues.Id,\n    }));\n  }, [CourseValues.Id]);\n\n  useEffect(() => {\n    let PassId = {\n      Id: CourseValues1.Id,\n    };\n    //API call to get event By ID to edit a row\n\n    fetch(Domain + \"/api/Admin/GetCoursesById/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(PassId),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        console.log(json);\n\n        if (json.Success) {\n          setData((data) => ({\n            ...data,\n            CourseCode: json.Data.CourseCode,\n            CourseId: CourseValues1.Id,\n            Course: CourseValues1.Label,\n          }));\n          // console.log(json.Data);\n        }\n      });\n\n    // console.log(\"CourseValues1: \", data, CourseValues1.Id);\n  }, [CourseValues1.Id]);\n\n  useEffect(() => {\n    //PassData for get all semesters and courses for dropdown\n    let passData1 = {\n      DepartmentId: JSON.parse(window.localStorage.getItem(\"userdetails\"))\n        .DepartmentId,\n    };\n    //API call for get all course names to dropedown\n    fetch(Domain + \"/api/Admin/GetCoursesByDepartmentId/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(passData1),\n    })\n      .then((response) => response.json())\n\n      .then((json) => {\n        if (json.Data.length != 0) setCourses(json.Data);\n      });\n  });\n  useEffect(() => {\n    //API call for get latest 10 elements\n    // fetch(Domain + \"/api/Student/GetAllStudents/\", {\n    //   method: \"POST\",\n    //   headers: {\n    //     Accept: \"application/json\",\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    //   body: JSON.stringify(passData),\n    // })\n    //   .then((response) => response.json())\n\n    //   .then((json) => {\n    //     setEvents(json.Data);\n    //     if (json.Data.length == 0) setEmpty(true);\n    //     setLoading(false);\n    //   });\n\n    //API call for Delete a row\n    if (deletee.length != 0) {\n      setDeleting(true);\n      fetch(Domain + \"/api/Student/DeleteStudent/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passDelete),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setDelete([]);\n            showDeletedNotification();\n            setDeleting(false);\n          }\n        });\n    }\n\n    //API call to get event By ID to edit a row\n    if (edit.length != 0) {\n      fetch(Domain + \"/api/Student/GetStudentById/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(passEdit),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          if (json.Success) {\n            setEdit([]);\n            setData(json.Data);\n            setAddstudent(true);\n            console.log(json.Data);\n          }\n        });\n    }\n  }, [deletee, edit, saved]);\n\n  function HandleFilter() {\n    console.log(filterData);\n    if (\n      filterData.CourseId == null ||\n      filterData.CourseId == \"\" ||\n      filterData.Year == \"\"\n    )\n      setValidateFilter(false);\n    else {\n      setDeleting(true);\n      setValidateFilter(true);\n\n      //API call for get latest 10 elements\n      fetch(Domain + \"/api/Student/GetStudentsByCourseIdandDate/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(filterData),\n      })\n        .then((response) => response.json())\n\n        .then((json) => {\n          console.log(json);\n          setEmpty(false);\n          setEvents(json.Data);\n          setDeleting(false);\n          if (json.Data.length == 0) setEmpty(true);\n          setLoading(false);\n        });\n    }\n  }\n  return (\n    <>\n      <Snackbar\n        place=\"bc\"\n        color=\"success\"\n        icon={AddAlert}\n        message=\"Student Saved Successfully\"\n        open={saved}\n        closeNotification={() => setSaved(false)}\n        close\n      />\n      <Snackbar\n        place=\"bc\"\n        color=\"danger\"\n        icon={AddAlert}\n        message=\"Student Deleted Successfully\"\n        open={deleted}\n        closeNotification={() => setDeleted(false)}\n        close\n      />\n      <LoadingOverlay active={saving} spinner text=\"Saving Please Wait..\">\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <Card>\n              <form>\n                <CardHeader color=\"info\">\n                  <h4 className={classes.cardTitleWhite}>\n                    Filter Students Data\n                  </h4>\n                  <p className={classes.cardCategoryWhite}>\n                    Select the Year and Course then click search\n                  </p>\n                </CardHeader>\n\n                <CardBody>\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={3}>\n                      <CustomInput\n                        onChange={(e) => HandleFilterData(e)}\n                        value={filterData.Year}\n                        labelText=\"Year\"\n                        id=\"Year\"\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={3}>\n                      <SingleSelect\n                        noOptionsMessage=\"Create any course first\"\n                        placeholder=\"Select Course\"\n                        Options={CourseList}\n                        setValue={setCourseValues}\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                  </GridContainer>\n                  {validateFilter ? (\n                    <></>\n                  ) : (\n                    <Danger>Please select Year and Course</Danger>\n                  )}\n                </CardBody>\n                <CardFooter>\n                  <Button onClick={HandleFilter} color=\"info\">\n                    Search\n                  </Button>\n                </CardFooter>\n              </form>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      </LoadingOverlay>\n      {addStudent ? (\n        <div>\n          <LoadingOverlay active={saving} spinner text=\"Saving Please Wait..\">\n            <GridContainer>\n              <GridItem xs={12} sm={12} md={12}>\n                <Card>\n                  <form>\n                    <CardHeader color=\"info\">\n                      <h4 className={classes.cardTitleWhite}>\n                        Add New Students\n                      </h4>\n                      <p className={classes.cardCategoryWhite}>\n                        Enter the Student details below and hit Save\n                      </p>\n                    </CardHeader>\n\n                    <CardBody>\n                      <GridContainer>\n                        <GridItem xs={12} sm={12} md={4}>\n                          <CustomInput\n                            onChange={(e) => HandleData(e)}\n                            value={data.FullName}\n                            labelText=\"Full Name\"\n                            id=\"FullName\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n                        <GridItem xs={12} sm={12} md={4}>\n                          <CustomInput\n                            onChange={(e) => HandleData(e)}\n                            value={data.RegistrationNo}\n                            labelText=\"Registration No\"\n                            id=\"RegistrationNo\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n                        <GridItem xs={12} sm={12} md={4}>\n                          <SingleSelect\n                            noOptionsMessage=\"Create any course first\"\n                            placeholder=\"Select Course\"\n                            Options={CourseList}\n                            setValue={setCourseValues1}\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n                        <GridItem xs={12} sm={12} md={4}>\n                          <CustomInput\n                            disabled\n                            onChange={(e) => HandleData(e)}\n                            value={data.CourseCode}\n                            labelText=\"Course Code\"\n                            id=\"CourseCode\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n                        <GridItem xs={12} sm={12} md={4}>\n                          <CustomInput\n                            onChange={(e) => HandleData(e)}\n                            value={data.AdmissionNo}\n                            labelText=\"Admission No\"\n                            id=\"AdmissionNo\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n\n                        <GridItem xs={12} sm={12} md={4}>\n                          <CustomInput\n                            onChange={(e) => HandleData(e)}\n                            value={data.Mobile}\n                            labelText=\"Mobile\"\n                            id=\"Mobile\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n\n                        <GridItem xs={12} sm={12} md={4}>\n                          <CustomInput\n                            onChange={(e) => HandleData(e)}\n                            value={data.Email}\n                            labelText=\"Email ID\"\n                            id=\"Email\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n                        <GridItem xs={12} sm={12} md={4}>\n                          <CustomInput\n                            onChange={(e) => HandleData(e)}\n                            value={data.Gender}\n                            labelText=\"Gender\"\n                            id=\"Gender\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n                        <GridItem xs={12} sm={12} md={4}>\n                          <CustomInput\n                            onChange={(e) => HandleData(e)}\n                            value={data.DOB}\n                            labelText=\"Date Of Birth (dd/mm/yyyy)\"\n                            id=\"DOB\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n\n                        <GridItem xs={12} sm={12} md={4}>\n                          <CustomInput\n                            onChange={(e) => HandleData(e)}\n                            value={data.GuardianName}\n                            labelText=\"Guardian Name\"\n                            id=\"GuardianName\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n\n                        <GridItem xs={12} sm={12} md={4}>\n                          <CustomInput\n                            onChange={(e) => HandleData(e)}\n                            value={data.GuardianMobile}\n                            labelText=\"Guardian Mobile\"\n                            id=\"GuardianMobile\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n                        <GridItem xs={12} sm={12} md={4}>\n                          <CustomInput\n                            onChange={(e) => HandleData(e)}\n                            value={data.GuardianRelation}\n                            labelText=\"Gurdian Relation\"\n                            id=\"GuardianRelation\"\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                          />\n                        </GridItem>\n                        <GridItem xs={12} sm={5} md={4}>\n                          {\" \"}\n                          <CustomFileInput\n                            setFiles={setFiles}\n                            saved={uploaded}\n                            formControlProps={{\n                              fullWidth: true,\n                            }}\n                            inputProps={{\n                              placeholder: \"Click here to upload an image\",\n                            }}\n                            endButton={{\n                              buttonProps: {\n                                round: true,\n                                color: \"info\",\n                                justIcon: true,\n                                filebutton: true,\n                              },\n                              icon: <AttachFile />,\n                            }}\n                          />\n                          {validated ? (\n                            <></>\n                          ) : (\n                            <Danger>\n                              Please enter all the details to save\n                            </Danger>\n                          )}\n                        </GridItem>\n                      </GridContainer>\n                    </CardBody>\n                    <CardFooter>\n                      <Button onClick={AddStudent} color=\"danger\">\n                        Cancel\n                      </Button>\n                      <Button onClick={HandleClear} color=\"defualt\">\n                        Clear\n                      </Button>\n                      <Button onClick={UploadImage} color=\"info\">\n                        Save\n                      </Button>\n                    </CardFooter>\n                  </form>\n                </Card>\n              </GridItem>\n            </GridContainer>\n          </LoadingOverlay>\n        </div>\n      ) : (\n        <Button onClick={AddStudent} color=\"info\">\n          Add Student\n        </Button>\n      )}\n\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>List Of All Students</h4>\n              <p className={classes.cardCategoryWhite}>\n                All students are listed below, you can delete or edit them.\n              </p>\n            </CardHeader>\n            <CardBody>\n              <LoadingOverlay active={deleting} spinner text=\"Please Wait..\">\n                {empty ? (\n                  <p>empty</p>\n                ) : (\n                  <Table\n                    tableHeaderColor=\"info\"\n                    tableHead={[\n                      \"\",\n                      \"Id\",\n                      \"Full Name\",\n                      \"Registration No\",\n                      \"Class Number\",\n                      \"Admission Number\",\n                      \"Mobile\",\n                      \"Email\",\n                      \"Course\",\n                      \"Course code\",\n                      \"Gender\",\n                      \"DOB\",\n                      \"Password\",\n                      \"Gur_Name\",\n                      \"Gur_Mobile\",\n                      \"Gur_Relation\",\n                      \"Image\",\n                      \"CourseId\",\n                      \"Actions\",\n                      // \"Created By\",\n                      // \"Created Date\",\n                      // \"Modified By\",\n                      // \"Modified Date\",\n                      // \"Deteled By\",\n                      // \"Deleted Date\",\n                    ]}\n                    tableData={Studentdata}\n                    setEdit={setEdit}\n                    setDelete={setDelete}\n                    loading={loading}\n                  />\n                )}\n              </LoadingOverlay>\n            </CardBody>\n          </Card>\n          {pagination ? (\n            <Pagination\n              TotalCount={TotalCount}\n              setPageIndex={setPageIndex}\n              pageIndex={pageIndex}\n              className={\n                classes.textCenter + \" \" + classes.justifyContentCenter\n              }\n              pages={[\n                { text: \"Previous\" },\n                { active: true, text: \"1\" },\n\n                { text: \"Next\" },\n              ]}\n              color=\"info\"\n            />\n          ) : (\n            <></>\n          )}\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n}\n","// @material-ui/icons\nimport Dashboard from \"@material-ui/icons/Dashboard\";\nimport Notifications from \"@material-ui/icons/Notifications\";\n// import ViewCarouselIcon from \"@material-ui/icons/ViewCarousel\";\n// import PeopleIcon from \"@material-ui/icons/People\";\n// import DateRangeIcon from \"@material-ui/icons/DateRange\";\n// import CommentIcon from \"@material-ui/icons/Comment\";\n// import PhotoLibraryIcon from \"@material-ui/icons/PhotoLibrary\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport ListIcon from \"@material-ui/icons/List\";\nimport MenuBookIcon from \"@material-ui/icons/MenuBook\";\nimport SupervisedUserCircleIcon from \"@material-ui/icons/SupervisedUserCircle\";\n// import CalendarViewDayIcon from \"@material-ui/icons/CalendarViewDay\";\n// import BusinessIcon from \"@material-ui/icons/Business\";\n// import BusinessCenterIcon from \"@material-ui/icons/BusinessCenter\";\n// import LibraryBooksIcon from \"@material-ui/icons/LibraryBooks\";\nimport VerticalSplitIcon from \"@material-ui/icons/VerticalSplit\";\n// import AssignmentIcon from \"@material-ui/icons/Assignment\";\n// import EmailIcon from \"@material-ui/icons/Email\";\n// core components/views for Admin layout\nimport DashboardPage from \"views/Dashboard/Dashboard.js\";\n// import Slideshow from \"views/Slideshow/Slideshow\";\n// import Events from \"views/Events/Events\";\n// import Gallery from \"views/Gallery/Gallery\";\nimport Courses from \"views/Courses/Courses\";\n// import Testimonials from \"views/Testimonials/Testimonials\";\n// import Students from \"views/Students/Students\";\n// import Publications from \"views/Publications/Publications\";\nimport Subjects from \"views/Subjects/Subjects\";\nimport Semester from \"views/Semester/Semester\";\nimport InternalMarks from \"views/InternalMarks/InternalMarks\";\nimport InternalsNotification from \"views/InternalsNotification/InternalsNotification\";\nimport StudentHOD from \"views/Students/StudentHOD\";\n// import Placements from \"views/Placements/Placements\";\n// import Enquiry from \"views/Enquiry/Enquiry\";\n\n// import Clubs from \"views/Clubs/Clubs\";\n// import Facilities from \"views/Facilities/Facilities\";\n// import Management from \"views/Management/Management\";\n// import Staffs from \"views/Sfatts/Staffs\";\n// core components/views for RTL layout\n\nconst dashboardRoutes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: Dashboard,\n    component: DashboardPage,\n    layout: \"/admin\",\n  },\n  // {\n  //   path: \"/staffs\",\n  //   name: \"Manage Staffs\",\n  //   icon: PeopleIcon,\n  //   component: Staffs,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   path: \"/slideshow\",\n  //   name: \"Home screen Carousel\",\n  //   icon: ViewCarouselIcon,\n  //   component: Slideshow,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   path: \"/events\",\n  //   name: \"Events\",\n  //   icon: DateRangeIcon,\n  //   component: Events,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   path: \"/testimonials\",\n  //   name: \"Testimonials\",\n  //   icon: CommentIcon,\n  //   component: Testimonials,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   path: \"/gallery\",\n  //   name: \"Gallery\",\n  //   icon: PhotoLibraryIcon,\n  //   component: Gallery,\n  //   layout: \"/admin\",\n  // },\n\n  {\n    path: \"/courses\",\n    name: \"Courses\",\n    icon: FileCopyIcon,\n    component: Courses,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/semester\",\n    name: \"Semester\",\n    icon: ListIcon,\n    component: Semester,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/subjects\",\n    name: \"Subjects\",\n    icon: MenuBookIcon,\n    component: Subjects,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/students\",\n    name: \"Students\",\n    icon: SupervisedUserCircleIcon,\n    component: StudentHOD,\n    layout: \"/admin\",\n  },\n  // {\n  //   path: \"/clubs\",\n  //   name: \"Clubs\",\n  //   icon: CalendarViewDayIcon,\n  //   component: Clubs,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   path: \"/facilities\",\n  //   name: \"Facilities\",\n  //   icon: BusinessIcon,\n  //   component: Facilities,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   path: \"/management\",\n  //   name: \"Management\",\n  //   icon: BusinessCenterIcon,\n  //   component: Management,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   path: \"/publications\",\n  //   name: \"Publications\",\n  //   icon: LibraryBooksIcon,\n  //   component: Publications,\n  //   layout: \"/admin\",\n  // },\n  {\n    path: \"/Internalsnotification\",\n    name: \"Internals Notification\",\n    icon: Notifications,\n    component: InternalsNotification,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/internals\",\n    name: \"Internal Marks\",\n    icon: VerticalSplitIcon,\n    component: InternalMarks,\n    layout: \"/admin\",\n  },\n  // {\n  //   path: \"/placements\",\n  //   name: \"Placements\",\n  //   icon: AssignmentIcon,\n  //   component: Placements,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   path: \"/enquiry\",\n  //   name: \"Enquiry\",\n  //   icon: EmailIcon,\n  //   component: Enquiry,\n  //   layout: \"/admin\",\n  // },\n];\n\nexport default dashboardRoutes;\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n// creates a beautiful scrollbar\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Navbar from \"components/Navbars/Navbar.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\n\nimport PropTypes from \"prop-types\";\n\nimport routes from \"HodRoutes.js\";\n\nimport styles from \"assets/jss/material-dashboard-react/layouts/adminStyle.js\";\n\nimport logo from \"assets/img/favicon.png\";\n\nlet ps;\n\nconst switchRoutes = (\n  <Switch>\n    {routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      }\n      return null;\n    })}\n    <Redirect from=\"/admin\" to=\"/admin/dashboard\" />\n  </Switch>\n);\n\nconst useStyles = makeStyles(styles);\n\nexport default function HodLayout({ ...rest }) {\n  // styles\n  const classes = useStyles();\n  // ref to help us initialize PerfectScrollbar on windows devices\n  const mainPanel = React.createRef();\n  // states and functions\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n  // const getRoute = () => {\n  //   return window.location.pathname !== \"/admin/user\";\n  // };\n  const resizeFunction = () => {\n    if (window.innerWidth >= 960) {\n      setMobileOpen(false);\n    }\n  };\n  // initialize and destroy the PerfectScrollbar plugin\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(mainPanel.current, {\n        suppressScrollX: true,\n        suppressScrollY: false,\n      });\n      document.body.style.overflow = \"hidden\";\n    }\n    window.addEventListener(\"resize\", resizeFunction);\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n      }\n      window.removeEventListener(\"resize\", resizeFunction);\n    };\n  }, [mainPanel]);\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.mainPanel} ref={mainPanel}>\n        {/* On the /maps route we want the map to be on full screen - this is not possible if the content and conatiner classes are present because they have some paddings which would make the map smaller */}\n\n        <Sidebar\n          routes={routes}\n          logoText={\"Marygiri\"}\n          logo={logo}\n          image=\"\"\n          handleDrawerToggle={handleDrawerToggle}\n          open={mobileOpen}\n          color=\"blue\"\n          {...rest}\n        />\n        <Navbar\n          setLoggedin={rest.setLoggedin}\n          routes={routes}\n          handleDrawerToggle={handleDrawerToggle}\n          {...rest}\n        />\n        <div className={classes.content}>\n          <div className={classes.container}>{switchRoutes}</div>\n        </div>\n\n        <Footer />\n      </div>\n    </div>\n  );\n}\nHodLayout.propTypes = {\n  userType: PropTypes.any,\n};\n","export default __webpack_public_path__ + \"static/media/placeholder.afc96671.jpg\";","import React from \"react\";\n// @material-ui/core components\nimport PropTypes from \"prop-types\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardAvatar from \"components/Card/CardAvatar.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport { useLocation } from \"react-router-dom\";\nimport avatar from \"assets/img/placeholder.jpg\";\n\nconst styles = {\n  cardCategoryWhite: {\n    color: \"rgba(255,255,255,.62)\",\n    margin: \"0\",\n    fontSize: \"14px\",\n    marginTop: \"0\",\n    marginBottom: \"0\",\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function UserProfile({ userdetails }) {\n  const classes = useStyles();\n  let locations = useLocation();\n  console.log(\"user:\", userdetails, locations);\n  return (\n    <div>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={4}>\n          <Card profile>\n            <CardAvatar profile>\n              <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                <img src={avatar} alt=\"...\" />\n              </a>\n            </CardAvatar>\n            <CardBody profile>\n              <h6 className={classes.cardCategory}>CEO / CO-FOUNDER</h6>\n              <h4 className={classes.cardTitle}>Alec Thompson</h4>\n              <p className={classes.description}>\n                Don{\"'\"}t be scared of the truth because we need to restart the\n                human foundation in truth And I love you like Kanye loves Kanye\n                I love Rick Owens’ bed design but the back is...\n              </p>\n              <Button color=\"primary\" round>\n                Follow\n              </Button>\n            </CardBody>\n          </Card>\n        </GridItem>\n      </GridContainer>\n    </div>\n  );\n}\n\nUserProfile.propTypes = {\n  userdetails: PropTypes.any,\n};\n","import React, { useEffect } from \"react\";\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\n// core components\nimport Admin from \"layouts/Admin.js\";\nimport \"assets/css/material-dashboard-react.css?v=1.10.0\";\nimport LoginPage from \"layouts/LoginPage/LoginPage\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport StaffsLayout from \"layouts/StaffsLayout\";\nimport HodLayout from \"layouts/HodLayout\";\nimport UserProfile from \"views/UserProfile/UserProfile\";\nexport default function App() {\n  const [loggedIn, setLoggedin] = React.useState(undefined);\n  const [notify, setNotification] = React.useState(false);\n  const [bc, setBC] = React.useState(false);\n  const [userType, setUserType] = React.useState(\"\");\n  const [userdetails, setUserdetails] = React.useState([]);\n  console.log(\"fff:\", loggedIn);\n  useEffect(() => {\n    if (loggedIn == undefined) {\n      setLoggedin(JSON.parse(window.localStorage.getItem(\"LoggedIn\")));\n      setUserType(window.localStorage.getItem(\"UserType\"));\n      setUserdetails(JSON.parse(window.localStorage.getItem(\"userdetails\")));\n    }\n  }, []);\n  console.log(\n    \"loggedIn:\",\n    loggedIn,\n    \"userType:\",\n    userType,\n    \"userdetails:\",\n    userdetails\n  );\n  useEffect(() => {\n    console.log(\"logedin changed:\", loggedIn);\n    if (loggedIn != undefined)\n      window.localStorage.setItem(\"LoggedIn\", JSON.stringify(loggedIn));\n    else window.localStorage.setItem(\"LoggedIn\", JSON.stringify(false));\n\n    if (userType != \"\") window.localStorage.setItem(\"UserType\", userType);\n    if (userdetails != [])\n      window.localStorage.setItem(\"userdetails\", JSON.stringify(userdetails));\n  }, [loggedIn, userType, userdetails]);\n  const showNotification = () => {\n    if (!bc) {\n      setBC(true);\n      setTimeout(function () {\n        setBC(false);\n      }, 3000);\n    }\n  };\n  useEffect(() => {\n    // console.log(userType);\n    if (notify) {\n      showNotification();\n    }\n  }, [notify, userType]);\n  return (\n    <>\n      <Snackbar\n        place=\"tr\"\n        color=\"success\"\n        icon={AddAlert}\n        message={\"Logged in as \" + userType}\n        open={bc}\n        closeNotification={() => setBC(false)}\n        close\n      />\n      <HashRouter>\n        <>\n          {loggedIn ? (\n            <div>\n              {(() => {\n                if (userType == \"Admin\") {\n                  return (\n                    <Switch>\n                      <Route path=\"/admin\">\n                        <Admin setLoggedin={setLoggedin} />\n                      </Route>\n                      <Route path=\"/user\">\n                        <UserProfile\n                          userdetails={userdetails}\n                          setLoggedin={setLoggedin}\n                        />\n                      </Route>\n                      <Redirect from=\"/\" to=\"/admin/dashboard\" />\n                    </Switch>\n                  );\n                } else if (userType == \"Staff\") {\n                  return (\n                    <Switch>\n                      <Route path=\"/admin\">\n                        <StaffsLayout setLoggedin={setLoggedin} />\n                      </Route>\n                      <Redirect from=\"/\" to=\"/admin/dashboard\" />\n                    </Switch>\n                  );\n                } else if (userType == \"HOD\") {\n                  return (\n                    <Switch>\n                      <Route path=\"/admin\">\n                        <HodLayout setLoggedin={setLoggedin} />\n                      </Route>\n                      <Redirect from=\"/\" to=\"/admin/dashboard\" />\n                    </Switch>\n                  );\n                }\n              })()}\n            </div>\n          ) : (\n            <Switch>\n              <Route path=\"/login\">\n                <LoginPage\n                  setLoggedin={setLoggedin}\n                  setNotification={setNotification}\n                  setUserType={setUserType}\n                  setUserdetails={setUserdetails}\n                />\n              </Route>\n\n              <Redirect from=\"/\" to=\"/login\" />\n            </Switch>\n          )}\n        </>\n      </HashRouter>\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// core components\n\nimport \"assets/css/material-dashboard-react.css?v=1.10.0\";\nimport App from \"App\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}